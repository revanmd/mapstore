(self.webpackChunkmapstore2=self.webpackChunkmapstore2||[]).push([[8051],{28854:(e,a,p)=>{"use strict";p.r(a),p.d(a,{default:()=>C});var n=p(45697),t=p.n(n),r=p(124852),l=p.n(r),s=p(630294),o=p(804504),m=p(12838),y=p(710187),c=p(101092),i=p(171703),u=p(727418),T=p.n(u);function b(e,a,p){return a in e?Object.defineProperty(e,a,{value:p,enumerable:!0,configurable:!0,writable:!0}):e[a]=p,e}class f extends l().Component{render(){return l().createElement("div",{id:"mapstore-maptype"},l().createElement(s.Label,null,l().createElement(o.Z,{msgId:"manager.mapTypes_combo"})),l().createElement(s.FormGroup,{bsSize:"small"},l().createElement(s.FormControl,{value:this.props.mapType,componentClass:"select",ref:"mapType",onChange:this.props.onChangeMapType},this.props.mapTypes.map((e=>l().createElement("option",{value:e.key,key:e.key},e.label))))))}}b(f,"propTypes",{style:t().object,className:t().object,mapType:t().string,mapTypes:t().array,onChangeMapType:t().func}),b(f,"defaultProps",{mapType:"leaflet",onChangeMapType:()=>{},mapTypes:[{key:"leaflet",label:"Leaflet"},{key:"openlayers",label:"OpenLayers"},{key:"cesium",label:"Cesium"}]});const g=(0,i.connect)((e=>({mapType:(0,c.$v)(e)})),{onChangeMapType:(0,m.qC)(y.gj,(e=>e.target.value))})(f),C={MapTypePlugin:T()(g,{OmniBar:{name:"MapType",tool:!0,position:6,priority:1}}),reducers:{maptype:p(962565).Z}}}}]);