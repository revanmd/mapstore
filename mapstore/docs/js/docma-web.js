!function(t,e){"function"==typeof define&&define.amd&&!0===define.amd.dust?define("dust.core",[],e):"object"==typeof exports?module.exports=e():t.dust=e()}(this,function(){function getTemplate(t,e){if(t)return"function"==typeof t&&t.template?t.template:dust.isTemplateFn(t)?t:!1!==e?dust.cache[t]:void 0}function load(t,e,n){if(!t)return e.setError(new Error("No template or template name provided to render"));var r=getTemplate(t,dust.config.cache);return r?r(e,Context.wrap(n,r.templateName)):dust.onLoad?e.map(function(e){function r(t,r){var i;if(t)return e.setError(t);if(!(i=getTemplate(r,!1)||getTemplate(o,dust.config.cache))){if(!dust.compile)return e.setError(new Error("Dust compiler not available"));i=dust.loadSource(dust.compile(r,o))}i(e,Context.wrap(n,i.templateName)).end()}var o=t;3===dust.onLoad.length?dust.onLoad(o,n.options,r):dust.onLoad(o,r)}):e.setError(new Error("Template Not Found: "+t))}function Context(t,e,n,r,o){void 0===t||t instanceof Stack||(t=new Stack(t)),this.stack=t,this.global=e,this.options=n,this.blocks=r,this.templateName=o}function getWithResolvedData(t,e,n){return function(r){return t.push(r)._get(e,n)}}function Stack(t,e,n,r){this.tail=e,this.isObject=t&&"object"==typeof t,this.head=t,this.index=n,this.of=r}function Stub(t){this.head=new Chunk(this),this.callback=t,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(t,e,n){this.root=t,this.next=e,this.data=[],this.flushable=!1,this.taps=n}function Tap(t,e){this.head=t,this.tail=e}var dust={version:"2.7.2"},ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){};dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},function(){var t,e,n={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4};"undefined"!=typeof console&&console.log?(t=console.log,e="function"==typeof t?function(){t.apply(console,arguments)}:function(){t(Array.prototype.slice.apply(arguments).join(" "))}):e=EMPTY_FUNC,dust.log=function(t,r){r=r||INFO,n[r]>=n[dust.debugLevel]&&e("[DUST:"+r+"]",t)},dust.debugLevel="NONE","undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG)}(),dust.helpers={},dust.cache={},dust.register=function(t,e){t&&(e.templateName=t,!1!==dust.config.cache&&(dust.cache[t]=e))},dust.render=function(t,e,n){var r=new Stub(n).head;try{load(t,r,e).end()}catch(t){r.setError(t)}},dust.stream=function(t,e){var n=new Stream,r=n.head;return dust.nextTick(function(){try{load(t,r,e).end()}catch(t){r.setError(t)}}),n},dust.loadSource=function(source){return eval(source)},Array.isArray?dust.isArray=Array.isArray:dust.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)},dust.nextTick=function(){return function(t){setTimeout(t,0)}}(),dust.isEmpty=function(t){return!(0===t||(!dust.isArray(t)||t.length)&&t)},dust.isEmptyObject=function(t){var e;if(null===t)return!1;if(void 0===t)return!1;if(t.length>0)return!1;for(e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0},dust.isTemplateFn=function(t){return"function"==typeof t&&t.__dustBody},dust.isThenable=function(t){return t&&"object"==typeof t&&"function"==typeof t.then},dust.isStreamable=function(t){return t&&"function"==typeof t.on&&"function"==typeof t.pipe},dust.filter=function(t,e,n,r){var o,i,s,u;if(n)for(o=0,i=n.length;o<i;o++)s=n[o],s.length&&(u=dust.filters[s],"s"===s?e=null:"function"==typeof u?t=u(t,r):dust.log("Invalid filter `"+s+"`",WARN));return e&&(t=dust.filters[e](t,r)),t},dust.filters={h:function(t){return dust.escapeHtml(t)},j:function(t){return dust.escapeJs(t)},u:encodeURI,uc:encodeURIComponent,js:function(t){return dust.escapeJSON(t)},jp:function(t){return JSON?JSON.parse(t):(dust.log("JSON is undefined; could not parse `"+t+"`",WARN),t)}},dust.makeBase=dust.context=function(t,e){return new Context(void 0,t,e)},Context.wrap=function(t,e){return t instanceof Context?t:new Context(t,{},{},null,e)},Context.prototype.get=function(t,e){return"string"==typeof t&&("."===t[0]&&(e=!0,t=t.substr(1)),t=t.split(".")),this._get(e,t)},Context.prototype._get=function(t,e){var n,r,o,i,s,u=this.stack||{},a=1;if(r=e[0],o=e.length,t&&0===o)i=u,u=u.head;else{if(t)u&&(u=u.head?u.head[r]:void 0);else{for(;u&&(!u.isObject||(i=u.head,void 0===(n=u.head[r])));)u=u.tail;u=void 0!==n?n:this.global&&this.global[r]}for(;u&&a<o;){if(dust.isThenable(u))return u.then(getWithResolvedData(this,t,e.slice(a)));i=u,u=u[e[a]],a++}}return"function"==typeof u?(s=function(){try{return u.apply(i,arguments)}catch(t){throw dust.log(t,ERROR),t}},s.__dustBody=!!u.__dustBody,s):(void 0===u&&dust.log("Cannot find reference `{"+e.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),u)},Context.prototype.getPath=function(t,e){return this._get(t,e)},Context.prototype.push=function(t,e,n){return void 0===t?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(t,this.stack,e,n))},Context.prototype.pop=function(){var t=this.current();return this.stack=this.stack&&this.stack.tail,t},Context.prototype.rebase=function(t){return new Context(t,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var t=this.rebase();return t.stack=this.stack,t},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(t){var e,n,r;if("function"==typeof t&&(t=t(new Chunk,this).data.join("")),!(e=this.blocks))return dust.log("No blocks for context `"+t+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(n=e.length;n--;)if(r=e[n][t])return r;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(t){var e,n=this.blocks;return t?(e=n?n.concat([t]):[t],new Context(this.stack,this.global,this.options,e,this.getTemplateName())):this},Context.prototype.resolve=function(t){var e;return"function"!=typeof t?t:(e=(new Chunk).render(t,this),e instanceof Chunk?e.data.join(""):e)},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var t=this.head;t;){if(!t.flushable)return t.error?(this.callback(t.error),dust.log("Rendering failed with error `"+t.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=t.data.join(""),t=t.next,this.head=t}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var t=this.head;t;){if(!t.flushable)return t.error?(this.emit("error",t.error),this.emit("end"),dust.log("Streaming failed with error `"+t.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",t.data.join("")),t=t.next,this.head=t}this.emit("end")},Stream.prototype.emit=function(t,e){var n,r,o=this.events||{},i=o[t]||[];if(!i.length)return dust.log("Stream broadcasting, but no listeners for `"+t+"`",DEBUG),!1;for(i=i.slice(0),n=0,r=i.length;n<r;n++)i[n](e);return!0},Stream.prototype.on=function(t,e){var n=this.events=this.events||{},r=n[t]=n[t]||[];return"function"!=typeof e?dust.log("No callback function provided for `"+t+"` event listener",WARN):r.push(e),this},Stream.prototype.pipe=function(t){if("function"!=typeof t.write||"function"!=typeof t.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var e=!1;return"function"==typeof t.emit&&t.emit("pipe",this),"function"==typeof t.on&&t.on("error",function(){e=!0}),this.on("data",function(n){if(!e)try{t.write(n,"utf8")}catch(t){dust.log(t,ERROR)}}).on("end",function(){if(!e)try{t.end(),e=!0}catch(t){dust.log(t,ERROR)}})},Chunk.prototype.write=function(t){var e=this.taps;return e&&(t=e.go(t)),this.data.push(t),this},Chunk.prototype.end=function(t){return t&&this.write(t),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(t){var e=new Chunk(this.root,this.next,this.taps),n=new Chunk(this.root,e,this.taps);this.next=n,this.flushable=!0;try{t(n)}catch(t){dust.log(t,ERROR),n.setError(t)}return e},Chunk.prototype.tap=function(t){var e=this.taps;return this.taps=e?e.push(t):new Tap(t),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(t,e){return t(this,e)},Chunk.prototype.reference=function(t,e,n,r){return"function"==typeof t?(t=t.apply(e.current(),[this,e,null,{auto:n,filters:r}]),t instanceof Chunk?t:this.reference(t,e,n,r)):dust.isThenable(t)?this.await(t,e,null,n,r):dust.isStreamable(t)?this.stream(t,e,null,n,r):dust.isEmpty(t)?this:this.write(dust.filter(t,n,r,e))},Chunk.prototype.section=function(t,e,n,r){var o,i,s,u=n.block,a=n.else,c=this;if("function"==typeof t&&!dust.isTemplateFn(t)){try{t=t.apply(e.current(),[this,e,n,r])}catch(t){return dust.log(t,ERROR),this.setError(t)}if(t instanceof Chunk)return t}if(dust.isEmptyObject(n))return c;if(dust.isEmptyObject(r)||(e=e.push(r)),dust.isArray(t)){if(u){if((i=t.length)>0){for(s=e.stack&&e.stack.head||{},s.$len=i,o=0;o<i;o++)s.$idx=o,c=u(c,e.push(t[o],o,i));return s.$idx=void 0,s.$len=void 0,c}if(a)return a(this,e)}}else{if(dust.isThenable(t))return this.await(t,e,n);if(dust.isStreamable(t))return this.stream(t,e,n);if(!0===t){if(u)return u(this,e)}else if(t||0===t){if(u)return u(this,e.push(t))}else if(a)return a(this,e)}return dust.log("Section without corresponding key in template `"+e.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(t,e,n){var r=n.block,o=n.else;if(dust.isEmpty(t)){if(o)return o(this,e)}else{if(r)return r(this,e);dust.log("No block for exists check in template `"+e.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(t,e,n){var r=n.block,o=n.else;if(dust.isEmpty(t)){if(r)return r(this,e);dust.log("No block for not-exists check in template `"+e.getTemplateName()+"`",DEBUG)}else if(o)return o(this,e);return this},Chunk.prototype.block=function(t,e,n){var r=t||n.block;return r?r(this,e):this},Chunk.prototype.partial=function(t,e,n,r){var o;return void 0===r&&(r=n,n=e),dust.isEmptyObject(r)||(n=n.clone(),o=n.pop(),n=n.push(r).push(o)),dust.isTemplateFn(t)?this.capture(t,e,function(t,e){n.templateName=t,load(t,e,n).end()}):(n.templateName=t,load(t,this,n))},Chunk.prototype.helper=function(t,e,n,r,o){var i,s=this,u=r.filters;if(void 0===o&&(o="h"),!dust.helpers[t])return dust.log("Helper `"+t+"` does not exist",WARN),s;try{return(i=dust.helpers[t](s,e,n,r))instanceof Chunk?i:("string"==typeof u&&(u=u.split("|")),dust.isEmptyObject(n)?s.reference(i,e,o,u):s.section(i,e,n,r))}catch(e){return dust.log("Error in helper `"+t+"`: "+e.message,ERROR),s.setError(e)}},Chunk.prototype.await=function(t,e,n,r,o){return this.map(function(i){t.then(function(t){i=n?i.section(t,e,n):i.reference(t,e,r,o),i.end()},function(t){var r=n&&n.error;r?i.render(r,e.push(t)).end():(dust.log("Unhandled promise rejection in `"+e.getTemplateName()+"`",INFO),i.end())})})},Chunk.prototype.stream=function(t,e,n,r,o){var i=n&&n.block,s=n&&n.error;return this.map(function(u){var a=!1;t.on("data",function(t){a||(i?u=u.map(function(n){n.render(i,e.push(t)).end()}):n||(u=u.reference(t,e,r,o)))}).on("error",function(t){a||(s?u.render(s,e.push(t)):dust.log("Unhandled stream error in `"+e.getTemplateName()+"`",INFO),a||(a=!0,u.end()))}).on("end",function(){a||(a=!0,u.end())})})},Chunk.prototype.capture=function(t,e,n){return this.map(function(r){var o=new Stub(function(t,e){t?r.setError(t):n(e,r)});t(o.head,e).end()})},Chunk.prototype.setError=function(t){return this.error=t,this.root.flush(),this};for(var f in Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);Tap.prototype.push=function(t){return new Tap(t,this)},Tap.prototype.go=function(t){for(var e=this;e;)t=e.head(t),e=e.tail;return t};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(t){return"string"==typeof t||t&&"function"==typeof t.toString?("string"!=typeof t&&(t=t.toString()),HCHARS.test(t)?t.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):t):t};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(t){return"string"==typeof t?t.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):t},dust.escapeJSON=function(t){return JSON?JSON.stringify(t).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+t+"`",WARN),t)},dust}),"function"==typeof define&&define.amd&&!0===define.amd.dust&&define(["require","dust.core"],function(t,e){return e.onLoad=function(e,n){t([e],function(){n()})},e});
!function(e,t){"function"==typeof define&&define.amd&&!0===define.amd.dust?define(["dust.core"],t):"object"==typeof exports?module.exports=t(require("dustjs-linkedin")):t(e.dust)}(this,function(e){function t(t,n,r){r=r||"INFO",t=t?"{@"+t+"}: ":"",e.log(t+n,r)}function n(e){l[e]||(t(e,"Deprecation warning: "+e+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),t(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+e.replace(/\W+/g,""),"WARN"),l[e]=!0)}function r(e){return e.stack.tail&&e.stack.tail.head&&void 0!==e.stack.tail.head.__select__}function s(e){return r(e)&&e.get("__select__")}function i(e,t){var n,r=e.stack.head,s=e.rebase();e.stack&&e.stack.tail&&(s.stack=e.stack.tail);var i={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(n in t)i[n]=t[n];return s.push({__select__:i}).push(r,e.stack.index,e.stack.of)}function o(e){var t,n;if(e.isDeferredPending=!0,e.deferreds.length)for(e.isDeferredComplete=!0,t=0,n=e.deferreds.length;t<n;t++)e.deferreds[t]();e.isDeferredPending=!1}function a(e,t){return"function"==typeof t?t.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):t}function c(e,t){return function(n,r,s,i){return u(n,r,s,i,e,t)}}function u(e,n,r,i,o,a){var c,u,l,f,k=r.block,p=r.else,y=s(n)||{};if(y.isResolved&&!y.isDeferredPending)return e;if(i.hasOwnProperty("key"))u=i.key;else{if(!y.hasOwnProperty("key"))return t(o,"No key specified","WARN"),e;u=y.key}return f=i.type||y.type,u=d(n.resolve(u),f),l=d(n.resolve(i.value),f),a(u,l)?(y.isPending||(c=!0,y.isPending=!0),k&&(e=e.render(k,n)),c&&(y.isResolved=!0)):p&&(e=e.render(p,n)),e}function d(e,t){switch(t&&(t=t.toLowerCase()),t){case"number":return+e;case"string":return String(e);case"boolean":return e="false"!==e&&e,Boolean(e);case"date":return new Date(e)}return e}var l={},f={tap:function(e,t,r){return n("tap"),r.resolve(e)},sep:function(e,t,n){var r=n.block;return t.stack.index===t.stack.of-1?e:r?r(e,t):e},first:function(e,t,n){return 0===t.stack.index?n.block(e,t):e},last:function(e,t,n){return t.stack.index===t.stack.of-1?n.block(e,t):e},contextDump:function(e,n,r,s){var i,o,c=n.resolve(s.to),u=n.resolve(s.key);switch(u){case"full":i=n.stack;break;default:i=n.stack.head}switch(o=JSON.stringify(i,a,2),c){case"console":t("contextDump",o);break;default:o=o.replace(/</g,"\\u003c"),e=e.write(o)}return e},math:function(e,n,r,a){var c,u=a.key,d=a.method,l=a.operand,f=a.round;if(!a.hasOwnProperty("key")||!a.method)return t("math","`key` or `method` was not provided","ERROR"),e;switch(u=parseFloat(n.resolve(u)),l=parseFloat(n.resolve(l)),d){case"mod":0===l&&t("math","Division by 0","ERROR"),c=u%l;break;case"add":c=u+l;break;case"subtract":c=u-l;break;case"multiply":c=u*l;break;case"divide":0===l&&t("math","Division by 0","ERROR"),c=u/l;break;case"ceil":case"floor":case"round":case"abs":c=Math[d](u);break;case"toint":c=parseInt(u,10);break;default:t("math","Method `"+d+"` is not supported","ERROR")}return void 0!==c&&(f&&(c=Math.round(c)),r&&r.block?(n=i(n,{key:c}),e=e.render(r.block,n),o(s(n))):e=e.write(c)),e},select:function(e,n,r,a){var c=r.block,u={};return a.hasOwnProperty("key")&&(u.key=n.resolve(a.key)),a.hasOwnProperty("type")&&(u.type=a.type),c?(n=i(n,u),e=e.render(c,n),o(s(n))):t("select","Missing body block","WARN"),e},eq:c("eq",function(e,t){return e===t}),ne:c("ne",function(e,t){return e!==t}),lt:c("lt",function(e,t){return e<t}),lte:c("lte",function(e,t){return e<=t}),gt:c("gt",function(e,t){return e>t}),gte:c("gte",function(e,t){return e>=t}),any:function(e,n,r,i){var o=s(n);return o?o.isDeferredComplete?t("any","Must not be nested inside {@any} or {@none} block","ERROR"):e=e.map(function(e){o.deferreds.push(function(){o.isResolved&&(e=e.render(r.block,n)),e.end()})}):t("any","Must be used inside a {@select} block","ERROR"),e},none:function(e,n,r,i){var o=s(n);return o?o.isDeferredComplete?t("none","Must not be nested inside {@any} or {@none} block","ERROR"):e=e.map(function(e){o.deferreds.push(function(){o.isResolved||(e=e.render(r.block,n)),e.end()})}):t("none","Must be used inside a {@select} block","ERROR"),e},size:function(t,n,r,s){var i,o,a=s.key;if((a=n.resolve(s.key))&&!0!==a)if(e.isArray(a))i=a.length;else if(!isNaN(parseFloat(a))&&isFinite(a))i=a;else if("object"==typeof a){i=0;for(o in a)a.hasOwnProperty(o)&&i++}else i=(a+"").length;else i=0;return t.write(i)}};for(var k in f)e.helpers[k]=f[k];return e});
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.page=e()}}(function(){return function e(t,n,r){function i(a,s){if(!n[a]){if(!t[a]){var c="function"==typeof require&&require;if(!s&&c)return c(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var f=n[a]={exports:{}};t[a][0].call(f.exports,function(e){var n=t[a][1][e];return i(n||e)},f,f.exports,e,t,n,r)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<r.length;a++)i(r[a]);return i}({1:[function(e,t,n){(function(n){"use strict";function r(e,t){if("function"==typeof e)return r("*",e);if("function"==typeof t)for(var n=new s(e),i=1;i<arguments.length;++i)r.callbacks.push(n.middleware(arguments[i]));else"string"==typeof e?r["string"==typeof t?"redirect":"show"](e,t):r.start(e)}function i(e){if(!e.handled){var t;t=y?g+v.hash.replace("#!",""):v.pathname+v.search,t!==e.canonicalPath&&(r.stop(),e.handled=!1,v.href=e.canonicalPath)}}function o(e){return"string"!=typeof e?e:m?decodeURIComponent(e.replace(/\+/g," ")):e}function a(e,t){"/"===e[0]&&0!==e.indexOf(g)&&(e=g+(y?"#!":"")+e);var n=e.indexOf("?");if(this.canonicalPath=e,this.path=e.replace(g,"")||"/",y&&(this.path=this.path.replace("#!","")||"/"),this.title=document.title,this.state=t||{},this.state.path=e,this.querystring=~n?o(e.slice(n+1)):"",this.pathname=o(~n?e.slice(0,n):e),this.params={},this.hash="",!y){if(!~this.path.indexOf("#"))return;var r=this.path.split("#");this.path=r[0],this.hash=o(r[1])||"",this.querystring=this.querystring.split("#")[0]}}function s(e,t){t=t||{},this.path="*"===e?"(.*)":e,this.method="GET",this.regexp=p(this.path,this.keys=[],t)}function c(e){if(1===u(e)&&!(e.metaKey||e.ctrlKey||e.shiftKey||e.defaultPrevented)){for(var t=e.path?e.path[0]:e.target;t&&"A"!==t.nodeName;)t=t.parentNode;if(t&&"A"===t.nodeName&&!t.hasAttribute("download")&&"external"!==t.getAttribute("rel")){var i=t.getAttribute("href");if((y||t.pathname!==v.pathname||!t.hash&&"#"!==i)&&!(i&&i.indexOf("mailto:")>-1)&&!t.target&&f(t.href)){var o=t.pathname+t.search+(t.hash||"");void 0!==n&&o.match(/^\/[a-zA-Z]:\//)&&(o=o.replace(/^\/[a-zA-Z]:\//,"/"));var a=o;0===o.indexOf(g)&&(o=o.substr(g.length)),y&&(o=o.replace("#!","")),g&&a===o||(e.preventDefault(),r.show(a))}}}}function u(e){return e=e||window.event,null===e.which?e.button:e.which}function f(e){var t=v.protocol+"//"+v.hostname;return v.port&&(t+=":"+v.port),e&&0===e.indexOf(t)}var p=e("path-to-regexp");t.exports=r;var h,d,l="undefined"!=typeof document&&document.ontouchstart?"touchstart":"click",v="undefined"!=typeof window&&(window.history.location||window.location),w=!0,m=!0,g="",y=!1;r.callbacks=[],r.exits=[],r.current="",r.len=0,r.base=function(e){if(0===arguments.length)return g;g=e},r.start=function(e){if(e=e||{},!h&&(h=!0,!1===e.dispatch&&(w=!1),!1===e.decodeURLComponents&&(m=!1),!1!==e.popstate&&window.addEventListener("popstate",x,!1),!1!==e.click&&document.addEventListener(l,c,!1),!0===e.hashbang&&(y=!0),w)){var t=y&&~v.hash.indexOf("#!")?v.hash.substr(2)+v.search:v.pathname+v.search+v.hash;r.replace(t,null,!0,w)}},r.stop=function(){h&&(r.current="",r.len=0,h=!1,document.removeEventListener(l,c,!1),window.removeEventListener("popstate",x,!1))},r.show=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,!1!==n&&r.dispatch(o),!1!==o.handled&&!1!==i&&o.pushState(),o},r.back=function(e,t){r.len>0?(history.back(),r.len--):e?setTimeout(function(){r.show(e,t)}):setTimeout(function(){r.show(g,t)})},r.redirect=function(e,t){"string"==typeof e&&"string"==typeof t&&r(e,function(e){setTimeout(function(){r.replace(t)},0)}),"string"==typeof e&&void 0===t&&setTimeout(function(){r.replace(e)},0)},r.replace=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,o.init=n,o.save(),!1!==i&&r.dispatch(o),o},r.dispatch=function(e){function t(){var e=r.exits[s++];if(!e)return n();e(o,t)}function n(){var t=r.callbacks[a++];return e.path!==r.current?void(e.handled=!1):t?void t(e,n):i(e)}var o=d,a=0,s=0;d=e,o?t():n()},r.exit=function(e,t){if("function"==typeof e)return r.exit("*",e);for(var n=new s(e),i=1;i<arguments.length;++i)r.exits.push(n.middleware(arguments[i]))},r.Context=a,a.prototype.pushState=function(){r.len++,history.pushState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},a.prototype.save=function(){history.replaceState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},r.Route=s,s.prototype.middleware=function(e){var t=this;return function(n,r){if(t.match(n.path,n.params))return e(n,r);r()}},s.prototype.match=function(e,t){var n=this.keys,r=e.indexOf("?"),i=~r?e.slice(0,r):e,a=this.regexp.exec(decodeURIComponent(i));if(!a)return!1;for(var s=1,c=a.length;s<c;++s){var u=n[s-1],f=o(a[s]);void 0===f&&hasOwnProperty.call(t,u.name)||(t[u.name]=f)}return!0};var x=function(){var e=!1;if("undefined"!=typeof window)return"complete"===document.readyState?e=!0:window.addEventListener("load",function(){setTimeout(function(){e=!0},0)}),function(t){if(e)if(t.state){var n=t.state.path;r.replace(n,t.state)}else r.show(v.pathname+v.hash,void 0,void 0,!1)}}();r.sameOrigin=f}).call(this,e("_process"))},{_process:2,"path-to-regexp":3}],2:[function(e,t,n){function r(){}var i=t.exports={};i.nextTick=function(){var e="undefined"!=typeof window&&window.setImmediate,t="undefined"!=typeof window&&window.MutationObserver,n="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(e)return function(e){return window.setImmediate(e)};var r=[];if(t){var i=document.createElement("div");return new MutationObserver(function(){var e=r.slice();r.length=0,e.forEach(function(e){e()})}).observe(i,{attributes:!0}),function(e){r.length||i.setAttribute("yes","no"),r.push(e)}}return n?(window.addEventListener("message",function(e){var t=e.source;if((t===window||null===t)&&"process-tick"===e.data&&(e.stopPropagation(),r.length>0)){r.shift()()}},!0),function(e){r.push(e),window.postMessage("process-tick","*")}):function(e){setTimeout(e,0)}}(),i.title="browser",i.browser=!0,i.env={},i.argv=[],i.on=r,i.addListener=r,i.once=r,i.off=r,i.removeListener=r,i.removeAllListeners=r,i.emit=r,i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")}},{}],3:[function(e,t,n){function r(e){for(var t,n=[],r=0,i=0,o="";null!=(t=w.exec(e));){var a=t[0],c=t[1],u=t.index;if(o+=e.slice(i,u),i=u+a.length,c)o+=c[1];else{o&&(n.push(o),o="");var f=t[2],p=t[3],h=t[4],d=t[5],l=t[6],v=t[7],m="+"===l||"*"===l,g="?"===l||"*"===l,y=f||"/",x=h||d||(v?".*":"[^"+y+"]+?");n.push({name:p||r++,prefix:f||"",delimiter:y,optional:g,repeat:m,pattern:s(x)})}}return i<e.length&&(o+=e.substr(i)),o&&n.push(o),n}function i(e){return o(r(e))}function o(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^"+e[n].pattern+"$"));return function(n){for(var r="",i=n||{},o=0;o<e.length;o++){var a=e[o];if("string"!=typeof a){var s,c=i[a.name];if(null==c){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to be defined')}if(v(c)){if(!a.repeat)throw new TypeError('Expected "'+a.name+'" to not repeat, but received "'+c+'"');if(0===c.length){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to not be empty')}for(var u=0;u<c.length;u++){if(s=encodeURIComponent(c[u]),!t[o].test(s))throw new TypeError('Expected all "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=(0===u?a.prefix:a.delimiter)+s}}else{if(s=encodeURIComponent(c),!t[o].test(s))throw new TypeError('Expected "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=a.prefix+s}}else r+=a}return r}}function a(e){return e.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function u(e){return e.sensitive?"":"i"}function f(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return c(e,t)}function p(e,t,n){for(var r=[],i=0;i<e.length;i++)r.push(l(e[i],t,n).source);return c(new RegExp("(?:"+r.join("|")+")",u(n)),t)}function h(e,t,n){for(var i=r(e),o=d(i,n),a=0;a<i.length;a++)"string"!=typeof i[a]&&t.push(i[a]);return c(o,t)}function d(e,t){t=t||{};for(var n=t.strict,r=!1!==t.end,i="",o=e[e.length-1],s="string"==typeof o&&/\/$/.test(o),c=0;c<e.length;c++){var f=e[c];if("string"==typeof f)i+=a(f);else{var p=a(f.prefix),h=f.pattern;f.repeat&&(h+="(?:"+p+h+")*"),h=f.optional?p?"(?:"+p+"("+h+"))?":"("+h+")?":p+"("+h+")",i+=h}}return n||(i=(s?i.slice(0,-2):i)+"(?:\\/(?=$))?"),i+=r?"$":n&&s?"":"(?=\\/|$)",new RegExp("^"+i,u(t))}function l(e,t,n){return t=t||[],v(t)?n||(n={}):(n=t,t=[]),e instanceof RegExp?f(e,t,n):v(e)?p(e,t,n):h(e,t,n)}var v=e("isarray");t.exports=l,t.exports.parse=r,t.exports.compile=i,t.exports.tokensToFunction=o,t.exports.tokensToRegExp=d;var w=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g")},{isarray:4}],4:[function(e,t,n){t.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},{}]},{},[1])(1)});
(function(){"use strict";function e(){}function t(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function n(e){return function(){return this[e].apply(this,arguments)}}var r=e.prototype,i=this,s=i.EventEmitter;r.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp){t={};for(n in r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n])}else t=r[e]||(r[e]=[]);return t},r.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},r.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&(t={},t[e]=n),t||n},r.addListener=function(e,n){var r,i=this.getListenersAsObject(e),s="object"==typeof n;for(r in i)i.hasOwnProperty(r)&&-1===t(i[r],n)&&i[r].push(s?n:{listener:n,once:!1});return this},r.on=n("addListener"),r.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},r.once=n("addOnceListener"),r.defineEvent=function(e){return this.getListeners(e),this},r.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},r.removeListener=function(e,n){var r,i,s=this.getListenersAsObject(e);for(i in s)s.hasOwnProperty(i)&&-1!==(r=t(s[i],n))&&s[i].splice(r,1);return this},r.off=n("removeListener"),r.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},r.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},r.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},r.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},r.removeAllListeners=n("removeEvent"),r.emitEvent=function(e,t){var n,r,i,s,o=this.getListenersAsObject(e);for(s in o)if(o.hasOwnProperty(s))for(n=o[s].slice(0),i=0;i<n.length;i++)r=n[i],!0===r.once&&this.removeListener(e,r.listener),r.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(e,r.listener);return this},r.trigger=n("emitEvent"),r.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},r.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},r._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},r._getEvents=function(){return this._events||(this._events={})},e.noConflict=function(){return i.EventEmitter=s,e},"function"==typeof define&&define.amd?define(function(){return e}):"object"==typeof module&&module.exports?module.exports=e:i.EventEmitter=e}).call(this);
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.</div></div><br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_1},{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_2},{}).w("<div id=\"page-content-wrapper\"><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-lg-12\">").s(ctx.get(["documentation"], false),ctx,{"block":body_3},{}).w("</div></div><br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-toggle\"><span class=\"glyphicon glyphicon-menu-hamburger\"></span></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><div id=\"docma-content\"></div></div></div><br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar navbar-default navbar-fixed-top\"><div class=\"").x(ctx.get(["boxed"], false),ctx,{"else":body_2,"block":body_3},{}).w("\"><div class=\"nav navbar-left nav-left\"><div class=\"navbar-brand\"><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></div></div>").h("gt",ctx,{"block":body_4},{"key":ctx.getPath(false, ["template","options","navItems","length"]),"value":0},"h").w("</div></nav>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("container-fluid");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<ul class=\"nav navbar-nav\">").s(ctx.getPath(false, ["template","options","navItems"]),ctx,{"block":body_5},{}).w("</ul>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_6,"block":body_7},{});}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_8,"block":body_9},{}).w("\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;").f(ctx.get(["label"], false),ctx,"h").w("&nbsp;<span class=\"caret\"></span></a><ul class=\"dropdown-menu\">").s(ctx.get(["items"], false),ctx,{"block":body_10},{}).w("</ul></li>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("#");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_10.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_5},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_2,"block":body_3},{}).w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">").x(ctx.get(["iconClass"], false),ctx,{"block":body_4},{}).f(ctx.get(["label"], false),ctx,"h",["s"]).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("#");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"block":body_3},{}).w("</td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div class=\"sidebar-title\"><span><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></span></div>").x(ctx.getPath(false, ["template","options","search"]),ctx,{"block":body_1},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").s(ctx.get(["symbols"], false),ctx,{"block":body_2},{}).w("</ul><div class=\"sidebar-nav-space\"></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-search\"><input id=\"txt-search\" type=\"search\" class=\"form-control\" placeholder=\"Search...\" /><div class=\"sidebar-search-clean\"><span class=\"glyphicon glyphicon-remove-circle\"></span></div></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$menuitem"]).w("</li>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.w("<div id=\"").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\" class=\"symbol-container\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\"><span class=\"glyphicon glyphicon-link color-gray-light\" aria-hidden=\"true\"></span><code class=\"symbol-name\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.get(["symbol"], false),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.get(["symbol"], false),ctx,"h",["$type"]).w("</code></a>").f(ctx.get(["symbol"], false),ctx,"h",["s","$tags"]).w("</div>").x(ctx.getPath(false, ["symbol","augments"]),ctx,{"block":body_1},{}).x(ctx.getPath(false, ["symbol","alias"]),ctx,{"block":body_2},{}).w("</div><div class=\"symbol-definition\">").x(ctx.getPath(false, ["symbol","classdesc"]),ctx,{"block":body_3},{}).f(ctx.get(["symbol"], false),ctx,"h",["s","$desc"]).x(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_8},{}).h("eq",ctx,{"else":body_13,"block":body_16},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","returns"]),ctx,{"block":body_19},{}).x(ctx.getPath(false, ["symbol","exceptions"]),ctx,{"block":body_22},{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_25},{}).x(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_26},{}).x(ctx.getPath(false, ["template","options","symbolMeta"]),ctx,{"block":body_28},{}).w("</div></div><hr />").h("eq",ctx,{"block":body_32},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_34,"block":body_36},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Extends:</b> ").f(ctx.get(["symbol"], false),ctx,"h",["s","$extends"]).w("</p>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Alias:</b> <code>").f(ctx.getPath(false, ["symbol","alias"]),ctx,"h",["s","$dot_prop"]).w("</code></p>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<table>").x(ctx.getPath(false, ["symbol","version"]),ctx,{"block":body_4},{}).x(ctx.getPath(false, ["symbol","copyright"]),ctx,{"block":body_5},{}).x(ctx.getPath(false, ["symbol","author"]),ctx,{"block":body_6},{}).x(ctx.getPath(false, ["symbol","license"]),ctx,{"block":body_7},{}).w("</table><br />");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<tr><td><b>Version:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","version"]),ctx,"h",["s"]).w("</td></tr>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><b>Copyright:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","copyright"]),ctx,"h",["s"]).w("</td></tr>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<tr><td><b>Author:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","author"]),ctx,"h",["s","$author"]).w("</td></tr>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<tr><td><b>License:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","license"]),ctx,"h",["s"]).w("</td></tr>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b>See</b>").h("gt",ctx,{"else":body_9,"block":body_11},{"key":ctx.getPath(false, ["symbol","see","length"]),"value":1},"h").w("</p><br />");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_10},{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("<ul>").s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_12},{}).w("</ul>");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.get(["symbol"], false)),{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_14,"block":body_15},{});}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{});}body_14.__dustBody=!0;function body_15(chk,ctx){return chk;}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_17,"block":body_18},{});}body_16.__dustBody=!0;function body_17(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{});}body_17.__dustBody=!0;function body_18(chk,ctx){return chk;}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.h("gt",ctx,{"else":body_20,"block":body_21},{"key":ctx.getPath(false, ["symbol","returns","length"]),"value":"1","type":"number"},"h");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.w("<p><b>Returns:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.w("<b>Returns:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.h("gt",ctx,{"else":body_23,"block":body_24},{"key":ctx.getPath(false, ["symbol","exceptions","length"]),"value":"1","type":"number"},"h");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.w("<p><b>Throws:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.w("<b>Throws:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.get(["symbol"], false)),{});}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.w("<p><b>Example</b></p>").s(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_27},{});}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.w("<pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt"]).w("</code></pre>");}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_29},{});}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.w("<p class=\"symbol-meta\">").x(ctx.getPath(false, ["symbol","meta","filename"]),ctx,{"block":body_30},{}).x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_31},{}).w("</p>");}body_29.__dustBody=!0;function body_30(chk,ctx){return chk.w("<b>File:</b> ").f(ctx.getPath(false, ["symbol","meta","filename"]),ctx,"h").w("&nbsp;&nbsp;");}body_30.__dustBody=!0;function body_31(chk,ctx){return chk.w("<b>Line:</b> ").f(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,"h").w("&nbsp;&nbsp;");}body_31.__dustBody=!0;function body_32(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","$constructor"]),ctx,{"block":body_33},{});}body_32.__dustBody=!0;function body_33(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(false, ["symbol","$constructor"]),"template":ctx.get(["template"], false)});}body_33.__dustBody=!0;function body_34(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","$members"]),ctx,{"block":body_35},{});}body_34.__dustBody=!0;function body_35(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_35.__dustBody=!0;function body_36(chk,ctx){return chk;}body_36.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var docma = {"routes":[{"id":"api:","type":"api","name":"_def_","path":"/api","contentPath":null},{"id":"api:framework","type":"api","name":"framework","path":"/api/framework","contentPath":null},{"id":"api:jsapi","type":"api","name":"jsapi","path":"/api/jsapi","contentPath":null},{"id":"api:plugins","type":"api","name":"plugins","path":"/api/plugins","contentPath":null}],"apis":{"_def_":{"documentation":[],"symbols":[]},"framework":{"documentation":[{"comment":"/**\n * Redux actions.\n * @see {@link http://redux.js.org/docs/basics/Actions.html|the redux documentation} for details\n * @name actions\n *\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>Redux actions.</p>","see":["{@link http://redux.js.org/docs/basics/Actions.html|the redux documentation} for details"],"name":"actions","longname":"actions","kind":"member","scope":"global","$longname":"actions","$members":[{"comment":"/**\n export * Actions for controls. Provide a simple generic functionality to toggle a generic\n * control property.\n * @name actions.controls\n */","meta":{"filename":"controls.js","lineno":15,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>export * Actions for controls. Provide a simple generic functionality to toggle a generic\ncontrol property.</p>","name":"controls","memberof":"actions","longname":"actions.controls","scope":"static","kind":"member","$longname":"actions.controls","$members":[{"comment":"/**\n * Reset all the controls\n * @memberof actions.controls\n * @param {string[]} [skip=[]] a list of tools to skip\n * @return {object} action of type `RESET_CONTROLS`\n */","meta":{"range":[2617,2724],"filename":"controls.js","lineno":89,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029342","name":"exports.resetControls","type":"FunctionDeclaration","paramnames":["skip"]}},"description":"<p>Reset all the controls</p>","memberof":"actions.controls","params":[{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"[]","description":"<p>a list of tools to skip</p>","name":"skip"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>RESET_CONTROLS</code></p>"}],"name":"exports.resetControls","longname":"actions.controls.exports.resetControls","kind":"function","scope":"static","$longname":"actions.controls.exports.resetControls"},{"comment":"/**\n * Sets a list of properties at once\n * @memberof actions.controls\n * @param {string} control  control name\n * @param {array} properties the properties to set, pairs of keys and related values\n * @return {object} of type `SET_CONTROL_PROPERTIES` with control and properties\n *\n * @example\n * setControlProperties('metadataexplorer', 'enabled', true, 'group', 'newgroup')\n */","meta":{"range":[2253,2444],"filename":"controls.js","lineno":75,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029322","name":"exports.setControlProperties","type":"FunctionDeclaration","paramnames":["control","properties"]}},"description":"<p>Sets a list of properties at once</p>","memberof":"actions.controls","params":[{"type":{"names":["string"]},"description":"<p>control name</p>","name":"control"},{"type":{"names":["array"]},"description":"<p>the properties to set, pairs of keys and related values</p>","name":"properties"}],"returns":[{"type":{"names":["object"]},"description":"<p>of type <code>SET_CONTROL_PROPERTIES</code> with control and properties</p>"}],"examples":["setControlProperties('metadataexplorer', 'enabled', true, 'group', 'newgroup')"],"name":"exports.setControlProperties","longname":"actions.controls.exports.setControlProperties","kind":"function","scope":"static","$longname":"actions.controls.exports.setControlProperties"},{"comment":"/**\n * Sets a property in a more detailed way\n * @memberof actions.controls\n * @param {string} control  control name\n * @param {string} property the property to set\n * @param {string|number|boolean|object} value the value to set or to check for toggling\n * @param {boolean} [toggle]  if true, the reducer will toggle the property of the control only if is equal to the value parameter\n * @return {object} of type `SET_CONTROL_PROPERTY` with control, property, value and toggle params\n */","meta":{"range":[1679,1872],"filename":"controls.js","lineno":55,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029302","name":"exports.setControlProperty","type":"FunctionDeclaration","paramnames":["control","property","value","toggle"]}},"description":"<p>Sets a property in a more detailed way</p>","memberof":"actions.controls","params":[{"type":{"names":["string"]},"description":"<p>control name</p>","name":"control"},{"type":{"names":["string"]},"description":"<p>the property to set</p>","name":"property"},{"type":{"names":["string","number","boolean","object"]},"description":"<p>the value to set or to check for toggling</p>","name":"value"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>if true, the reducer will toggle the property of the control only if is equal to the value parameter</p>","name":"toggle"}],"returns":[{"type":{"names":["object"]},"description":"<p>of type <code>SET_CONTROL_PROPERTY</code> with control, property, value and toggle params</p>"}],"name":"exports.setControlProperty","longname":"actions.controls.exports.setControlProperty","kind":"function","scope":"static","$longname":"actions.controls.exports.setControlProperty"},{"comment":"/**\n * Toggle a control property\n * @memberof actions.controls\n * @param  {string} control  the name of the control\n * @param  {boolean|number|string|object} [property] the property to override\n * @return {object} action of type `TOGGLE_CONTROL`, control, and property\n */","meta":{"range":[889,1025],"filename":"controls.js","lineno":29,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029267","name":"exports.toggleControl","type":"FunctionDeclaration","paramnames":["control","property"]}},"description":"<p>Toggle a control property</p>","memberof":"actions.controls","params":[{"type":{"names":["string"]},"description":"<p>the name of the control</p>","name":"control"},{"type":{"names":["boolean","number","string","object"]},"optional":true,"description":"<p>the property to override</p>","name":"property"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>TOGGLE_CONTROL</code>, control, and property</p>"}],"name":"exports.toggleControl","longname":"actions.controls.exports.toggleControl","kind":"function","scope":"static","$longname":"actions.controls.exports.toggleControl"}]},{"comment":"/**\n * Actions for floatinglegend.\n * @name actions.floatinglegend\n */","meta":{"filename":"floatinglegend.js","lineno":9,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>Actions for floatinglegend.</p>","name":"floatinglegend","memberof":"actions","longname":"actions.floatinglegend","scope":"static","kind":"member","$longname":"actions.floatinglegend","$members":[{"comment":"/**\n * expandLegend action, type `EXPAND_LEGEND`\n * @memberof actions.floatinglegend\n * @param  {boolean} expanded expanded state of legend action\n * @return {action} type `EXPAND_LEGEND` with expanded\n */","meta":{"range":[907,1015],"filename":"floatinglegend.js","lineno":34,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029425","name":"exports.expandLegend","type":"FunctionDeclaration","paramnames":["expanded"]}},"description":"<p>expandLegend action, type <code>EXPAND_LEGEND</code></p>","memberof":"actions.floatinglegend","params":[{"type":{"names":["boolean"]},"description":"<p>expanded state of legend action</p>","name":"expanded"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>EXPAND_LEGEND</code> with expanded</p>"}],"name":"exports.expandLegend","longname":"actions.floatinglegend.exports.expandLegend","kind":"function","scope":"static","$longname":"actions.floatinglegend.exports.expandLegend"},{"comment":"/**\n * resizeLegend action, type `RESIZE_LEGEND`\n * @memberof actions.floatinglegend\n * @param  {object} size size of legend {width: 0, height: 0}\n * @return {action} type `RESIZE_LEGEND` with size\n */","meta":{"range":[600,700],"filename":"floatinglegend.js","lineno":22,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029414","name":"exports.resizeLegend","type":"FunctionDeclaration","paramnames":["size"]}},"description":"<p>resizeLegend action, type <code>RESIZE_LEGEND</code></p>","memberof":"actions.floatinglegend","params":[{"type":{"names":["object"]},"description":"<p>size of legend {width: 0, height: 0}</p>","name":"size"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>RESIZE_LEGEND</code> with size</p>"}],"name":"exports.resizeLegend","longname":"actions.floatinglegend.exports.resizeLegend","kind":"function","scope":"static","$longname":"actions.floatinglegend.exports.resizeLegend"}]},{"comment":"/**\n * Actions for FullScreen Plugin.\n * @name actions.fullscreen\n */","meta":{"filename":"fullscreen.js","lineno":10,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>Actions for FullScreen Plugin.</p>","name":"fullscreen","memberof":"actions","longname":"actions.fullscreen","scope":"static","kind":"member","$longname":"actions.fullscreen","$members":[{"comment":"/**\n * when fullscreen have to be toggled\n * @memberof actions.fullscreen\n * @param  {boolean} enable          true for enable, false for disable\n * @param  {string} querySelector querySelector string to use to get the element to fullscreen.\n * @return {action}                   the action of type `TOGGLE_FULLSCREEN` with enable flag and element selector.\n */","meta":{"range":[692,842],"filename":"fullscreen.js","lineno":23,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029362","name":"exports.toggleFullscreen","type":"FunctionDeclaration","paramnames":["enable","querySelector"]}},"description":"<p>when fullscreen have to be toggled</p>","memberof":"actions.fullscreen","params":[{"type":{"names":["boolean"]},"description":"<p>true for enable, false for disable</p>","name":"enable"},{"type":{"names":["string"]},"description":"<p>querySelector string to use to get the element to fullscreen.</p>","name":"querySelector"}],"returns":[{"type":{"names":["action"]},"description":"<p>the action of type <code>TOGGLE_FULLSCREEN</code> with enable flag and element selector.</p>"}],"name":"exports.toggleFullscreen","longname":"actions.fullscreen.exports.toggleFullscreen","kind":"function","scope":"static","$longname":"actions.fullscreen.exports.toggleFullscreen"}]},{"comment":"/**\n * Actions for Globe Switcher Plugin.\n * @name actions.globeswitcher\n */","meta":{"filename":"globeswitcher.js","lineno":32,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>Actions for Globe Switcher Plugin.</p>","name":"globeswitcher","memberof":"actions","longname":"actions.globeswitcher","scope":"static","kind":"member","$longname":"actions.globeswitcher","$members":[{"comment":"/**\n * Emitted when 3d map have to be toggled\n * @memberof actions.globeswitcher\n * @param  {boolean} enable          true for enable, false for disable\n * @return {action}                  the action of type `TOGGLE_FULLSCREEN` with enable flag and element selector.\n * ```\n * {\n *   type: TOGGLE_3D,\n *   enable\n * }\n * ```\n */","meta":{"range":[637,775],"filename":"globeswitcher.js","lineno":24,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029388","name":"exports.toggle3d","type":"FunctionDeclaration","paramnames":["enable","originalMapType"]}},"description":"<p>Emitted when 3d map have to be toggled</p>","memberof":"actions.globeswitcher","params":[{"type":{"names":["boolean"]},"description":"<p>true for enable, false for disable</p>","name":"enable"}],"returns":[{"type":{"names":["action"]},"description":"<p>the action of type <code>TOGGLE_FULLSCREEN</code> with enable flag and element selector.</p>\n<pre class=\"prettyprint source\"><code>{\n  type: TOGGLE_3D,\n  enable\n}\n</code></pre>"}],"name":"exports.toggle3d","longname":"actions.globeswitcher.exports.toggle3d","kind":"function","scope":"static","$longname":"actions.globeswitcher.exports.toggle3d"},{"comment":"/**\n * Saves the last 2d map\n * @memberof actions.globeswitcher\n * @param  {string} mapType last maptype\n * @return {object}         action\n * ```\n * {\n *   type: MAPTYPE_2D_SELECTED,\n *   mapType\n * }\n * ```\n */","meta":{"range":[835,957],"filename":"maptype.js","lineno":36,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030566","name":"exports.updateLast2dMapType","type":"FunctionDeclaration","paramnames":["mapType"]}},"description":"<p>Saves the last 2d map</p>","memberof":"actions.globeswitcher","params":[{"type":{"names":["string"]},"description":"<p>last maptype</p>","name":"mapType"}],"returns":[{"type":{"names":["object"]},"description":"<p>action</p>\n<pre class=\"prettyprint source\"><code>{\n  type: MAPTYPE_2D_SELECTED,\n  mapType\n}\n</code></pre>"}],"name":"exports.updateLast2dMapType","longname":"actions.globeswitcher.exports.updateLast2dMapType","kind":"function","scope":"static","$longname":"actions.globeswitcher.exports.updateLast2dMapType"}]},{"comment":"/**\n * Actions for map\n * @name actions.map\n */","meta":{"filename":"map.js","lineno":263,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>Actions for map</p>","name":"map","memberof":"actions","longname":"actions.map","scope":"static","kind":"member","$longname":"actions.map","$members":[{"comment":"/**\n * pan to a specific point\n * @memberof actions.map\n * @param {object} center as {x, y, crs}\n*/","meta":{"range":[3566,3656],"filename":"map.js","lineno":127,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029737","name":"exports.panTo","type":"FunctionDeclaration","paramnames":["center"]}},"description":"<p>pan to a specific point</p>","memberof":"actions.map","params":[{"type":{"names":["object"]},"description":"<p>as {x, y, crs}</p>","name":"center"}],"name":"exports.panTo","longname":"actions.map.exports.panTo","kind":"function","scope":"static","$longname":"actions.map.exports.panTo"},{"comment":"/**\n * zoom to the specified extent\n * @memberof actions.map\n * @param {number[]} extent in the form of [minx, miny, maxx, maxy]\n * @param {string} crs related the extent\n * @param {number} maxZoom the max zoom limit\n * @param {object} options additional options `{nearest: true}`is the only supported\n * (See {@link https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#fit| Openlayers View, fit method} )\n */","meta":{"range":[4080,4255],"filename":"map.js","lineno":143,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029748","name":"exports.zoomToExtent","type":"FunctionDeclaration","paramnames":["extent","crs","maxZoom","options"]}},"description":"<p>zoom to the specified extent</p>","memberof":"actions.map","params":[{"type":{"names":["Array.<number>"]},"description":"<p>in the form of [minx, miny, maxx, maxy]</p>","name":"extent"},{"type":{"names":["string"]},"description":"<p>related the extent</p>","name":"crs"},{"type":{"names":["number"]},"description":"<p>the max zoom limit</p>","name":"maxZoom"},{"type":{"names":["object"]},"description":"<p>additional options <code>{nearest: true}</code>is the only supported\n(See {@link https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#fit| Openlayers View, fit method} )</p>","name":"options"}],"name":"exports.zoomToExtent","longname":"actions.map.exports.zoomToExtent","kind":"function","scope":"static","$longname":"actions.map.exports.zoomToExtent"},{"comment":"/**\n * zoom to a specific point\n * @memberof actions.map\n * @param {object} pos as array [x, y] or object {x: ..., y:...}\n * @param {number} zoom level to zoom to\n * @param {string} crs of the point\n*/","meta":{"range":[2347,2482],"filename":"map.js","lineno":61,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029627","name":"exports.zoomToPoint","type":"FunctionDeclaration","paramnames":["pos","zoom","crs"]}},"description":"<p>zoom to a specific point</p>","memberof":"actions.map","params":[{"type":{"names":["object"]},"description":"<p>as array [x, y] or object {x: ..., y:...}</p>","name":"pos"},{"type":{"names":["number"]},"description":"<p>level to zoom to</p>","name":"zoom"},{"type":{"names":["string"]},"description":"<p>of the point</p>","name":"crs"}],"name":"exports.zoomToPoint","longname":"actions.map.exports.zoomToPoint","kind":"function","scope":"static","$longname":"actions.map.exports.zoomToPoint"}]},{"comment":"/**\n * Actions for map layout.\n * @name actions.mapLayout\n */","meta":{"filename":"maplayout.js","lineno":42,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>Actions for map layout.</p>","name":"mapLayout","memberof":"actions","longname":"actions.mapLayout","scope":"static","kind":"member","$longname":"actions.mapLayout","$members":[{"comment":"/**\n * updateDockPanelsList action, type `UPDATE_DOCK_PANELS`\n * @memberof actions.mapLayout\n * @param name - name of the tool to add to the list or remove from the list\n * @param action {\"add\"|\"remove\"} - action to perform upon entry\n * @param location {\"left\"|\"right\"} - location of the dock panel\n * @returns {{action: string, location: string, type: string}}\n */","meta":{"range":[1011,1194],"filename":"maplayout.js","lineno":33,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029459","name":"exports.updateDockPanelsList","type":"FunctionDeclaration","paramnames":["name","action","location"]}},"description":"<p>updateDockPanelsList action, type <code>UPDATE_DOCK_PANELS</code></p>","memberof":"actions.mapLayout","params":[{"description":"<p>name of the tool to add to the list or remove from the list</p>","name":"name"},{"type":{"names":["\"add\"","\"remove\""]},"description":"<p>action to perform upon entry</p>","name":"action"},{"type":{"names":["\"left\"","\"right\""]},"description":"<p>location of the dock panel</p>","name":"location"}],"returns":[{"type":{"names":["Object"]}}],"name":"exports.updateDockPanelsList","longname":"actions.mapLayout.exports.updateDockPanelsList","kind":"function","scope":"static","$longname":"actions.mapLayout.exports.updateDockPanelsList"},{"comment":"/**\n * updateMapLayout action, type `UPDATE_MAP_LAYOUT`\n * @memberof actions.mapLayout\n * @param  {object} layout style of the layout\n * @return {action} type `UPDATE_MAP_LAYOUT` with layout\n */","meta":{"range":[531,642],"filename":"maplayout.js","lineno":18,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029448","name":"exports.updateMapLayout","type":"FunctionDeclaration","paramnames":["layout"]}},"description":"<p>updateMapLayout action, type <code>UPDATE_MAP_LAYOUT</code></p>","memberof":"actions.mapLayout","params":[{"type":{"names":["object"]},"description":"<p>style of the layout</p>","name":"layout"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>UPDATE_MAP_LAYOUT</code> with layout</p>"}],"name":"exports.updateMapLayout","longname":"actions.mapLayout.exports.updateMapLayout","kind":"function","scope":"static","$longname":"actions.mapLayout.exports.updateMapLayout"}]},{"comment":"/**\n * Actions for maps\n * @name actions.maps\n */","meta":{"filename":"maps.js","lineno":424,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>Actions for maps</p>","name":"maps","memberof":"actions","longname":"actions.maps","scope":"static","kind":"member","$longname":"actions.maps","$members":[{"comment":"/**\n * When attribute of a map has been updated\n * @memberof actions.maps\n * @param  {number} resourceId the identifier of the resource\n * @param  {string} name       name of the attributeUpdated\n * @param  {string} value      the new value of the attribute\n * @param  {string} type       the type of the attribute\n * @param  {object} [error]      error, if any\n * @return {action}            type `ATTRIBUTE_UPDATED`, with the arguments as they are named\n */","meta":{"range":[8064,8254],"filename":"maps.js","lineno":281,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030361","name":"exports.attributeUpdated","type":"FunctionDeclaration","paramnames":["resourceId","name","value","type","error"]}},"description":"<p>When attribute of a map has been updated</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the identifier of the resource</p>","name":"resourceId"},{"type":{"names":["string"]},"description":"<p>name of the attributeUpdated</p>","name":"name"},{"type":{"names":["string"]},"description":"<p>the new value of the attribute</p>","name":"value"},{"type":{"names":["string"]},"description":"<p>the type of the attribute</p>","name":"type"},{"type":{"names":["object"]},"optional":true,"description":"<p>error, if any</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>ATTRIBUTE_UPDATED</code>, with the arguments as they are named</p>"}],"name":"exports.attributeUpdated","longname":"actions.maps.exports.attributeUpdated","kind":"function","scope":"static","$longname":"actions.maps.exports.attributeUpdated"},{"comment":"/**\n * Deletes a map.\n * @memberof actions.maps\n * @param  {number} resourceId the id of the resource to delete\n * @param  {object} options    options for the request\n * @return {thunk}             performs the delete operations and dispatches mapDeleted and loadMaps\n */","meta":{"range":[10404,10536],"filename":"maps.js","lineno":361,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030472","name":"exports.deleteMap","type":"FunctionDeclaration","paramnames":["resourceId","options"]}},"description":"<p>Deletes a map.</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource to delete</p>","name":"resourceId"},{"type":{"names":["object"]},"description":"<p>options for the request</p>","name":"options"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>performs the delete operations and dispatches mapDeleted and loadMaps</p>"}],"name":"exports.deleteMap","longname":"actions.maps.exports.deleteMap","kind":"function","scope":"static","$longname":"actions.maps.exports.deleteMap"},{"comment":"/**\n * do nothing action\n * @memberof actions.maps\n * @return {action}        type `DO_NOTHING`\n*/","meta":{"range":[10859,10935],"filename":"maps.js","lineno":385,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030497","name":"exports.doNothing","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>do nothing action</p>","memberof":"actions.maps","returns":[{"type":{"names":["action"]},"description":"<p>type <code>DO_NOTHING</code></p>"}],"name":"exports.doNothing","longname":"actions.maps.exports.doNothing","kind":"function","scope":"static","$longname":"actions.maps.exports.doNothing"},{"comment":"/**\n * getMapResourcesByCategory action, type `MAPS_GET_MAP_RESOURCES_BY_CATEGORY`\n * @memberof actions.maps\n * @param  {string} searchText text to search\n * @param  {string} map     MAP\n * @param {Object} opts options\n * @return {action}    type `MAPS_GET_MAP_RESOURCES_BY_CATEGORY` with searchText, map and opts\n */","meta":{"range":[3210,3430],"filename":"maps.js","lineno":86,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030143","name":"exports.getMapResourcesByCategory","type":"FunctionDeclaration","paramnames":["map","searchText","opts","searchFilter"]}},"description":"<p>getMapResourcesByCategory action, type <code>MAPS_GET_MAP_RESOURCES_BY_CATEGORY</code></p>","memberof":"actions.maps","params":[{"type":{"names":["string"]},"description":"<p>text to search</p>","name":"searchText"},{"type":{"names":["string"]},"description":"<p>MAP</p>","name":"map"},{"type":{"names":["Object"]},"description":"<p>options</p>","name":"opts"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAPS_GET_MAP_RESOURCES_BY_CATEGORY</code> with searchText, map and opts</p>"}],"name":"exports.getMapResourcesByCategory","longname":"actions.maps.exports.getMapResourcesByCategory","kind":"function","scope":"static","$longname":"actions.maps.exports.getMapResourcesByCategory"},{"comment":"/**\n * Invalidate featured maps list\n * @memberof actions.maps\n */","meta":{"range":[11607,11692],"filename":"maps.js","lineno":420,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030535","name":"exports.invalidateFeaturedMaps","type":"VariableDeclaration"}},"description":"<p>Invalidate featured maps list</p>","memberof":"actions.maps","name":"exports.invalidateFeaturedMaps","longname":"actions.maps.exports.invalidateFeaturedMaps","kind":"constant","scope":"static","$longname":"actions.maps.exports.invalidateFeaturedMaps"},{"comment":"/**\n * When a error occurred during maps loading\n * @memberof actions.maps\n * @param  {object} e the error\n * @return {action}   MAPS_LIST_LOAD_ERROR\n */","meta":{"range":[5285,5390],"filename":"maps.js","lineno":183,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030271","name":"exports.loadError","type":"FunctionDeclaration","paramnames":["e"]}},"description":"<p>When a error occurred during maps loading</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>the error</p>","name":"e"}],"returns":[{"type":{"names":["action"]},"description":"<p>MAPS_LIST_LOAD_ERROR</p>"}],"name":"exports.loadError","longname":"actions.maps.exports.loadError","kind":"function","scope":"static","$longname":"actions.maps.exports.loadError"},{"comment":"/**\n * loadMaps action, type `MAPS_LOAD_MAP`\n * @memberof actions.maps\n * @param  {string} geoStoreUrl      the url of geostore\n * @param  {String} [searchText=\"*\"] text to search\n * @param  {Object} [params={start:  0. limit: 12}] params for the request\n * @return {action} type `MAPS_LOAD_MAP` with geoStoreUrl, searchText and params\n */","meta":{"range":[2692,2889],"filename":"maps.js","lineno":67,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030118","name":"exports.loadMaps","type":"FunctionDeclaration","paramnames":["geoStoreUrl","searchText","params"]}},"description":"<p>loadMaps action, type <code>MAPS_LOAD_MAP</code></p>","memberof":"actions.maps","params":[{"type":{"names":["string"]},"description":"<p>the url of geostore</p>","name":"geoStoreUrl"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"*\"","description":"<p>text to search</p>","name":"searchText"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{start:  0. limit: 12}","description":"<p>params for the request</p>","name":"params"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAPS_LOAD_MAP</code> with geoStoreUrl, searchText and params</p>"}],"name":"exports.loadMaps","longname":"actions.maps.exports.loadMaps","kind":"function","scope":"static","$longname":"actions.maps.exports.loadMaps"},{"comment":"/**\n * When a new map is created\n * @memberof actions.maps\n * @param  {number} resourceId the identifier of the new map\n * @param  {object} metadata   metadata associated to the new resourceId\n * @param  {object} content    the content of the new resourceId\n * @param  {object} [error]    an error, if present\n * @return {action}            `MAP_CREATED`, with all arguments as named\n */","meta":{"range":[6129,6313],"filename":"maps.js","lineno":214,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030296","name":"exports.mapCreated","type":"FunctionDeclaration","paramnames":["resourceId","metadata","content","error"]}},"description":"<p>When a new map is created</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the identifier of the new map</p>","name":"resourceId"},{"type":{"names":["object"]},"description":"<p>metadata associated to the new resourceId</p>","name":"metadata"},{"type":{"names":["object"]},"description":"<p>the content of the new resourceId</p>","name":"content"},{"type":{"names":["object"]},"optional":true,"description":"<p>an error, if present</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p><code>MAP_CREATED</code>, with all arguments as named</p>"}],"name":"exports.mapCreated","longname":"actions.maps.exports.mapCreated","kind":"function","scope":"static","$longname":"actions.maps.exports.mapCreated"},{"comment":"/**\n * When a map delete action have been performed\n * @memberof actions.maps\n * @param  {number} resourceId the identifier of the deleted map\n * @param  {string} result     the result, can be \"success\"\n * @param  {object} [error]      the error, if any\n * @return {action}            type `MAP_DELETED`, with the arguments as they are named\n */","meta":{"range":[6992,7146],"filename":"maps.js","lineno":245,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030327","name":"exports.mapDeleted","type":"FunctionDeclaration","paramnames":["resourceId","result","error"]}},"description":"<p>When a map delete action have been performed</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the identifier of the deleted map</p>","name":"resourceId"},{"type":{"names":["string"]},"description":"<p>the result, can be &quot;success&quot;</p>","name":"result"},{"type":{"names":["object"]},"optional":true,"description":"<p>the error, if any</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAP_DELETED</code>, with the arguments as they are named</p>"}],"name":"exports.mapDeleted","longname":"actions.maps.exports.mapDeleted","kind":"function","scope":"static","$longname":"actions.maps.exports.mapDeleted"},{"comment":"/**\n * When deleting a map\n * @memberof actions.maps\n * @param  {number} resourceId the identifier of the map\n * @param  {string} result     can be \"success\"\n * @param  {object} [error]      error, if any\n * @return {action}            type `MAP_DELETING`, with the arguments as they are named\n */","meta":{"range":[7446,7602],"filename":"maps.js","lineno":262,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030344","name":"exports.mapDeleting","type":"FunctionDeclaration","paramnames":["resourceId","result","error"]}},"description":"<p>When deleting a map</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the identifier of the map</p>","name":"resourceId"},{"type":{"names":["string"]},"description":"<p>can be &quot;success&quot;</p>","name":"result"},{"type":{"names":["object"]},"optional":true,"description":"<p>error, if any</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAP_DELETING</code>, with the arguments as they are named</p>"}],"name":"exports.mapDeleting","longname":"actions.maps.exports.mapDeleting","kind":"function","scope":"static","$longname":"actions.maps.exports.mapDeleting"},{"comment":"/**\n * When an error occurred on map creation\n * @memberof actions.maps\n * @param  {number} resourceId the id of the resource\n * @param  {object} error the error occurred\n * @return {action}      type `MAP_ERROR`, with the arguments as they are named\n */","meta":{"range":[8928,9054],"filename":"maps.js","lineno":313,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030396","name":"exports.mapError","type":"FunctionDeclaration","paramnames":["resourceId","error"]}},"description":"<p>When an error occurred on map creation</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource</p>","name":"resourceId"},{"type":{"names":["object"]},"description":"<p>the error occurred</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAP_ERROR</code>, with the arguments as they are named</p>"}],"name":"exports.mapError","longname":"actions.maps.exports.mapError","kind":"function","scope":"static","$longname":"actions.maps.exports.mapError"},{"comment":"/**\n * run when maps are loaded. The results params is an object like this:\n * ```\n * {\n *    results: [{...}, {...}]\n * }\n * ```\n * @memberof actions.maps\n * @param  {object} maps       object with results\n * @param  {object} params     params of the original request\n * @param  {string} searchText the original search text for the request\n * @return {action}            action of type `MAPS_LIST_LOADED` with all the arguments\n */","meta":{"range":[4972,5129],"filename":"maps.js","lineno":168,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030254","name":"exports.mapsLoaded","type":"FunctionDeclaration","paramnames":["maps","params","searchText"]}},"description":"<p>run when maps are loaded. The results params is an object like this:</p>\n<pre class=\"prettyprint source\"><code>{\n   results: [{...}, {...}]\n}\n</code></pre>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>object with results</p>","name":"maps"},{"type":{"names":["object"]},"description":"<p>params of the original request</p>","name":"params"},{"type":{"names":["string"]},"description":"<p>the original search text for the request</p>","name":"searchText"}],"returns":[{"type":{"names":["action"]},"description":"<p>action of type <code>MAPS_LIST_LOADED</code> with all the arguments</p>"}],"name":"exports.mapsLoaded","longname":"actions.maps.exports.mapsLoaded","kind":"function","scope":"static","$longname":"actions.maps.exports.mapsLoaded"},{"comment":"/**\n * mapsLoading action, type `MAPS_LIST_LOADING`\n * @memberof actions.maps\n * @param  {string} searchText text to search\n * @param  {object} params     the params of the request\n * @return {action}            type `MAPS_LIST_LOADING` with searchText and params\n */","meta":{"range":[2211,2350],"filename":"maps.js","lineno":51,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030104","name":"exports.mapsLoading","type":"FunctionDeclaration","paramnames":["searchText","params"]}},"description":"<p>mapsLoading action, type <code>MAPS_LIST_LOADING</code></p>","memberof":"actions.maps","params":[{"type":{"names":["string"]},"description":"<p>text to search</p>","name":"searchText"},{"type":{"names":["object"]},"description":"<p>the params of the request</p>","name":"params"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAPS_LIST_LOADING</code> with searchText and params</p>"}],"name":"exports.mapsLoading","longname":"actions.maps.exports.mapsLoading","kind":"function","scope":"static","$longname":"actions.maps.exports.mapsLoading"},{"comment":"/**\n * action to run to change search text\n * @memberof actions.maps\n * @param  {string} text the search text\n * @return {action} of type `MAPS_SEARCH_TEXT_CHANGED`, with text\n */","meta":{"range":[3612,3732],"filename":"maps.js","lineno":102,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030163","name":"exports.mapsSearchTextChanged","type":"FunctionDeclaration","paramnames":["text"]}},"description":"<p>action to run to change search text</p>","memberof":"actions.maps","params":[{"type":{"names":["string"]},"description":"<p>the search text</p>","name":"text"}],"returns":[{"type":{"names":["action"]},"description":"<p>of type <code>MAPS_SEARCH_TEXT_CHANGED</code>, with text</p>"}],"name":"exports.mapsSearchTextChanged","longname":"actions.maps.exports.mapsSearchTextChanged","kind":"function","scope":"static","$longname":"actions.maps.exports.mapsSearchTextChanged"},{"comment":"/**\n * When a map is updating\n * @memberof actions.maps\n * @param  {number} resourceId the id of the resource that is updating\n * @return {action}            type `MAP_UPDATING` with the arguments as they are named\n */","meta":{"range":[6534,6644],"filename":"maps.js","lineno":230,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030316","name":"exports.mapUpdating","type":"FunctionDeclaration","paramnames":["resourceId"]}},"description":"<p>When a map is updating</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource that is updating</p>","name":"resourceId"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAP_UPDATING</code> with the arguments as they are named</p>"}],"name":"exports.mapUpdating","longname":"actions.maps.exports.mapUpdating","kind":"function","scope":"static","$longname":"actions.maps.exports.mapUpdating"},{"comment":"/**\n * updates metadata of the map\n * @memberof actions.maps\n * @param  {object} prop the name of the changed property\n * @param  {object} name the value of the changed property\n * @return {action} METADATA_CHANGED\n */","meta":{"range":[5611,5739],"filename":"maps.js","lineno":197,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030282","name":"exports.metadataChanged","type":"FunctionDeclaration","paramnames":["prop","value"]}},"description":"<p>updates metadata of the map</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>the name of the changed property</p>","name":"prop"},{"type":{"names":["object"]},"description":"<p>the value of the changed property</p>","name":"name"}],"returns":[{"type":{"names":["action"]},"description":"<p>METADATA_CHANGED</p>"}],"name":"exports.metadataChanged","longname":"actions.maps.exports.metadataChanged","kind":"function","scope":"static","$longname":"actions.maps.exports.metadataChanged"},{"comment":"/**\n * Trigger maps reload\n * @memberof actions.maps\n */","meta":{"range":[11479,11539],"filename":"maps.js","lineno":413,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030527","name":"exports.reloadMaps","type":"VariableDeclaration"}},"description":"<p>Trigger maps reload</p>","memberof":"actions.maps","name":"exports.reloadMaps","longname":"actions.maps.exports.reloadMaps","kind":"constant","scope":"static","$longname":"actions.maps.exports.reloadMaps"},{"comment":"/**\n * Save or update the map resource using geostore observables\n * @memberof actions.maps\n * @param {boolean} enabled the `enabled` flag\n */","meta":{"range":[11328,11421],"filename":"maps.js","lineno":405,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030516","name":"exports.saveMapResource","type":"VariableDeclaration"}},"description":"<p>Save or update the map resource using geostore observables</p>","memberof":"actions.maps","params":[{"type":{"names":["boolean"]},"description":"<p>the <code>enabled</code> flag</p>","name":"enabled"}],"name":"exports.saveMapResource","longname":"actions.maps.exports.saveMapResource","kind":"constant","scope":"static","$longname":"actions.maps.exports.saveMapResource"},{"comment":"/**\n * Performed before start saving a new map\n * @memberof actions.maps\n * @param {object} metadata\n * @return {action} type SAVING_MAP action\n */","meta":{"range":[9204,9306],"filename":"maps.js","lineno":327,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030410","name":"exports.savingMap","type":"FunctionDeclaration","paramnames":["metadata"]}},"description":"<p>Performed before start saving a new map</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"name":"metadata"}],"returns":[{"type":{"names":["action"]},"description":"<p>type SAVING_MAP action</p>"}],"name":"exports.savingMap","longname":"actions.maps.exports.savingMap","kind":"function","scope":"static","$longname":"actions.maps.exports.savingMap"},{"comment":"/**\n export * enable/disabled the \"featured maps\" functionality\n * @memberof actions.maps\n * @param {boolean} enabled the `enabled` flag\n */","meta":{"range":[11078,11184],"filename":"maps.js","lineno":396,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030505","name":"exports.setFeaturedMapsEnabled","type":"VariableDeclaration"}},"description":"<p>export * enable/disabled the &quot;featured maps&quot; functionality</p>","memberof":"actions.maps","params":[{"type":{"names":["boolean"]},"description":"<p>the <code>enabled</code> flag</p>","name":"enabled"}],"name":"exports.setFeaturedMapsEnabled","longname":"actions.maps.exports.setFeaturedMapsEnabled","kind":"constant","scope":"static","$longname":"actions.maps.exports.setFeaturedMapsEnabled"},{"comment":"/**\n * setUnsavedChanged\n * @memberof actions.maps\n * @return {action}        type `SET_UNSAVED_CHANGES`\n*/","meta":{"range":[10646,10759],"filename":"maps.js","lineno":374,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030486","name":"exports.setUnsavedChanged","type":"FunctionDeclaration","paramnames":["value"]}},"description":"<p>setUnsavedChanged</p>","memberof":"actions.maps","returns":[{"type":{"names":["action"]},"description":"<p>type <code>SET_UNSAVED_CHANGES</code></p>"}],"name":"exports.setUnsavedChanged","longname":"actions.maps.exports.setUnsavedChanged","kind":"function","scope":"static","$longname":"actions.maps.exports.setUnsavedChanged"},{"comment":"/**\n * When an error saving the thumbnail occurred\n * @memberof actions.maps\n * @param  {number} resourceId the id of the resource\n * @param  {object} error      the error occurred\n * @return {action}            type `THUMBNAIL_ERROR`, with the arguments as they are named\n */","meta":{"range":[8533,8671],"filename":"maps.js","lineno":298,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030382","name":"exports.thumbnailError","type":"FunctionDeclaration","paramnames":["resourceId","error"]}},"description":"<p>When an error saving the thumbnail occurred</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource</p>","name":"resourceId"},{"type":{"names":["object"]},"description":"<p>the error occurred</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>THUMBNAIL_ERROR</code>, with the arguments as they are named</p>"}],"name":"exports.thumbnailError","longname":"actions.maps.exports.thumbnailError","kind":"function","scope":"static","$longname":"actions.maps.exports.thumbnailError"},{"comment":"/**\n * updates an attribute for a given map\n * @memberof actions.maps\n * @param  {number} resourceId the id of the resource\n * @param  {string} name       the name of the attribute\n * @param  {string} value      the value of the attribute\n * @param  {string} [type]     the type of the attribute\n * @param  {object} [options]  options for the request\n * @return {thunk}  performs the update and dispatch attributeUpdated or thumbnailError\n */","meta":{"range":[9751,10130],"filename":"maps.js","lineno":344,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030421","name":"exports.updateAttribute","type":"FunctionDeclaration","paramnames":["resourceId","name","value","type","options"]}},"description":"<p>updates an attribute for a given map</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource</p>","name":"resourceId"},{"type":{"names":["string"]},"description":"<p>the name of the attribute</p>","name":"name"},{"type":{"names":["string"]},"description":"<p>the value of the attribute</p>","name":"value"},{"type":{"names":["string"]},"optional":true,"description":"<p>the type of the attribute</p>","name":"type"},{"type":{"names":["object"]},"optional":true,"description":"<p>options for the request</p>","name":"options"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>performs the update and dispatch attributeUpdated or thumbnailError</p>"}],"name":"exports.updateAttribute","longname":"actions.maps.exports.updateAttribute","kind":"function","scope":"static","$longname":"actions.maps.exports.updateAttribute"}]},{"comment":"/**\n * Actions for map type management.Allow to manage the default map type.\n * @name actions.maptype\n */","meta":{"filename":"maptype.js","lineno":43,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>Actions for map type management.Allow to manage the default map type.</p>","name":"maptype","memberof":"actions","longname":"actions.maptype","scope":"static","kind":"member","$longname":"actions.maptype","$members":[{"comment":"/**\n * changes the map type\n * @memberof actions.maptype\n * @param  {string} mapType the mapType.\n * @return {action}         the action of type `MAP_TYPE_CHANGED` with mapType\n */","meta":{"range":[511,621],"filename":"maptype.js","lineno":18,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030555","name":"exports.changeMapType","type":"FunctionDeclaration","paramnames":["mapType"]}},"description":"<p>changes the map type</p>","memberof":"actions.maptype","params":[{"type":{"names":["string"]},"description":"<p>the mapType.</p>","name":"mapType"}],"returns":[{"type":{"names":["action"]},"description":"<p>the action of type <code>MAP_TYPE_CHANGED</code> with mapType</p>"}],"name":"exports.changeMapType","longname":"actions.maptype.exports.changeMapType","kind":"function","scope":"static","$longname":"actions.maptype.exports.changeMapType"}]},{"comment":"/**\n * actions for notifications\n * @name notifications\n * @memberof actions\n */","meta":{"filename":"notifications.js","lineno":111,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>actions for notifications</p>","name":"notifications","memberof":"actions","scope":"static","longname":"actions.notifications","kind":"member","$longname":"actions.notifications","$members":[{"comment":"/**\n * Clear all the notifications\n * @memberof actions.notifications\n * @returns {object}     action of type `CLEAR_NOTIFICATIONS`\n */","meta":{"range":[2926,3007],"filename":"notifications.js","lineno":96,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030672","name":"exports.clear","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>Clear all the notifications</p>","memberof":"actions.notifications","returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>CLEAR_NOTIFICATIONS</code></p>"}],"name":"exports.clear","longname":"actions.notifications.exports.clear","kind":"function","scope":"static","$longname":"actions.notifications.exports.clear"},{"comment":"/**\n * Dispatch a custom action on callback\n * @memberof actions.notifications\n * @returns {object}     action\n */","meta":{"range":[3124,3185],"filename":"notifications.js","lineno":107,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030680","name":"exports.dispatchAction","type":"FunctionDeclaration","paramnames":["action"]}},"description":"<p>Dispatch a custom action on callback</p>","memberof":"actions.notifications","returns":[{"type":{"names":["object"]},"description":"<p>action</p>"}],"name":"exports.dispatchAction","longname":"actions.notifications.exports.dispatchAction","kind":"function","scope":"static","$longname":"actions.notifications.exports.dispatchAction"},{"comment":"/**\n * Show a error notification. {@see actions.notifications.show}\n * @memberof actions.notifications\n * @param  {object} opts notification opts\n * @returns {object}     action of type `HIDE_NOTIFICATION`\n */","meta":{"range":[2172,2235],"filename":"notifications.js","lineno":67,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030642","name":"exports.error","type":"FunctionDeclaration","paramnames":["opts"]}},"description":"<p>Show a error notification. {@see actions.notifications.show}</p>","memberof":"actions.notifications","params":[{"type":{"names":["object"]},"description":"<p>notification opts</p>","name":"opts"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>HIDE_NOTIFICATION</code></p>"}],"name":"exports.error","longname":"actions.notifications.exports.error","kind":"function","scope":"static","$longname":"actions.notifications.exports.error"},{"comment":"/**\n * Hides (removes) the notification with the id provided\n * @memberof actions.notifications\n * @param  {string|number} uid the identifier\n * @returns {object}     action of type `HIDE_NOTIFICATION`\n */","meta":{"range":[1586,1680],"filename":"notifications.js","lineno":45,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030621","name":"exports.hide","type":"FunctionDeclaration","paramnames":["uid"]}},"description":"<p>Hides (removes) the notification with the id provided</p>","memberof":"actions.notifications","params":[{"type":{"names":["string","number"]},"description":"<p>the identifier</p>","name":"uid"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>HIDE_NOTIFICATION</code></p>"}],"name":"exports.hide","longname":"actions.notifications.exports.hide","kind":"function","scope":"static","$longname":"actions.notifications.exports.hide"},{"comment":"/**\n * Show a info notification. {@see actions.notifications.show}\n * @memberof actions.notifications\n * @param  {object} opts notification opts\n * @returns {object}     action of type `HIDE_NOTIFICATION`\n */","meta":{"range":[2727,2788],"filename":"notifications.js","lineno":87,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030662","name":"exports.info","type":"FunctionDeclaration","paramnames":["opts"]}},"description":"<p>Show a info notification. {@see actions.notifications.show}</p>","memberof":"actions.notifications","params":[{"type":{"names":["object"]},"description":"<p>notification opts</p>","name":"opts"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>HIDE_NOTIFICATION</code></p>"}],"name":"exports.info","longname":"actions.notifications.exports.info","kind":"function","scope":"static","$longname":"actions.notifications.exports.info"},{"comment":"/**\n * Show a notification\n * @memberof actions.notifications\n * @param  {Object} [opts={}]         the notification configuration. [Here the compete ref](https://github.com/igorprado/react-notification-system#creating-a-notification)\n * ```\n *  {\n *    title: \"title.translation.path\" // or the message directly\n *    message: \"message.translation.path\" // or the message directly\n *    uid: \"1234\" // a unique identifier (if not present, current time is used),\n *    action: {\n *      label:  \"label.translation.path\" // or the message directly\n *    },\n *    values: {param1: value1} // optional, used to parametrize the string\n *  }\n * ```\n * @param  {String} [level='success'] The level of the notification. (one of \"success\"|\"warning\"|\"info\"|\"error\")\n * @return {object}                   action of type `SHOW_NOTIFICATION`\n */","meta":{"range":[1203,1378],"filename":"notifications.js","lineno":30,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030594","name":"exports.show","type":"FunctionDeclaration","paramnames":["opts","level"]}},"description":"<p>Show a notification</p>","memberof":"actions.notifications","params":[{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"<p>the notification configuration. <a href=\"https://github.com/igorprado/react-notification-system#creating-a-notification\">Here the compete ref</a></p>\n<pre class=\"prettyprint source\"><code> {\n   title: &quot;title.translation.path&quot; // or the message directly\n   message: &quot;message.translation.path&quot; // or the message directly\n   uid: &quot;1234&quot; // a unique identifier (if not present, current time is used),\n   action: {\n     label:  &quot;label.translation.path&quot; // or the message directly\n   },\n   values: {param1: value1} // optional, used to parametrize the string\n }\n</code></pre>","name":"opts"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"'success'","description":"<p>The level of the notification. (one of &quot;success&quot;|&quot;warning&quot;|&quot;info&quot;|&quot;error&quot;)</p>","name":"level"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>SHOW_NOTIFICATION</code></p>"}],"name":"exports.show","longname":"actions.notifications.exports.show","kind":"function","scope":"static","$longname":"actions.notifications.exports.show"},{"comment":"/**\n * Show a success notification. {@see actions.notifications.show}\n * @memberof actions.notifications\n * @param  {object} opts notification opts\n * @returns {object}     action of type `HIDE_NOTIFICATION`\n */","meta":{"range":[1894,1961],"filename":"notifications.js","lineno":58,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030632","name":"exports.success","type":"FunctionDeclaration","paramnames":["opts"]}},"description":"<p>Show a success notification. {@see actions.notifications.show}</p>","memberof":"actions.notifications","params":[{"type":{"names":["object"]},"description":"<p>notification opts</p>","name":"opts"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>HIDE_NOTIFICATION</code></p>"}],"name":"exports.success","longname":"actions.notifications.exports.success","kind":"function","scope":"static","$longname":"actions.notifications.exports.success"},{"comment":"/**\n * Show a warning notification. {@see actions.notifications.show}\n * @memberof actions.notifications\n * @param  {object} opts notification opts\n * @returns {object}     action of type `HIDE_NOTIFICATION`\n */","meta":{"range":[2449,2516],"filename":"notifications.js","lineno":77,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030652","name":"exports.warning","type":"FunctionDeclaration","paramnames":["opts"]}},"description":"<p>Show a warning notification. {@see actions.notifications.show}</p>","memberof":"actions.notifications","params":[{"type":{"names":["object"]},"description":"<p>notification opts</p>","name":"opts"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>HIDE_NOTIFICATION</code></p>"}],"name":"exports.warning","longname":"actions.notifications.exports.warning","kind":"function","scope":"static","$longname":"actions.notifications.exports.warning"}]},{"comment":"/**\n * Actions for search\n * @name actions.search\n*/","meta":{"filename":"search.js","lineno":284,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{}},"description":"<p>Actions for search</p>","name":"search","memberof":"actions","longname":"actions.search","scope":"static","kind":"member","$longname":"actions.search"}]},{"comment":"/**\n * add a marker to the search result layer\n * @memberof actions.search\n * @param {object} itemPosition\n */","meta":{"range":[4529,4708],"filename":"search.js","lineno":159,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030920","name":"exports.addMarker","type":"FunctionDeclaration","paramnames":["itemPosition","itemText"]}},"description":"<p>add a marker to the search result layer</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"name":"itemPosition"}],"name":"exports.addMarker","longname":"actions.search.exports.addMarker","kind":"function","scope":"static","$longname":"actions.search.exports.addMarker"},{"comment":"/**\n * remove an item selected ()\n * @memberof actions.search\n * @param {object} item the item to remove\n */","meta":{"range":[6593,6709],"filename":"search.js","lineno":240,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100031012","name":"exports.cancelSelectedItem","type":"FunctionDeclaration","paramnames":["item"]}},"description":"<p>remove an item selected ()</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"description":"<p>the item to remove</p>","name":"item"}],"name":"exports.cancelSelectedItem","longname":"actions.search.exports.cancelSelectedItem","kind":"function","scope":"static","$longname":"actions.search.exports.cancelSelectedItem"},{"comment":"/**\n * updates the active menu\n * @memberof actions.search\n * @param {string} activeSearchTool services intrested to use for the next search\n */","meta":{"range":[2772,2911],"filename":"search.js","lineno":77,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030841","name":"exports.changeActiveSearchTool","type":"FunctionDeclaration","paramnames":["activeSearchTool"]}},"description":"<p>updates the active menu</p>","memberof":"actions.search","params":[{"type":{"names":["string"]},"description":"<p>services intrested to use for the next search</p>","name":"activeSearchTool"}],"name":"exports.changeActiveSearchTool","longname":"actions.search.exports.changeActiveSearchTool","kind":"function","scope":"static","$longname":"actions.search.exports.changeActiveSearchTool"},{"comment":"/**\n * Change coordinate\n * @memberof actions.search\n * @param {object} coordinate\n */","meta":{"range":[7329,7447],"filename":"search.js","lineno":276,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100031045","name":"exports.changeCoord","type":"FunctionDeclaration","paramnames":["coord","val"]}},"description":"<p>Change coordinate</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"name":"coordinate"}],"name":"exports.changeCoord","longname":"actions.search.exports.changeCoord","kind":"function","scope":"static","$longname":"actions.search.exports.changeCoord"},{"comment":"/**\n * change the format for coordinate editor tool\n * @memberof actions.search\n * @param {string} format (decimal or aeronautical)\n*/","meta":{"range":[1666,1770],"filename":"search.js","lineno":35,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030794","name":"exports.changeFormat","type":"FunctionDeclaration","paramnames":["format"]}},"description":"<p>change the format for coordinate editor tool</p>","memberof":"actions.search","params":[{"type":{"names":["string"]},"description":"<p>(decimal or aeronautical)</p>","name":"format"}],"name":"exports.changeFormat","longname":"actions.search.exports.changeFormat","kind":"function","scope":"static","$longname":"actions.search.exports.changeFormat"},{"comment":"/**\n * Hide a marker\n * @memberof actions.search\n */","meta":{"range":[4763,4841],"filename":"search.js","lineno":171,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030934","name":"exports.hideMarker","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>Hide a marker</p>","memberof":"actions.search","name":"exports.hideMarker","longname":"actions.search.exports.hideMarker","kind":"function","scope":"static","$longname":"actions.search.exports.hideMarker"},{"comment":"/**\n * reset the search text and clear results\n * @memberof actions.search\n */","meta":{"range":[4331,4416],"filename":"search.js","lineno":148,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030912","name":"exports.resetSearch","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>reset the search text and clear results</p>","memberof":"actions.search","name":"exports.resetSearch","longname":"actions.search.exports.resetSearch","kind":"function","scope":"static","$longname":"actions.search.exports.resetSearch"},{"comment":"/**\n * clear the results\n * @memberof actions.search\n */","meta":{"range":[4156,4250],"filename":"search.js","lineno":138,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030904","name":"exports.resultsPurge","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>clear the results</p>","memberof":"actions.search","name":"exports.resultsPurge","longname":"actions.search.exports.resultsPurge","kind":"function","scope":"static","$longname":"actions.search.exports.resultsPurge"},{"comment":"/**\n * used to trigger two wfs requests GetFeature and then GetFeatureInfo\n * @memberof actions.search\n * @prop {object} options {layer, cql_filter}\n * @prop {string} options.cql_filter optional filter to apply for both requests\n * @prop {string} options.layer name of the layer with workspace\n*/","meta":{"range":[2106,2279],"filename":"search.js","lineno":49,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030805","name":"exports.searchLayerWithFilter","type":"FunctionDeclaration","paramnames":[""]}},"description":"<p>used to trigger two wfs requests GetFeature and then GetFeatureInfo</p>","memberof":"actions.search","properties":[{"type":{"names":["object"]},"description":"<p>{layer, cql_filter}</p>","name":"options"},{"type":{"names":["string"]},"description":"<p>optional filter to apply for both requests</p>","name":"options.cql_filter"},{"type":{"names":["string"]},"description":"<p>name of the layer with workspace</p>","name":"options.layer"}],"name":"exports.searchLayerWithFilter","longname":"actions.search.exports.searchLayerWithFilter","kind":"function","scope":"static","$longname":"actions.search.exports.searchLayerWithFilter"},{"comment":"/**\n * an error occurred during text searchText\n * @memberof actions.search\n * @param error the error\n */","meta":{"range":[3986,4097],"filename":"search.js","lineno":127,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030893","name":"exports.searchResultError","type":"FunctionDeclaration","paramnames":["error"]}},"description":"<p>an error occurred during text searchText</p>","memberof":"actions.search","params":[{"description":"<p>the error</p>","name":"error"}],"name":"exports.searchResultError","longname":"actions.search.exports.searchResultError","kind":"function","scope":"static","$longname":"actions.search.exports.searchResultError"},{"comment":"/**\n * updates the results of the search result loaded\n * @memberof actions.search\n * @param {geojsonFeature[]} results array of search results\n * @param {boolean} append [false] tells to append the result to existing ones or not\n * @param {object[]} servies services intrested to use for the next search\n */","meta":{"range":[3222,3424],"filename":"search.js","lineno":91,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030852","name":"exports.searchResultLoaded","type":"FunctionDeclaration","paramnames":["results","append","services"]}},"description":"<p>updates the results of the search result loaded</p>","memberof":"actions.search","params":[{"type":{"names":["Array.<geojsonFeature>"]},"description":"<p>array of search results</p>","name":"results"},{"type":{"names":["boolean"]},"description":"<p>[false] tells to append the result to existing ones or not</p>","name":"append"},{"type":{"names":["Array.<object>"]},"description":"<p>services intrested to use for the next search</p>","name":"servies"}],"name":"exports.searchResultLoaded","longname":"actions.search.exports.searchResultLoaded","kind":"function","scope":"static","$longname":"actions.search.exports.searchResultLoaded"},{"comment":"/**\n * updates the search text\n * @memberof actions.search\n * @param {string} text the new text\n */","meta":{"range":[3525,3652],"filename":"search.js","lineno":104,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030871","name":"exports.searchTextChanged","type":"FunctionDeclaration","paramnames":["text"]}},"description":"<p>updates the search text</p>","memberof":"actions.search","params":[{"type":{"names":["string"]},"description":"<p>the new text</p>","name":"text"}],"name":"exports.searchTextChanged","longname":"actions.search.exports.searchTextChanged","kind":"function","scope":"static","$longname":"actions.search.exports.searchTextChanged"},{"comment":"/**\n * trigger search text loading\n * @memberof actions.search\n * @param {boolean} loading boolean flag\n */","meta":{"range":[3761,3878],"filename":"search.js","lineno":115,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030882","name":"exports.searchTextLoading","type":"FunctionDeclaration","paramnames":["loading"]}},"description":"<p>trigger search text loading</p>","memberof":"actions.search","params":[{"type":{"names":["boolean"]},"description":"<p>boolean flag</p>","name":"loading"}],"name":"exports.searchTextLoading","longname":"actions.search.exports.searchTextLoading","kind":"function","scope":"static","$longname":"actions.search.exports.searchTextLoading"},{"comment":"/**\n * Configures the search tool to perform sub-service queries. It will store the\n * selected item and configure the new nested services.\n * @memberof actions.search\n * @param {object[]} services the of the nested services\n * @param {object[]} items the selected items\n * @param {object[]} searchText the new search text\n */","meta":{"range":[6290,6482],"filename":"search.js","lineno":226,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030995","name":"exports.selectNestedService","type":"FunctionDeclaration","paramnames":["services","items","searchText"]}},"description":"<p>Configures the search tool to perform sub-service queries. It will store the\nselected item and configure the new nested services.</p>","memberof":"actions.search","params":[{"type":{"names":["Array.<object>"]},"description":"<p>the of the nested services</p>","name":"services"},{"type":{"names":["Array.<object>"]},"description":"<p>the selected items</p>","name":"items"},{"type":{"names":["Array.<object>"]},"description":"<p>the new search text</p>","name":"searchText"}],"name":"exports.selectNestedService","longname":"actions.search.exports.selectNestedService","kind":"function","scope":"static","$longname":"actions.search.exports.selectNestedService"},{"comment":"/**\n * Trigger when an item is selected from the search results\n * @memberof actions.search\n * @param {object} item the selected item\n * @param {object} mapConfig the current map configuration (with size, projection...)\n * @param {object} resultsStyle style to apply to results geometries\n */","meta":{"range":[5601,5784],"filename":"search.js","lineno":199,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030967","name":"exports.selectSearchItem","type":"FunctionDeclaration","paramnames":["item","mapConfig","resultsStyle"]}},"description":"<p>Trigger when an item is selected from the search results</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"description":"<p>the selected item</p>","name":"item"},{"type":{"names":["object"]},"description":"<p>the current map configuration (with size, projection...)</p>","name":"mapConfig"},{"type":{"names":["object"]},"description":"<p>style to apply to results geometries</p>","name":"resultsStyle"}],"name":"exports.selectSearchItem","longname":"actions.search.exports.selectSearchItem","kind":"function","scope":"static","$longname":"actions.search.exports.selectSearchItem"},{"comment":"/**\n * Highlights the given feature\n * @memberof actions.search\n * @param {object} feature the feature to highlight\n */","meta":{"range":[6831,6988],"filename":"search.js","lineno":252,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100031023","name":"exports.setHighlightedFeature","type":"FunctionDeclaration","paramnames":["feature"]}},"description":"<p>Highlights the given feature</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"description":"<p>the feature to highlight</p>","name":"feature"}],"name":"exports.setHighlightedFeature","longname":"actions.search.exports.setHighlightedFeature","kind":"function","scope":"static","$longname":"actions.search.exports.setHighlightedFeature"},{"comment":"/**\n * perform a text search\n * @memberof actions.search\n * @param {string} searchText the text to search\n * @param {object} [options={}] - the search options. Contain the services\n * @param {number} [maxResults=15] - the max results obtained from all the services\n */","meta":{"range":[5111,5306],"filename":"search.js","lineno":183,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030942","name":"exports.textSearch","type":"FunctionDeclaration","paramnames":["searchText","","maxResults"]}},"description":"<p>perform a text search</p>","memberof":"actions.search","params":[{"type":{"names":["string"]},"description":"<p>the text to search</p>","name":"searchText"},{"type":{"names":["object"]},"optional":true,"defaultvalue":"{}","description":"<p>the search options. Contain the services</p>","name":"options"},{"type":{"names":["number"]},"optional":true,"defaultvalue":15,"description":"<p>the max results obtained from all the services</p>","name":"maxResults"}],"name":"exports.textSearch","longname":"actions.search.exports.textSearch","kind":"function","scope":"static","$longname":"actions.search.exports.textSearch"},{"comment":"/**\n * Change default style of results geometries\n * @memberof actions.search\n * @param {object} style style of results geometries\n */","meta":{"range":[7125,7240],"filename":"search.js","lineno":264,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100031034","name":"exports.updateResultsStyle","type":"FunctionDeclaration","paramnames":["style"]}},"description":"<p>Change default style of results geometries</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"description":"<p>style of results geometries</p>","name":"style"}],"name":"exports.updateResultsStyle","longname":"actions.search.exports.updateResultsStyle","kind":"function","scope":"static","$longname":"actions.search.exports.updateResultsStyle"},{"comment":"/**\n * zoom to a specific point\n * @memberof actions.search\n * @param {object} pos as array [x, y] or object {x: ..., y:...}\n * @param {number} zoom level to zoom to\n * @param {string} crs of the point\n*/","meta":{"range":[2485,2625],"filename":"search.js","lineno":63,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030824","name":"exports.zoomAndAddPoint","type":"FunctionDeclaration","paramnames":["pos","zoom","crs"]}},"description":"<p>zoom to a specific point</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"description":"<p>as array [x, y] or object {x: ..., y:...}</p>","name":"pos"},{"type":{"names":["number"]},"description":"<p>level to zoom to</p>","name":"zoom"},{"type":{"names":["string"]},"description":"<p>of the point</p>","name":"crs"}],"name":"exports.zoomAndAddPoint","longname":"actions.search.exports.zoomAndAddPoint","kind":"function","scope":"static","$longname":"actions.search.exports.zoomAndAddPoint"},{"comment":"/**\n     * layers specified in the mapviewer query params are added\n     * it will perform the getRecords requests to fetch records that are transformed into layer\n     * and added to the map\n    */","meta":{"range":[5603,10565],"filename":"catalog.js","lineno":145,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100039443","name":"addLayersFromCatalogsEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>layers specified in the mapviewer query params are added\nit will perform the getRecords requests to fetch records that are transformed into layer\nand added to the map</p>","name":"addLayersFromCatalogsEpic","longname":"addLayersFromCatalogsEpic","kind":"function","scope":"global","$longname":"addLayersFromCatalogsEpic"},{"comment":"/**\n * Adds/Updates a map custom transformer for the default printing service map object transformer chain.\n *\n * Map transformers can be used to implement custom behaviour that changes map related properties and\n * should be reflected on the printing plugin dialog (e.g. the map-preview).\n *\n * These are applied to the print state map fragment before being passed as a map property to the Print\n * plugin items.\n *\n * @param {string} name name of the transformer (allows replacing and existing one).\n * @param {function} transformer (state, map) => map\n * @example\n * // add a map transformer to increase the map zoom by 1\n * addMapTransformer(\"mymaptransform\", (state, map) => ({...map, zoom: map.zoom + 1}))\n */","meta":{"range":[13849,14001],"filename":"PrintUtils.js","lineno":370,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064866","name":"exports.addMapTransformer","type":"FunctionDeclaration","paramnames":["name","transformer"]}},"description":"<p>Adds/Updates a map custom transformer for the default printing service map object transformer chain.</p>\n<p>Map transformers can be used to implement custom behaviour that changes map related properties and\nshould be reflected on the printing plugin dialog (e.g. the map-preview).</p>\n<p>These are applied to the print state map fragment before being passed as a map property to the Print\nplugin items.</p>","params":[{"type":{"names":["string"]},"description":"<p>name of the transformer (allows replacing and existing one).</p>","name":"name"},{"type":{"names":["function"]},"description":"<p>(state, map) =&gt; map</p>","name":"transformer"}],"examples":["// add a map transformer to increase the map zoom by 1\naddMapTransformer(\"mymaptransform\", (state, map) => ({...map, zoom: map.zoom + 1}))"],"name":"addMapTransformer","longname":"addMapTransformer","kind":"function","scope":"global","$longname":"addMapTransformer"},{"comment":"/**\n * Adds a new validation function.\n * @param {string} id unique id of the validator (a validator with the same id will be replaced).\n * @param {string} name binding name of the validator (bind the validator result to a specific item / plugin, by item id).\n * @param {function} validator (state, current_validation) => { valid: true/false, errors: [\"message\", ...] }\n *\n * @example\n * // add a validator for the myplugin plugin, bound to the map-preview component\n * addValidator(\"myplugin\", \"map-preview\", (state, current) => state.print.myprop ? {valid: true} : {valid: false, errors: [\"myprop missing\"]})\n */","meta":{"range":[14910,15051],"filename":"PrintUtils.js","lineno":393,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064939","name":"exports.addValidator","type":"FunctionDeclaration","paramnames":["id","name","validator"]}},"description":"<p>Adds a new validation function.</p>","params":[{"type":{"names":["string"]},"description":"<p>unique id of the validator (a validator with the same id will be replaced).</p>","name":"id"},{"type":{"names":["string"]},"description":"<p>binding name of the validator (bind the validator result to a specific item / plugin, by item id).</p>","name":"name"},{"type":{"names":["function"]},"description":"<p>(state, current_validation) =&gt; { valid: true/false, errors: [&quot;message&quot;, ...] }</p>","name":"validator"}],"examples":["// add a validator for the myplugin plugin, bound to the map-preview component\naddValidator(\"myplugin\", \"map-preview\", (state, current) => state.print.myprop ? {valid: true} : {valid: false, errors: [\"myprop missing\"]})"],"name":"addValidator","longname":"addValidator","kind":"function","scope":"global","$longname":"addValidator"},{"comment":"/**\n * Common requests to 3D tiles tileset\n * @module api.ThreeDTiles\n */","meta":{"filename":"ThreeDTiles.js","lineno":129,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Common requests to 3D tiles tileset</p>","kind":"module","name":"ThreeDTiles","memberof":"api","longname":"api.module:ThreeDTiles","scope":"static","$longname":"api.module:ThreeDTiles","$members":[{"comment":"/**\n * get the tileset json response and additional parsed information such as: version, bbox, format and properties\n * @param {string} url URL of the 3d tiles tileset.json file\n * @\n */","meta":{"range":[5177,5392],"filename":"ThreeDTiles.js","lineno":139,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{"id":"astnode100001988","name":"exports.getCapabilities","type":"VariableDeclaration"}},"description":"<p>get the tileset json response and additional parsed information such as: version, bbox, format and properties</p>","params":[{"type":{"names":["string"]},"description":"<p>URL of the 3d tiles tileset.json file\n@</p>","name":"url"}],"name":"getCapabilities","longname":"api.module:ThreeDTiles.getCapabilities","kind":"constant","memberof":"api.module:ThreeDTiles","scope":"static","$longname":"api.module:ThreeDTiles.getCapabilities"}]},{"comment":"/**\n * API for GeoServer SLDService {@link http://docs.geoserver.org/stable/en/user/community/sldservice/index.html}.\n *\n * Can be used to implement @see {@link api/plugins#plugins.ThematicLayer}\n *\n * @memberof API\n * @name SLDService\n */","meta":{"filename":"SLDService.js","lineno":183,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>API for GeoServer SLDService {@link http://docs.geoserver.org/stable/en/user/community/sldservice/index.html}.</p>\n<p>Can be used to implement @see {@link api/plugins#plugins.ThematicLayer}</p>","memberof":"API","name":"SLDService","scope":"static","longname":"API.SLDService","kind":"member","$longname":"API.SLDService","$members":[{"comment":"/**\n     * Gets a list of color samples for all the given palettes.\n     *\n     * @memberof API.SLDService\n     * @method getColors\n     * @param {object} baseColors base color palettes\n     * @param {object} layer layer configuration (can contain thematic.colors for color palette overrides or thematic.additionalColors for appending)\n     * @param {number} samples number of samples for each palette\n     * @returns {array} list of palettes with sample colors\n     */","meta":{"filename":"SLDService.js","lineno":417,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Gets a list of color samples for all the given palettes.</p>","memberof":"API.SLDService","kind":"function","name":"getColors","params":[{"type":{"names":["object"]},"description":"<p>base color palettes</p>","name":"baseColors"},{"type":{"names":["object"]},"description":"<p>layer configuration (can contain thematic.colors for color palette overrides or thematic.additionalColors for appending)</p>","name":"layer"},{"type":{"names":["number"]},"description":"<p>number of samples for each palette</p>","name":"samples"}],"returns":[{"type":{"names":["array"]},"description":"<p>list of palettes with sample colors</p>"}],"scope":"static","longname":"API.SLDService.getColors","$longname":"API.SLDService.getColors"},{"comment":"/**\n     * Returns the url to get a list of fields available for the given layer.\n     * If the layer has a datatable configuration property in the thematic object, this is used to extract fields list,\n     * otherwise the original layer is used (datatable is used for SQLViews doing aggregation, where the original list of data attributes\n     * is not directly available on the aggregated layer).\n     *\n     * @memberof API.SLDService\n     * @method getFieldsService\n     * @param {object} layer layer configuration object\n     * @returns {string} url of the attributes service\n     */","meta":{"filename":"SLDService.js","lineno":263,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Returns the url to get a list of fields available for the given layer.\nIf the layer has a datatable configuration property in the thematic object, this is used to extract fields list,\notherwise the original layer is used (datatable is used for SQLViews doing aggregation, where the original list of data attributes\nis not directly available on the aggregated layer).</p>","memberof":"API.SLDService","kind":"function","name":"getFieldsService","params":[{"type":{"names":["object"]},"description":"<p>layer configuration object</p>","name":"layer"}],"returns":[{"type":{"names":["string"]},"description":"<p>url of the attributes service</p>"}],"scope":"static","longname":"API.SLDService.getFieldsService","$longname":"API.SLDService.getFieldsService"},{"comment":"/**\n     * Returns an object with parameters mapped from UI ones, to WMS ones.\n     *\n     * @memberof API.SLDService\n     * @method getMetadataParameters\n     * @param {object} layer layer configuration object\n     * @param {object} params map of classification parameters: they will be used to build parameters for the SLDService classify service\n     * @returns {object} classification parameters object\n     */","meta":{"filename":"SLDService.js","lineno":251,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Returns an object with parameters mapped from UI ones, to WMS ones.</p>","memberof":"API.SLDService","kind":"function","name":"getMetadataParameters","params":[{"type":{"names":["object"]},"description":"<p>layer configuration object</p>","name":"layer"},{"type":{"names":["object"]},"description":"<p>map of classification parameters: they will be used to build parameters for the SLDService classify service</p>","name":"params"}],"returns":[{"type":{"names":["object"]},"description":"<p>classification parameters object</p>"}],"scope":"static","longname":"API.SLDService.getMetadataParameters","$longname":"API.SLDService.getMetadataParameters"},{"comment":"/**\n     * Returns a url to get a classification JSON, given a layer cfg object and a list\n     * of classification parameters.\n     *\n     * @memberof API.SLDService\n     * @method getStyleMetadataService\n     * @param {object} layer layer configuration object\n     * @param {object} params map of classification parameters: they will be used to build parameters for the SLDService classify service\n     * @param {object} styleService style service configuration object\n     * @returns {string} url to get a classification metadata JSON\n     */","meta":{"filename":"SLDService.js","lineno":215,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Returns a url to get a classification JSON, given a layer cfg object and a list\nof classification parameters.</p>","memberof":"API.SLDService","kind":"function","name":"getStyleMetadataService","params":[{"type":{"names":["object"]},"description":"<p>layer configuration object</p>","name":"layer"},{"type":{"names":["object"]},"description":"<p>map of classification parameters: they will be used to build parameters for the SLDService classify service</p>","name":"params"},{"type":{"names":["object"]},"description":"<p>style service configuration object</p>","name":"styleService"}],"returns":[{"type":{"names":["string"]},"description":"<p>url to get a classification metadata JSON</p>"}],"scope":"static","longname":"API.SLDService.getStyleMetadataService","$longname":"API.SLDService.getStyleMetadataService"},{"comment":"/**\n     * Returns an object with additional parameters to apply a classification style to a WMS layer.\n     *  - SLD: dynamic link to the classification style service\n     *  - viewparams: SQL views parameters actual values\n     *\n     * @memberof API.SLDService\n     * @method getStyleParameters\n     * @param {object} layer layer configuration object\n     * @param {object} params map of classification parameters: they will be used to build parameters for the SLDService classify service\n     * @returns {object} classification style object (SLD, viewparams)\n     */","meta":{"filename":"SLDService.js","lineno":234,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Returns an object with additional parameters to apply a classification style to a WMS layer.</p>\n<ul>\n<li>SLD: dynamic link to the classification style service</li>\n<li>viewparams: SQL views parameters actual values</li>\n</ul>","memberof":"API.SLDService","kind":"function","name":"getStyleParameters","params":[{"type":{"names":["object"]},"description":"<p>layer configuration object</p>","name":"layer"},{"type":{"names":["object"]},"description":"<p>map of classification parameters: they will be used to build parameters for the SLDService classify service</p>","name":"params"}],"returns":[{"type":{"names":["object"]},"description":"<p>classification style object (SLD, viewparams)</p>"}],"scope":"static","longname":"API.SLDService.getStyleParameters","$longname":"API.SLDService.getStyleParameters"},{"comment":"/**\n     * Returns a url to get a full SLD for classification, given a layer cfg object and a list\n     * of classification parameters.\n     *\n     * @memberof API.SLDService\n     * @method getStyleService\n     * @param {object} layer layer configuration object\n     * @param {object} params map of classification parameters: they will be used to build parameters for the SLDService classify service\n     * @returns {string} url to get a classification SLD\n     */","meta":{"filename":"SLDService.js","lineno":192,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Returns a url to get a full SLD for classification, given a layer cfg object and a list\nof classification parameters.</p>","memberof":"API.SLDService","kind":"function","name":"getStyleService","params":[{"type":{"names":["object"]},"description":"<p>layer configuration object</p>","name":"layer"},{"type":{"names":["object"]},"description":"<p>map of classification parameters: they will be used to build parameters for the SLDService classify service</p>","name":"params"}],"returns":[{"type":{"names":["string"]},"description":"<p>url to get a classification SLD</p>"}],"scope":"static","longname":"API.SLDService.getStyleService","$longname":"API.SLDService.getStyleService"},{"comment":"/**\n     * Inlines configuration parameters, replacing known types (e.g. aggregate) with actual configuration.\n     *\n     * @memberof API.SLDService\n     * @method getThematicParameters\n     * @param {object} params simplified parameters configuration\n     * @returns {array} list of actual parameters configuration (standard params are inlined)\n     */","meta":{"filename":"SLDService.js","lineno":374,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Inlines configuration parameters, replacing known types (e.g. aggregate) with actual configuration.</p>","memberof":"API.SLDService","kind":"function","name":"getThematicParameters","params":[{"type":{"names":["object"]},"description":"<p>simplified parameters configuration</p>","name":"params"}],"returns":[{"type":{"names":["array"]},"description":"<p>list of actual parameters configuration (standard params are inlined)</p>"}],"scope":"static","longname":"API.SLDService.getThematicParameters","$longname":"API.SLDService.getThematicParameters"},{"comment":"/**\n     * Checks if the given layer has a thematic style applied on it (SLD param not empty)\n     *\n     * @memberof API.SLDService\n     * @method hasThematicStyle\n     * @param {object} layer layer configuration\n     * @returns {boolean} true if thematic style is applied, false otherwise\n     */","meta":{"filename":"SLDService.js","lineno":438,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Checks if the given layer has a thematic style applied on it (SLD param not empty)</p>","memberof":"API.SLDService","kind":"function","name":"hasThematicStyle","params":[{"type":{"names":["object"]},"description":"<p>layer configuration</p>","name":"layer"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>true if thematic style is applied, false otherwise</p>"}],"scope":"static","longname":"API.SLDService.hasThematicStyle","$longname":"API.SLDService.hasThematicStyle"},{"comment":"/**\n     * supported classification methods\n     *\n     * @memberof API.SLDService\n     * @property {array} methods supported classification methods\n     */","meta":{"range":[14554,14615],"filename":"SLDService.js","lineno":371,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{"id":"astnode100001307","name":"methods","type":"ArrayExpression","value":"[\"equalInterval\",\"quantile\",\"jenks\"]"}},"description":"<p>supported classification methods</p>","memberof":"API.SLDService","properties":[{"type":{"names":["array"]},"description":"<p>supported classification methods</p>","name":"methods"}],"name":"methods","longname":"API.SLDService.methods","kind":"member","scope":"static","$longname":"API.SLDService.methods"},{"comment":"/**\n     * Reads classification classes returned by the classification service and builds a simple list of:\n     *  - color\n     *  - min\n     *  - max\n     * If the layer has a datatable configuration property in the thematic object, this is used to extract fields list,\n     * otherwise the original layer is used (datatable is used for SQLViews doing aggregation, where the original list of data attributes\n     * is not directly available on the aggregated layer).\n     *\n     * @memberof API.SLDService\n     * @method readClassification\n     * @param {object} classificationObj object returned by SLDService classifier service\n     * @param {string} method name of classification\n     * @returns {array} simplified classification classes list\n     */","meta":{"filename":"SLDService.js","lineno":302,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Reads classification classes returned by the classification service and builds a simple list of:</p>\n<ul>\n<li>color</li>\n<li>min</li>\n<li>max\nIf the layer has a datatable configuration property in the thematic object, this is used to extract fields list,\notherwise the original layer is used (datatable is used for SQLViews doing aggregation, where the original list of data attributes\nis not directly available on the aggregated layer).</li>\n</ul>","memberof":"API.SLDService","kind":"function","name":"readClassification","params":[{"type":{"names":["object"]},"description":"<p>object returned by SLDService classifier service</p>","name":"classificationObj"},{"type":{"names":["string"]},"description":"<p>name of classification</p>","name":"method"}],"returns":[{"type":{"names":["array"]},"description":"<p>simplified classification classes list</p>"}],"scope":"static","longname":"API.SLDService.readClassification","$longname":"API.SLDService.readClassification"},{"comment":"/**\n     * Reads attributes returned by the attributes service and builds a simple list of:\n     *  - name\n     *  - type (only number is currently supported)\n     * If the layer has a datatable configuration property in the thematic object, this is used to extract fields list,\n     * otherwise the original layer is used (datatable is used for SQLViews doing aggregation, where the original list of data attributes\n     * is not directly available on the aggregated layer).\n     *\n     * @memberof API.SLDService\n     * @method readFields\n     * @param {object} fieldsObj object returned by SLDService attributes service\n     * @returns {array} simplified fields list\n     */","meta":{"filename":"SLDService.js","lineno":281,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Reads attributes returned by the attributes service and builds a simple list of:</p>\n<ul>\n<li>name</li>\n<li>type (only number is currently supported)\nIf the layer has a datatable configuration property in the thematic object, this is used to extract fields list,\notherwise the original layer is used (datatable is used for SQLViews doing aggregation, where the original list of data attributes\nis not directly available on the aggregated layer).</li>\n</ul>","memberof":"API.SLDService","kind":"function","name":"readFields","params":[{"type":{"names":["object"]},"description":"<p>object returned by SLDService attributes service</p>","name":"fieldsObj"}],"returns":[{"type":{"names":["array"]},"description":"<p>simplified fields list</p>"}],"scope":"static","longname":"API.SLDService.readFields","$longname":"API.SLDService.readFields"},{"comment":"/**\n     * Reads classification entries returned by the raster classification service and builds a simple list of:\n     *  - color\n     *  - opacity\n     *  - label\n     *  - quantity\n     * @memberof API.SLDService\n     * @method readRasterClassification\n     * @param {object} rasterClassificationObj object returned by SLDService classifier service\n     * @returns {array} simplified classification classes list\n     */","meta":{"filename":"SLDService.js","lineno":342,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Reads classification entries returned by the raster classification service and builds a simple list of:</p>\n<ul>\n<li>color</li>\n<li>opacity</li>\n<li>label</li>\n<li>quantity</li>\n</ul>","memberof":"API.SLDService","kind":"function","name":"readRasterClassification","params":[{"type":{"names":["object"]},"description":"<p>object returned by SLDService classifier service</p>","name":"rasterClassificationObj"}],"returns":[{"type":{"names":["array"]},"description":"<p>simplified classification classes list</p>"}],"scope":"static","longname":"API.SLDService.readRasterClassification","$longname":"API.SLDService.readRasterClassification"},{"comment":"/**\n     * Removes a thematic style from the given layer (SLD and viewparams params are removed)\n     *\n     * @memberof API.SLDService\n     * @method removeThematicStyle\n     * @param {object} params layer params configuration\n     * @returns {object} layer params configuration without the thematic style parameters\n     */","meta":{"filename":"SLDService.js","lineno":449,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{}},"description":"<p>Removes a thematic style from the given layer (SLD and viewparams params are removed)</p>","memberof":"API.SLDService","kind":"function","name":"removeThematicStyle","params":[{"type":{"names":["object"]},"description":"<p>layer params configuration</p>","name":"params"}],"returns":[{"type":{"names":["object"]},"description":"<p>layer params configuration without the thematic style parameters</p>"}],"scope":"static","longname":"API.SLDService.removeThematicStyle","$longname":"API.SLDService.removeThematicStyle"},{"comment":"/**\n     * Supported known parameters: some parameters have a special behaviour (preconfigured and localized labels and values):\n     *  - type=aggregate (sum, count, min, ...)\n     *\n     * @memberof API.SLDService\n     * @property {object} standardParams supported known parameters\n     */","meta":{"range":[15470,16167],"filename":"SLDService.js","lineno":392,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api","code":{"id":"astnode100001348","name":"standardParams","type":"ObjectExpression","value":"{\"aggregate\":\"\"}"}},"description":"<p>Supported known parameters: some parameters have a special behaviour (preconfigured and localized labels and values):</p>\n<ul>\n<li>type=aggregate (sum, count, min, ...)</li>\n</ul>","memberof":"API.SLDService","properties":[{"type":{"names":["object"]},"description":"<p>supported known parameters</p>","name":"standardParams"}],"name":"standardParams","longname":"API.SLDService.standardParams","kind":"member","scope":"static","$longname":"API.SLDService.standardParams"}]},{"comment":"/**\n * Create a function that add the style property to the feature.\n */","meta":{"range":[6132,6235],"filename":"mapInfo.js","lineno":155,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033207","name":"exports.applyMapInfoStyle","type":"VariableDeclaration"}},"description":"<p>Create a function that add the style property to the feature.</p>","name":"applyMapInfoStyle","longname":"applyMapInfoStyle","kind":"constant","scope":"global","$longname":"applyMapInfoStyle"},{"comment":"/**\n * re-opens the feature grid after it was closed by feature info click\n */","meta":{"range":[42490,44744],"filename":"featuregrid.js","lineno":988,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100046038","name":"exports.autoReopenFeatureGridOnFeatureInfoClose","type":"VariableDeclaration"}},"description":"<p>re-opens the feature grid after it was closed by feature info click</p>","name":"autoReopenFeatureGridOnFeatureInfoClose","longname":"autoReopenFeatureGridOnFeatureInfoClose","kind":"constant","scope":"global","$longname":"autoReopenFeatureGridOnFeatureInfoClose"},{"comment":"/**\n             * it trigger search automatically after a delay, default is 1s\n             * it uses layersSearch in favor of\n             */","meta":{"range":[22732,23451],"filename":"catalog.js","lineno":437,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100041009","name":"autoSearchEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>it trigger search automatically after a delay, default is 1s\nit uses layersSearch in favor of</p>","name":"autoSearchEpic","longname":"autoSearchEpic","kind":"function","scope":"global","$longname":"autoSearchEpic"},{"comment":"/**\n* Calculate length based on haversine or vincenty formula\n* @param {object[]} coords projected in EPSG:4326\n* @return {number} length in meters\n*/","meta":{"range":[16900,17118],"filename":"CoordinatesUtils.js","lineno":509,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100057602","name":"exports.calculateDistance","type":"VariableDeclaration"}},"description":"<p>Calculate length based on haversine or vincenty formula</p>","params":[{"type":{"names":["Array.<object>"]},"description":"<p>projected in EPSG:4326</p>","name":"coords"}],"returns":[{"type":{"names":["number"]},"description":"<p>length in meters</p>"}],"name":"calculateDistance","longname":"calculateDistance","kind":"constant","scope":"global","$longname":"calculateDistance"},{"comment":"/**\n * Return new center position based of visible area\n * @param center {object} new visible center {lat, lng}\n * @param map {object} must contain present map\n * @param layout {object} current layout on map {bottom, top, left, right}\n * @param resolution {number} resolutions of current map zoom\n * @return {object} {pos, zoom, crs}\n */","meta":{"range":[29517,31719],"filename":"CoordinatesUtils.js","lineno":864,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100059347","name":"exports.centerToVisibleArea","type":"VariableDeclaration"}},"description":"<p>Return new center position based of visible area</p>","params":[{"type":{"names":["object"]},"description":"<p>new visible center {lat, lng}</p>","name":"center"},{"type":{"names":["object"]},"description":"<p>must contain present map</p>","name":"map"},{"type":{"names":["object"]},"description":"<p>current layout on map {bottom, top, left, right}</p>","name":"layout"},{"type":{"names":["number"]},"description":"<p>resolutions of current map zoom</p>","name":"resolution"}],"returns":[{"type":{"names":["object"]},"description":"<p>{pos, zoom, crs}</p>"}],"name":"centerToVisibleArea","longname":"centerToVisibleArea","kind":"constant","scope":"global","$longname":"centerToVisibleArea"},{"comment":"/**\n * Handle changePreset action\n * @param {external:Observable} action$ manages `CHANGE_PRESET`\n * @param {external:Observable} store\n */","meta":{"range":[6159,6763],"filename":"tutorial.js","lineno":134,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100051895","name":"exports.changePresetEpic","type":"VariableDeclaration"}},"description":"<p>Handle changePreset action</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>CHANGE_PRESET</code></p>","name":"action$"},{"type":{"names":["external:Observable"]},"name":"store"}],"name":"changePresetEpic","longname":"changePresetEpic","kind":"constant","scope":"global","$longname":"changePresetEpic"},{"comment":"/**\n * Return a boolean to show if a layer fits within a boundary/extent\n * @param layer {object} to check if fits with in a projection boundary\n * @return {boolean} true or false\n */","meta":{"range":[36995,37402],"filename":"CoordinatesUtils.js","lineno":1065,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100060497","name":"exports.checkIfLayerFitsExtentForProjection","type":"VariableDeclaration"}},"description":"<p>Return a boolean to show if a layer fits within a boundary/extent</p>","params":[{"type":{"names":["object"]},"description":"<p>to check if fits with in a projection boundary</p>","name":"layer"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>true or false</p>"}],"name":"checkIfLayerFitsExtentForProjection","longname":"checkIfLayerFitsExtentForProjection","kind":"constant","scope":"global","$longname":"checkIfLayerFitsExtentForProjection"},{"comment":"/**\n * Clicked point of mapInfo\n * @param {object} state the state\n */","meta":{"range":[2173,2267],"filename":"mapInfo.js","lineno":60,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032814","name":"exports.clickPointSelector","type":"VariableDeclaration"}},"description":"<p>Clicked point of mapInfo</p>","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"name":"clickPointSelector","longname":"clickPointSelector","kind":"constant","scope":"global","$longname":"clickPointSelector"},{"comment":"/**\n * closes feature editor once another drawing tool is open\n * @param action$\n * @param store\n * @returns {Observable<*>}\n */","meta":{"range":[35548,35791],"filename":"featuregrid.js","lineno":837,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045306","name":"exports.closeFeatureGridOnDrawingToolOpen","type":"VariableDeclaration"}},"description":"<p>closes feature editor once another drawing tool is open</p>","params":[{"name":"action$"},{"name":"store"}],"returns":[{"type":{"names":["Observable.<*>"]}}],"name":"closeFeatureGridOnDrawingToolOpen","longname":"closeFeatureGridOnDrawingToolOpen","kind":"constant","scope":"global","$longname":"closeFeatureGridOnDrawingToolOpen"},{"comment":"/**\n * close all dock panels at the right whenever feature editor is open\n * @param action$\n * @param store\n * @returns {Observable<unknown>}\n */","meta":{"range":[34901,35417],"filename":"featuregrid.js","lineno":819,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045238","name":"exports.closeRightPanelOnFeatureGridOpen","type":"VariableDeclaration"}},"description":"<p>close all dock panels at the right whenever feature editor is open</p>","params":[{"name":"action$"},{"name":"store"}],"returns":[{"type":{"names":["Observable.<unknown>"]}}],"name":"closeRightPanelOnFeatureGridOpen","longname":"closeRightPanelOnFeatureGridOpen","kind":"constant","scope":"global","$longname":"closeRightPanelOnFeatureGridOpen"},{"comment":"/**\n * Produces the rootEpic for the plugins, combined with other epics passed as 2nd argument\n * @param {array} plugins the plugins\n * @param {function[]} [epics] the epics to add to the plugins' ones\n * @param {function} [epicWrapper] returns a function that wraps the epic\n * @return {function} the rootEpic, obtained combining plugins' epics and the other epics passed as argument.\n */","meta":{"range":[4146,4349],"filename":"PluginsUtils.js","lineno":110,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100062035","name":"exports.combineEpics","type":"VariableDeclaration"}},"description":"<p>Produces the rootEpic for the plugins, combined with other epics passed as 2nd argument</p>","params":[{"type":{"names":["array"]},"description":"<p>the plugins</p>","name":"plugins"},{"type":{"names":["Array.<function()>"]},"optional":true,"description":"<p>the epics to add to the plugins' ones</p>","name":"epics"},{"type":{"names":["function"]},"optional":true,"description":"<p>returns a function that wraps the epic</p>","name":"epicWrapper"}],"returns":[{"type":{"names":["function"]},"description":"<p>the rootEpic, obtained combining plugins' epics and the other epics passed as argument.</p>"}],"name":"combineEpics","longname":"combineEpics","kind":"constant","scope":"global","$longname":"combineEpics"},{"comment":"/**\n* Produces the reducers from the plugins, combined with other plugins\n* @param {array} plugins the plugins\n* @param {object} [reducers] other reducers\n* @returns {function} a reducer made from the plugins' reducers and the reducers passed as 2nd parameter\n*/","meta":{"range":[3573,3754],"filename":"PluginsUtils.js","lineno":98,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100062013","name":"exports.combineReducers","type":"VariableDeclaration"}},"description":"<p>Produces the reducers from the plugins, combined with other plugins</p>","params":[{"type":{"names":["array"]},"description":"<p>the plugins</p>","name":"plugins"},{"type":{"names":["object"]},"optional":true,"description":"<p>other reducers</p>","name":"reducers"}],"returns":[{"type":{"names":["function"]},"description":"<p>a reducer made from the plugins' reducers and the reducers passed as 2nd parameter</p>"}],"name":"combineReducers","longname":"combineReducers","kind":"constant","scope":"global","$longname":"combineReducers"},{"comment":"/**\n * React components\n * @see {@link https://facebook.github.io/react/docs/react-component.html|the React documentation} for details\n * @name components\n *\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components","code":{}},"description":"<p>React components</p>","see":["{@link https://facebook.github.io/react/docs/react-component.html|the React documentation} for details"],"name":"components","longname":"components","kind":"member","scope":"global","$longname":"components"},{"comment":"/**\n * main entry point of application.\n * This function provide basic functionality to initialize an application in the MapStore framework.\n * Note: all the configuration provided will be inherit from the application component (default component is StandardApp).\n * @memberof components.app\n * @name main\n * @class\n * @prop {object} config app configuration\n * @prop {object} config.targetId DOM node target id\n * @prop {object} config.initialState redux initial state\n * @prop {object} config.appReducers app reducers\n * @prop {object} config.appEpics app epics\n * @prop {object} config.rootReducerFunc replace the default root reducer function (it should return a new state)\n * @prop {component} Component replace the app component\n */","meta":{"filename":"main.jsx","lineno":15,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/app","code":{}},"description":"<p>main entry point of application.\nThis function provide basic functionality to initialize an application in the MapStore framework.\nNote: all the configuration provided will be inherit from the application component (default component is StandardApp).</p>","memberof":"components.app","name":"main","kind":"class","properties":[{"type":{"names":["component"]},"description":"<p>replace the app component</p>","name":"Component"},{"type":{"names":["object"]},"description":"<p>app configuration</p>","name":"config"},{"type":{"names":["object"]},"description":"<p>app epics</p>","name":"config.appEpics"},{"type":{"names":["object"]},"description":"<p>app reducers</p>","name":"config.appReducers"},{"type":{"names":["object"]},"description":"<p>redux initial state</p>","name":"config.initialState"},{"type":{"names":["object"]},"description":"<p>replace the default root reducer function (it should return a new state)</p>","name":"config.rootReducerFunc"},{"type":{"names":["object"]},"description":"<p>DOM node target id</p>","name":"config.targetId"}],"scope":"static","longname":"components.app.main","$longname":"components.app.main"},{"comment":"/**\n * Standard MapStore2 application component\n *\n * @name  StandardApp\n * @memberof components.app\n * @prop {function} appStore store creator function\n * @prop {object} pluginsDef plugins definition object (e.g. as loaded from plugins.js)\n * @prop {object} storeOpts options for the store\n * @prop {array} initialActions list of actions to be dispatched on startup\n * @prop {function|object} appComponent root component for the application\n * @prop {bool} printingEnabled initializes printing environment based on mapfish-print\n * @prop {function} onStoreInit optional callback called just after store creation\n * @prop {function} onInit optional callback called before first rendering, can delay first rendering\n * to do custom initialization (e.g. force SSO login)\n * @prop {string} mode current application mode (e.g. desktop/mobile) drives plugins loaded from localConfig\n */","meta":{"filename":"StandardApp.jsx","lineno":38,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/app","code":{}},"description":"<p>Standard MapStore2 application component</p>","name":"StandardApp","memberof":"components.app","properties":[{"type":{"names":["function","object"]},"description":"<p>root component for the application</p>","name":"appComponent"},{"type":{"names":["function"]},"description":"<p>store creator function</p>","name":"appStore"},{"type":{"names":["array"]},"description":"<p>list of actions to be dispatched on startup</p>","name":"initialActions"},{"type":{"names":["string"]},"description":"<p>current application mode (e.g. desktop/mobile) drives plugins loaded from localConfig</p>","name":"mode"},{"type":{"names":["function"]},"description":"<p>optional callback called before first rendering, can delay first rendering\nto do custom initialization (e.g. force SSO login)</p>","name":"onInit"},{"type":{"names":["function"]},"description":"<p>optional callback called just after store creation</p>","name":"onStoreInit"},{"type":{"names":["object"]},"description":"<p>plugins definition object (e.g. as loaded from plugins.js)</p>","name":"pluginsDef"},{"type":{"names":["bool"]},"description":"<p>initializes printing environment based on mapfish-print</p>","name":"printingEnabled"},{"type":{"names":["object"]},"description":"<p>options for the store</p>","name":"storeOpts"}],"scope":"static","longname":"components.app.StandardApp","kind":"member","$longname":"components.app.StandardApp"},{"comment":"/**\n * Toggle button for fullscreen. Wraps {@link #components.buttons.ToggleButton} with some defaults\n * @memberof components.buttons\n * @class\n * @prop {string} [id] an id for the html component\n * @prop {object} [btnConfig] the configuration to pass to the bootstrap button\n * @prop {object} [options] the options to send when toggle is clicked\n * @prop {string|element} [text] the text to disaplay\n * @prop {string|element} [help] the help text\n * @prop {string} glyphicon the icon name\n * @prop {bool} active the status of the button\n * @prop {function} onClick. The method to call when clicked. the method will return as parameter the toggled `pressed` prop and the `options` object\n * @prop {node} [activeTooltip] the tooltip to use on mouse hover\n * @prop {node} [notActiveTooltip] the tooltip to use on mouse hover when the button is active\n * @prop {string} [tooltipPlace] positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'\n * @prop {object} css style object for the component\n * @prop {btnType} [btnType] one of 'normal', 'image'\n * @prop {string} image if type is 'image', the src of the image\n * @prop {string} pressedStyle the bootstrap style for pressedStyle\n * @prop {string} defaultStyle the bootstrap style when not pressed\n *\n */","meta":{"range":[1658,3489],"filename":"FullScreenButton.jsx","lineno":39,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/buttons","code":{"id":"astnode100003025","name":"FullScreenButton","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>Toggle button for fullscreen. Wraps {@link #components.buttons.ToggleButton} with some defaults</p>","memberof":"components.buttons","kind":"class","properties":[{"type":{"names":["bool"]},"description":"<p>the status of the button</p>","name":"active"},{"type":{"names":["node"]},"optional":true,"description":"<p>the tooltip to use on mouse hover</p>","name":"activeTooltip"},{"type":{"names":["object"]},"optional":true,"description":"<p>the configuration to pass to the bootstrap button</p>","name":"btnConfig"},{"type":{"names":["btnType"]},"optional":true,"description":"<p>one of 'normal', 'image'</p>","name":"btnType"},{"type":{"names":["object"]},"description":"<p>style object for the component</p>","name":"css"},{"type":{"names":["string"]},"description":"<p>the bootstrap style when not pressed</p>","name":"defaultStyle"},{"type":{"names":["string"]},"description":"<p>the icon name</p>","name":"glyphicon"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the help text</p>","name":"help"},{"type":{"names":["string"]},"optional":true,"description":"<p>an id for the html component</p>","name":"id"},{"type":{"names":["string"]},"description":"<p>if type is 'image', the src of the image</p>","name":"image"},{"type":{"names":["node"]},"optional":true,"description":"<p>the tooltip to use on mouse hover when the button is active</p>","name":"notActiveTooltip"},{"type":{"names":["function"]},"description":"<p>The method to call when clicked. the method will return as parameter the toggled <code>pressed</code> prop and the <code>options</code> object</p>","name":"onClick."},{"type":{"names":["object"]},"optional":true,"description":"<p>the options to send when toggle is clicked</p>","name":"options"},{"type":{"names":["string"]},"description":"<p>the bootstrap style for pressedStyle</p>","name":"pressedStyle"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the text to disaplay</p>","name":"text"},{"type":{"names":["string"]},"optional":true,"description":"<p>positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'</p>","name":"tooltipPlace"}],"name":"FullScreenButton","longname":"components.buttons.FullScreenButton","scope":"static","$longname":"components.buttons.FullScreenButton"},{"comment":"/**\n * Toggle button for 3d. Wraps {@link #components.buttons.ToggleButton} with some defaults\n * @memberof components.buttons\n * @class\n * @prop {string} [id] an id for the html component\n * @prop {object} [btnConfig] the configuration to pass to the bootstrap button\n * @prop {object} [options] the options to send when toggle is clicked\n * @prop {string|element} [text] the text to disaplay\n * @prop {string|element} [help] the help text\n * @prop {string} glyphicon the icon name\n * @prop {bool} active the status of the button\n * @prop {function} onClick. The method to call when clicked. the method will return as parameter the toggled `pressed` prop and the `options` object\n * @prop {node} [activeTooltip] the tooltip to use on mouse hover\n * @prop {node} [notActiveTooltip] the tooltip to use on mouse hover when the button is active\n * @prop {string} [tooltipPlace] positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'\n * @prop {object} css style object for the component\n * @prop {btnType} [btnType] one of 'normal', 'image'\n * @prop {string} image if type is 'image', the src of the image\n * @prop {string} pressedStyle the bootstrap style for pressedStyle\n * @prop {string} defaultStyle the bootstrap style when not pressed\n *\n */","meta":{"range":[1649,3490],"filename":"GlobeViewSwitcherButton.jsx","lineno":38,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/buttons","code":{"id":"astnode100003252","name":"GlobeViewSwitcherButton","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>Toggle button for 3d. Wraps {@link #components.buttons.ToggleButton} with some defaults</p>","memberof":"components.buttons","kind":"class","properties":[{"type":{"names":["bool"]},"description":"<p>the status of the button</p>","name":"active"},{"type":{"names":["node"]},"optional":true,"description":"<p>the tooltip to use on mouse hover</p>","name":"activeTooltip"},{"type":{"names":["object"]},"optional":true,"description":"<p>the configuration to pass to the bootstrap button</p>","name":"btnConfig"},{"type":{"names":["btnType"]},"optional":true,"description":"<p>one of 'normal', 'image'</p>","name":"btnType"},{"type":{"names":["object"]},"description":"<p>style object for the component</p>","name":"css"},{"type":{"names":["string"]},"description":"<p>the bootstrap style when not pressed</p>","name":"defaultStyle"},{"type":{"names":["string"]},"description":"<p>the icon name</p>","name":"glyphicon"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the help text</p>","name":"help"},{"type":{"names":["string"]},"optional":true,"description":"<p>an id for the html component</p>","name":"id"},{"type":{"names":["string"]},"description":"<p>if type is 'image', the src of the image</p>","name":"image"},{"type":{"names":["node"]},"optional":true,"description":"<p>the tooltip to use on mouse hover when the button is active</p>","name":"notActiveTooltip"},{"type":{"names":["function"]},"description":"<p>The method to call when clicked. the method will return as parameter the toggled <code>pressed</code> prop and the <code>options</code> object</p>","name":"onClick."},{"type":{"names":["object"]},"optional":true,"description":"<p>the options to send when toggle is clicked</p>","name":"options"},{"type":{"names":["string"]},"description":"<p>the bootstrap style for pressedStyle</p>","name":"pressedStyle"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the text to disaplay</p>","name":"text"},{"type":{"names":["string"]},"optional":true,"description":"<p>positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'</p>","name":"tooltipPlace"}],"name":"GlobeViewSwitcherButton","longname":"components.buttons.GlobeViewSwitcherButton","scope":"static","$longname":"components.buttons.GlobeViewSwitcherButton"},{"comment":"/**\n * Button for Go to Full MapStore2.\n * @prop {string} cfg.glyph the glyph icon for the button\n * @prop {string} cfg.tooltip messageId of the tooltip to use\n * @prop {string} cfg.urlRegex. A regex to parse the current location.href. This regex must match if the originalUrl is not defined.\n * @prop {string} cfg.urlReplaceString. The template to create the url link. Uses the `urlRegex` groups to create the final URL\n * @memberof components.buttons\n * @class\n */","meta":{"range":[971,2634],"filename":"GoFullButton.jsx","lineno":28,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/buttons","code":{"id":"astnode100003489","name":"GoFullButton","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>Button for Go to Full MapStore2.</p>","properties":[{"type":{"names":["string"]},"description":"<p>the glyph icon for the button</p>","name":"cfg.glyph"},{"type":{"names":["string"]},"description":"<p>messageId of the tooltip to use</p>","name":"cfg.tooltip"},{"type":{"names":["string"]},"description":"<p>A regex to parse the current location.href. This regex must match if the originalUrl is not defined.</p>","name":"cfg.urlRegex."},{"type":{"names":["string"]},"description":"<p>The template to create the url link. Uses the <code>urlRegex</code> groups to create the final URL</p>","name":"cfg.urlReplaceString."}],"memberof":"components.buttons","kind":"class","name":"GoFullButton","longname":"components.buttons.GoFullButton","scope":"static","$longname":"components.buttons.GoFullButton"},{"comment":"/**\n * Toggle button with tooltip and icons or image support.\n * @memberof components.buttons\n * @class\n * @prop {string} [id] an id for the html component\n * @prop {object} [btnConfig] the configuration to pass to the bootstrap button\n * @prop {object} [options] the options to send when toggle is clicked\n * @prop {string|element} [text] the text to disaplay\n * @prop {string|element} [help] the help text\n * @prop {string} glyphicon the icon name\n * @prop {bool} pressed the status of the button\n * @prop {function} onClick. The method to call when clicked. the method will return as parameter the toggled `pressed` prop and the `options` object\n * @prop {node} [tooltip] the tooltip to use on mouse hover\n * @prop {string} [tooltipPlace] positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'\n * @prop {object} css style object for the component\n * @prop {btnType} [btnType] one of 'normal', 'image'\n * @prop {string} image if type is 'image', the src of the image\n * @prop {string} pressedStyle the bootstrap style for pressedStyle\n * @prop {string} defaultStyle the bootstrap style when not pressed\n *\n */","meta":{"range":[1566,3922],"filename":"ToggleButton.jsx","lineno":37,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/buttons","code":{"id":"astnode100005779","name":"ToggleButton","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>Toggle button with tooltip and icons or image support.</p>","memberof":"components.buttons","kind":"class","properties":[{"type":{"names":["object"]},"optional":true,"description":"<p>the configuration to pass to the bootstrap button</p>","name":"btnConfig"},{"type":{"names":["btnType"]},"optional":true,"description":"<p>one of 'normal', 'image'</p>","name":"btnType"},{"type":{"names":["object"]},"description":"<p>style object for the component</p>","name":"css"},{"type":{"names":["string"]},"description":"<p>the bootstrap style when not pressed</p>","name":"defaultStyle"},{"type":{"names":["string"]},"description":"<p>the icon name</p>","name":"glyphicon"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the help text</p>","name":"help"},{"type":{"names":["string"]},"optional":true,"description":"<p>an id for the html component</p>","name":"id"},{"type":{"names":["string"]},"description":"<p>if type is 'image', the src of the image</p>","name":"image"},{"type":{"names":["function"]},"description":"<p>The method to call when clicked. the method will return as parameter the toggled <code>pressed</code> prop and the <code>options</code> object</p>","name":"onClick."},{"type":{"names":["object"]},"optional":true,"description":"<p>the options to send when toggle is clicked</p>","name":"options"},{"type":{"names":["bool"]},"description":"<p>the status of the button</p>","name":"pressed"},{"type":{"names":["string"]},"description":"<p>the bootstrap style for pressedStyle</p>","name":"pressedStyle"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the text to disaplay</p>","name":"text"},{"type":{"names":["node"]},"optional":true,"description":"<p>the tooltip to use on mouse hover</p>","name":"tooltip"},{"type":{"names":["string"]},"optional":true,"description":"<p>positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'</p>","name":"tooltipPlace"}],"name":"ToggleButton","longname":"components.buttons.ToggleButton","scope":"static","$longname":"components.buttons.ToggleButton"},{"comment":"/**\n * Available Attribute Editors for FeatureGrid.\n * Here you can find the default editors for the various data types and the {@link #components.data.featuregrid.editors.customEditors | Custom Editors} that can be used to force editing constraints to certain attributes.\n * @name editors\n * @memberof components.data.featuregrid\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/featuregrid/editors","code":{}},"description":"<p>Available Attribute Editors for FeatureGrid.\nHere you can find the default editors for the various data types and the {@link #components.data.featuregrid.editors.customEditors | Custom Editors} that can be used to force editing constraints to certain attributes.</p>","name":"editors","memberof":"components.data.featuregrid","scope":"static","longname":"components.data.featuregrid.editors","kind":"member","$longname":"components.data.featuregrid.editors","$members":[{"comment":"/**\n * MapStore allows for adding custom editors to Attribute Table.\n * Each custom editor must be added to this object for the ability to use it in localConfig.\n * Each property of this object corresponds to a custom editor. The name of the property will be the name\n * of the custom editor that can be used to reference the editor in localConfig.\n * The value of the property is an object, properties of which correspond to the types of\n * attributes that the custom editor will handle. Custom editor entry should look like this:\n *\n * ```\n * \"CustomEditor\": {\n *   \"string\": (props) => <CustomEditorString {...props}/>,\n *   \"number\": (props) => <CustomEditorNumber {...props}/>\n * }\n * ```\n *\n * Each value is a function that takes properties and returns an appropriate JSX element\n * to be used as an editor for the particular data type.\n *\n * Currently custom editors available by default are:\n *\n * * {@link #components.data.featuregrid.editors.DropDownEditor | DropDownEditor} - editor that allows to choose a value from a pre-configured values list\n * * {@link #components.data.featuregrid.editors.NumberEditor | NumberEditor} - editor that supports numeric data, setting min/max bounds on a value\n * * {@link #components.data.featuregrid.editors.FormatEditor | FormatEditor} - editor that checks if data matches a particular regular expression\n *\n * Each editor has a specific section in framework documentation with available properties.\n *\n * @name customEditors\n * @memberof components.data.featuregrid.editors\n * @type {Object}\n */","meta":{"filename":"customEditors.jsx","lineno":6,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/featuregrid/editors","code":{}},"description":"<p>MapStore allows for adding custom editors to Attribute Table.\nEach custom editor must be added to this object for the ability to use it in localConfig.\nEach property of this object corresponds to a custom editor. The name of the property will be the name\nof the custom editor that can be used to reference the editor in localConfig.\nThe value of the property is an object, properties of which correspond to the types of\nattributes that the custom editor will handle. Custom editor entry should look like this:</p>\n<pre class=\"prettyprint source\"><code>&quot;CustomEditor&quot;: {\n  &quot;string&quot;: (props) => &lt;CustomEditorString {...props}/>,\n  &quot;number&quot;: (props) => &lt;CustomEditorNumber {...props}/>\n}\n</code></pre>\n<p>Each value is a function that takes properties and returns an appropriate JSX element\nto be used as an editor for the particular data type.</p>\n<p>Currently custom editors available by default are:</p>\n<ul>\n<li>{@link #components.data.featuregrid.editors.DropDownEditor | DropDownEditor} - editor that allows to choose a value from a pre-configured values list</li>\n<li>{@link #components.data.featuregrid.editors.NumberEditor | NumberEditor} - editor that supports numeric data, setting min/max bounds on a value</li>\n<li>{@link #components.data.featuregrid.editors.FormatEditor | FormatEditor} - editor that checks if data matches a particular regular expression</li>\n</ul>\n<p>Each editor has a specific section in framework documentation with available properties.</p>","name":"customEditors","memberof":"components.data.featuregrid.editors","type":{"names":["Object"]},"scope":"static","longname":"components.data.featuregrid.editors.customEditors","kind":"member","$longname":"components.data.featuregrid.editors.customEditors"},{"comment":"/**\n * Editor that provides a DropDown menu of a list of elements passed.\n * @memberof components.data.featuregrid.editors\n * @class\n * @name DropDownEditor\n * @prop {string[]} values list of valid values\n * @prop {boolean} forceSelection forces the editor to use a `defaultOption` as value\n * @prop {string} defaultOption value used as default if forceSelection is true\n * @prop {boolean} allowEmpty if true it accept empty string as value\n *\n */","meta":{"filename":"DropDownEditor.jsx","lineno":16,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/featuregrid/editors","code":{}},"description":"<p>Editor that provides a DropDown menu of a list of elements passed.</p>","memberof":"components.data.featuregrid.editors","kind":"class","name":"DropDownEditor","properties":[{"type":{"names":["boolean"]},"description":"<p>if true it accept empty string as value</p>","name":"allowEmpty"},{"type":{"names":["string"]},"description":"<p>value used as default if forceSelection is true</p>","name":"defaultOption"},{"type":{"names":["boolean"]},"description":"<p>forces the editor to use a <code>defaultOption</code> as value</p>","name":"forceSelection"},{"type":{"names":["Array.<string>"]},"description":"<p>list of valid values</p>","name":"values"}],"scope":"static","longname":"components.data.featuregrid.editors.DropDownEditor","$longname":"components.data.featuregrid.editors.DropDownEditor"},{"comment":"/**\n * Editor of the FeatureGrid that uses a regex passed as prop to validate the input.\n * @memberof components.data.featuregrid.editors\n * @name FormatEditor\n * @class\n * @prop {string} editorProps.formatRegex regular expression that a value must match to be considered valid\n */","meta":{"filename":"FormatEditor.jsx","lineno":12,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/featuregrid/editors","code":{}},"description":"<p>Editor of the FeatureGrid that uses a regex passed as prop to validate the input.</p>","memberof":"components.data.featuregrid.editors","name":"FormatEditor","kind":"class","properties":[{"type":{"names":["string"]},"description":"<p>regular expression that a value must match to be considered valid</p>","name":"editorProps.formatRegex"}],"scope":"static","longname":"components.data.featuregrid.editors.FormatEditor","$longname":"components.data.featuregrid.editors.FormatEditor"},{"comment":"/**\n * Editor of the FeatureGrid, that allows to insert a number, limited by `minValue` and `maxValue`\n * @memberof components.data.featuregrid.editors\n * @name NumberEditor\n * @class\n * @prop {number} editorProps.minValue the lower boundary of valid numbers\n * @prop {number} editorProps.maxValue the upper boundary of valid numbers\n */","meta":{"filename":"NumberEditor.jsx","lineno":19,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/featuregrid/editors","code":{}},"description":"<p>Editor of the FeatureGrid, that allows to insert a number, limited by <code>minValue</code> and <code>maxValue</code></p>","memberof":"components.data.featuregrid.editors","name":"NumberEditor","kind":"class","properties":[{"type":{"names":["number"]},"description":"<p>the upper boundary of valid numbers</p>","name":"editorProps.maxValue"},{"type":{"names":["number"]},"description":"<p>the lower boundary of valid numbers</p>","name":"editorProps.minValue"}],"scope":"static","longname":"components.data.featuregrid.editors.NumberEditor","$longname":"components.data.featuregrid.editors.NumberEditor"}]},{"comment":"/**\n * A component that gets the describeFeatureType and the features to display\n * attributes\n * @class\n * @name FeatureGrid\n * @memberof components.data.featuregrid\n * @prop {geojson[]} features array of geojson features\n * @prop {object} describeFeatureType the describeFeatureType in json format\n * @prop {Component} gridComponent the grid component, if different from AdaptiveGrid\n * @prop {object} gridOptions to pass to the grid\n * @prop {object} gridEvents an object with events for the grid. Note: onRowsSelected, onRowsDeselected and onRowsToggled will be associated automatically from this object\n * to the rowSelection tool. If checkbox are enabled, onRowsSelected and onRowsDeselected will be triggered. If showCheckbox is false, onRowsToggled will be triggered.\n * @prop {object[]} tools. a list of tools. the format is the react-data-grid column format but with the following differences:\n * - The events are automatically binded to call the related callback with the feature as first parameter, second argument is the same, no original event is passed. describeFeatureType as third\n */","meta":{"filename":"FeatureGrid.jsx","lineno":17,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/featuregrid","code":{}},"description":"<p>A component that gets the describeFeatureType and the features to display\nattributes</p>","kind":"class","name":"FeatureGrid","memberof":"components.data.featuregrid","properties":[{"type":{"names":["object"]},"description":"<p>the describeFeatureType in json format</p>","name":"describeFeatureType"},{"type":{"names":["Array.<geojson>"]},"description":"<p>array of geojson features</p>","name":"features"},{"type":{"names":["Component"]},"description":"<p>the grid component, if different from AdaptiveGrid</p>","name":"gridComponent"},{"type":{"names":["object"]},"description":"<p>an object with events for the grid. Note: onRowsSelected, onRowsDeselected and onRowsToggled will be associated automatically from this object\nto the rowSelection tool. If checkbox are enabled, onRowsSelected and onRowsDeselected will be triggered. If showCheckbox is false, onRowsToggled will be triggered.</p>","name":"gridEvents"},{"type":{"names":["object"]},"description":"<p>to pass to the grid</p>","name":"gridOptions"},{"type":{"names":["Array.<object>"]},"description":"<p>a list of tools. the format is the react-data-grid column format but with the following differences:</p>\n<ul>\n<li>The events are automatically binded to call the related callback with the feature as first parameter, second argument is the same, no original event is passed. describeFeatureType as third</li>\n</ul>","name":"tools."}],"scope":"static","longname":"components.data.featuregrid.FeatureGrid","$longname":"components.data.featuregrid.FeatureGrid"},{"comment":"/**\n * Component for rendering lat and lng of the current selected point\n * @memberof components.data.identify\n * @name GeocodeViewer\n * @class\n * @prop {bool} enableRevGeocode enable/disable the component\n * @prop {function} hideRevGeocode called when click on close buttons\n * @prop {bool} showModalReverse show/hide modal\n * @prop {node} revGeocodeDisplayName text/info displayed on modal\n */","meta":{"filename":"GeocodeViewer.jsx","lineno":16,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/identify","code":{}},"description":"<p>Component for rendering lat and lng of the current selected point</p>","memberof":"components.data.identify","name":"GeocodeViewer","kind":"class","properties":[{"type":{"names":["bool"]},"description":"<p>enable/disable the component</p>","name":"enableRevGeocode"},{"type":{"names":["function"]},"description":"<p>called when click on close buttons</p>","name":"hideRevGeocode"},{"type":{"names":["node"]},"description":"<p>text/info displayed on modal</p>","name":"revGeocodeDisplayName"},{"type":{"names":["bool"]},"description":"<p>show/hide modal</p>","name":"showModalReverse"}],"scope":"static","longname":"components.data.identify.GeocodeViewer","$longname":"components.data.identify.GeocodeViewer"},{"comment":"/**\n * Component for rendering Identify Container inside a Dockable container\n * @memberof components.data.identify\n * @name IdentifyContainer\n * @class\n * @prop {dock} dock switch between Dockable Panel and Resizable Modal, default true (DockPanel)\n * @prop {function} viewer component that will be used as viewer of Identify\n * @prop {object} viewerOptions options to use with the viewer, eg { header: MyHeader, container: MyContainer }\n * @prop {function} getToolButtons must return an array of object representing the toolbar buttons, eg (props) => [{ glyph: 'info-sign', tooltip: 'hello!'}]\n * @prop {function} getFeatureButtons must return an array of buttons relating to feature interaction, eg (props) => [{ glyph: 'zoom-to', tooltip: 'Zoom to Extent'}]\n */","meta":{"filename":"IdentifyContainer.jsx","lineno":23,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/identify","code":{}},"description":"<p>Component for rendering Identify Container inside a Dockable container</p>","memberof":"components.data.identify","name":"IdentifyContainer","kind":"class","properties":[{"type":{"names":["dock"]},"description":"<p>switch between Dockable Panel and Resizable Modal, default true (DockPanel)</p>","name":"dock"},{"type":{"names":["function"]},"description":"<p>must return an array of buttons relating to feature interaction, eg (props) =&gt; [{ glyph: 'zoom-to', tooltip: 'Zoom to Extent'}]</p>","name":"getFeatureButtons"},{"type":{"names":["function"]},"description":"<p>must return an array of object representing the toolbar buttons, eg (props) =&gt; [{ glyph: 'info-sign', tooltip: 'hello!'}]</p>","name":"getToolButtons"},{"type":{"names":["function"]},"description":"<p>component that will be used as viewer of Identify</p>","name":"viewer"},{"type":{"names":["object"]},"description":"<p>options to use with the viewer, eg { header: MyHeader, container: MyContainer }</p>","name":"viewerOptions"}],"scope":"static","longname":"components.data.identify.IdentifyContainer","$longname":"components.data.identify.IdentifyContainer"},{"comment":"/**\n * Component that allows to draw and edit geometries as (Point, LineString, Polygon, Rectangle, Circle, MultiGeometries)\n * @class DrawSupport\n * @memberof components.map\n * @prop {object} map the map usedto drawing on\n * @prop {string} drawOwner the owner of the drawn features\n * @prop {string} drawStatus the status that allows to do different things. see UNSAFE_componentWillReceiveProps method\n * @prop {string} drawMethod the method used to draw different geometries. can be Circle,BBOX, or a geomType from Point to MultiPolygons\n * @prop {object} options it contains the params used to enable the interactions or simply stop the DrawSupport after a ft is drawn\n * @prop {object[]} features an array of geojson features used as a starting point for drawing new shapes or edit them\n * @prop {func} onChangeDrawingStatus method use to change the status of the DrawSupport\n * @prop {func} onGeometryChanged when a features is edited or drawn this methos is fired\n * @prop {func} onDrawStopped action fired if the DrawSupport stops\n * @prop {func} onEndDrawing action fired when a shape is drawn\n * @prop {object} messages the localized messages that can be used to customize the tooltip text\n*/","meta":{"filename":"DrawSupport.jsx","lineno":107,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/map/leaflet","code":{}},"description":"<p>Component that allows to draw and edit geometries as (Point, LineString, Polygon, Rectangle, Circle, MultiGeometries)</p>","kind":"class","name":"DrawSupport","memberof":"components.map","properties":[{"type":{"names":["string"]},"description":"<p>the method used to draw different geometries. can be Circle,BBOX, or a geomType from Point to MultiPolygons</p>","name":"drawMethod"},{"type":{"names":["string"]},"description":"<p>the owner of the drawn features</p>","name":"drawOwner"},{"type":{"names":["string"]},"description":"<p>the status that allows to do different things. see UNSAFE_componentWillReceiveProps method</p>","name":"drawStatus"},{"type":{"names":["Array.<object>"]},"description":"<p>an array of geojson features used as a starting point for drawing new shapes or edit them</p>","name":"features"},{"type":{"names":["object"]},"description":"<p>the map usedto drawing on</p>","name":"map"},{"type":{"names":["object"]},"description":"<p>the localized messages that can be used to customize the tooltip text</p>","name":"messages"},{"type":{"names":["func"]},"description":"<p>method use to change the status of the DrawSupport</p>","name":"onChangeDrawingStatus"},{"type":{"names":["func"]},"description":"<p>action fired if the DrawSupport stops</p>","name":"onDrawStopped"},{"type":{"names":["func"]},"description":"<p>action fired when a shape is drawn</p>","name":"onEndDrawing"},{"type":{"names":["func"]},"description":"<p>when a features is edited or drawn this methos is fired</p>","name":"onGeometryChanged"},{"type":{"names":["object"]},"description":"<p>it contains the params used to enable the interactions or simply stop the DrawSupport after a ft is drawn</p>","name":"options"}],"scope":"static","longname":"components.map.DrawSupport","$longname":"components.map.DrawSupport","$members":[{"comment":"/**\n     * Inside this lyfecycle method the status is checked to manipulate the behaviour of the DrawSupport.<br>\n     * Here is the list of all status:<br>\n     * create allows to create features<br>\n     * start allows to start drawing features<br>\n     * drawOrEdit allows to start drawing or editing the passed features or both<br>\n     * stop allows to stop drawing features<br>\n     * replace allows to replace all the features drawn by Drawsupport with new ones<br>\n     * clean it cleans the drawn features and stop the drawsupport\n     * endDrawing as for 'replace' action allows to replace all the features in addition triggers end drawing action to store data in state\n     * @memberof components.map.DrawSupport\n     * @function UNSAFE_componentWillReceiveProps\n    */","meta":{"filename":"DrawSupport.jsx","lineno":167,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/map/leaflet","code":{}},"description":"<p>Inside this lyfecycle method the status is checked to manipulate the behaviour of the DrawSupport.<br>\nHere is the list of all status:<br>\ncreate allows to create features<br>\nstart allows to start drawing features<br>\ndrawOrEdit allows to start drawing or editing the passed features or both<br>\nstop allows to stop drawing features<br>\nreplace allows to replace all the features drawn by Drawsupport with new ones<br>\nclean it cleans the drawn features and stop the drawsupport\nendDrawing as for 'replace' action allows to replace all the features in addition triggers end drawing action to store data in state</p>","memberof":"components.map.DrawSupport","kind":"function","name":"UNSAFE_componentWillReceiveProps","scope":"static","longname":"components.map.DrawSupport.UNSAFE_componentWillReceiveProps","$longname":"components.map.DrawSupport.UNSAFE_componentWillReceiveProps"}]},{"comment":"/**\n * Annotations panel component.\n * It can be in different modes:\n *  - list: when showing the current list of annotations on the map\n *  - detail: when showing a detail of a specific annotation\n *  - editing: when editing an annotation\n * When in list mode, the list of current map annotations is shown, with:\n *  - summary card for each annotation, with full detail show on click\n *  - upload annotations Button\n *  - new annotation Button\n *  - download annotations Button\n *  - filtering widget\n * When in detail mode the configured editor is shown on the selected annotation, in viewer mode.\n * When in editing mode the configured editor is shown on the selected annotation, in editing mode.\n *\n * It also handles removal confirmation modals\n * @memberof components.mapControls.annotations\n * @class\n * @prop {string} id id of the borderlayout Component\n * @prop {boolean} closing user asked for closing panel when editing\n * @prop {boolean} styling flag to state status of styling during editing\n * @prop {boolean} showUnsavedChangesModal flag to state status of UnsavedChangesModal\n * @prop {boolean} showUnsavedStyleModal flag to state status of UnsavedStyleModal\n * @prop {object} editing annotation object currently under editing (null if we are not in editing mode)\n * @prop {function} toggleControl triggered when the user closes the annotations panel\n * @prop {object} removing object to remove, it is also a flag that means we are currently asking for removing an annotation / geometry. Toggles visibility of the confirm dialog\n * @prop {string} mode current mode of operation (list, editing, detail)\n * @prop {object} editor editor component, used in detail and editing modes\n * @prop {object[]} annotations list of annotations objects to list\n * @prop {string} current id of the annotation currently shown in the editor (when not in list mode)\n * @prop {object} config configuration object, where overridable stuff is stored (fields config for annotations, marker library, etc.) {@link #components.mapControls.annotations.AnnotationsConfig}\n * @prop {string} filter current filter entered by the user\n * @prop {function} onToggleUnsavedChangesModal toggles the view of the UnsavedChangesModal\n * @prop {function} onToggleUnsavedStyleModal toggles the view of the UnsavedStyleModal\n * @prop {function} onCancelRemove triggered when the user cancels removal\n * @prop {function} onCancelEdit triggered when the user cancels any changes to the properties or geometry\n * @prop {function} onCancelStyle triggered when the user cancels any changes to the style\n * @prop {function} onConfirmRemove triggered when the user confirms removal\n * @prop {function} onCancelClose triggered when the user cancels closing\n * @prop {function} onConfirmClose triggered when the user confirms closing\n * @prop {function} onAdd triggered when the user clicks on the new annotation button\n * @prop {function} onEdit triggered when the user clicks on the annotation card into annotation viewer\n * @prop {function} onZoom triggered when the user zooms to an annotation\n * @prop {function} onHighlight triggered when the mouse hovers an annotation card\n * @prop {function} onCleanHighlight triggered when the mouse is out of any annotation card\n * @prop {function} onDetail triggered when the user clicks on an annotation card\n * @prop {function} onFilter triggered when the user enters some text in the filtering widget\n * @prop {function} classNameSelector optional selector to assign custom a CSS class to annotations, based on\n * @prop {function} onSetErrorSymbol set a flag in the state to say if the default symbols exists\n * @prop {function} onDownload triggered when the user clicks on the download annotations button\n * @prop {function} onUpdateSymbols triggered when user click on refresh icon of the symbols addon\n * @prop {function} onToggleVisibility triggered when user click on annotation visibility icon\n * @prop {boolean} symbolErrors errors related to the symbols\n * @prop {object[]} lineDashOptions list of options for dashed lines\n * @prop {string} symbolsPath path to the svg folder\n * @prop {object[]} symbolList list of symbols\n * @prop {string} defaultShape default Shape\n * @prop {number} maxZoom max zoom for annotation (default 18)\n * @prop {string} defaultShapeStrokeColor default symbol stroke color\n * @prop {string} defaultShapeFillColor default symbol fill color\n * @prop {string} defaultShapeSize default symbol shape size in px\n * @prop {object} defaultStyles object with default symbol styles\n * @prop {number} textRotationStep rotation step of text styler\n * @prop {boolean} geodesic draw geodesic annotation (Currently applicable only for Circle annotation)\n *\n * the annotation's attributes.\n */","meta":{"range":[5769,20032],"filename":"Annotations.jsx","lineno":96,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{"id":"astnode100013698","name":"Annotations","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>Annotations panel component.\nIt can be in different modes:</p>\n<ul>\n<li>list: when showing the current list of annotations on the map</li>\n<li>detail: when showing a detail of a specific annotation</li>\n<li>editing: when editing an annotation\nWhen in list mode, the list of current map annotations is shown, with:</li>\n<li>summary card for each annotation, with full detail show on click</li>\n<li>upload annotations Button</li>\n<li>new annotation Button</li>\n<li>download annotations Button</li>\n<li>filtering widget\nWhen in detail mode the configured editor is shown on the selected annotation, in viewer mode.\nWhen in editing mode the configured editor is shown on the selected annotation, in editing mode.</li>\n</ul>\n<p>It also handles removal confirmation modals</p>","memberof":"components.mapControls.annotations","kind":"class","properties":[{"type":{"names":["Array.<object>"]},"description":"<p>list of annotations objects to list</p>","name":"annotations"},{"type":{"names":["function"]},"description":"<p>optional selector to assign custom a CSS class to annotations, based on</p>","name":"classNameSelector"},{"type":{"names":["boolean"]},"description":"<p>user asked for closing panel when editing</p>","name":"closing"},{"type":{"names":["object"]},"description":"<p>configuration object, where overridable stuff is stored (fields config for annotations, marker library, etc.) {@link #components.mapControls.annotations.AnnotationsConfig}</p>","name":"config"},{"type":{"names":["string"]},"description":"<p>id of the annotation currently shown in the editor (when not in list mode)</p>","name":"current"},{"type":{"names":["string"]},"description":"<p>default Shape</p>","name":"defaultShape"},{"type":{"names":["string"]},"description":"<p>default symbol fill color</p>","name":"defaultShapeFillColor"},{"type":{"names":["string"]},"description":"<p>default symbol shape size in px</p>","name":"defaultShapeSize"},{"type":{"names":["string"]},"description":"<p>default symbol stroke color</p>","name":"defaultShapeStrokeColor"},{"type":{"names":["object"]},"description":"<p>object with default symbol styles</p>","name":"defaultStyles"},{"type":{"names":["object"]},"description":"<p>annotation object currently under editing (null if we are not in editing mode)</p>","name":"editing"},{"type":{"names":["object"]},"description":"<p>editor component, used in detail and editing modes</p>","name":"editor"},{"type":{"names":["string"]},"description":"<p>current filter entered by the user</p>","name":"filter"},{"type":{"names":["boolean"]},"description":"<p>draw geodesic annotation (Currently applicable only for Circle annotation)</p>\n<p>the annotation's attributes.</p>","name":"geodesic"},{"type":{"names":["string"]},"description":"<p>id of the borderlayout Component</p>","name":"id"},{"type":{"names":["Array.<object>"]},"description":"<p>list of options for dashed lines</p>","name":"lineDashOptions"},{"type":{"names":["number"]},"description":"<p>max zoom for annotation (default 18)</p>","name":"maxZoom"},{"type":{"names":["string"]},"description":"<p>current mode of operation (list, editing, detail)</p>","name":"mode"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on the new annotation button</p>","name":"onAdd"},{"type":{"names":["function"]},"description":"<p>triggered when the user cancels closing</p>","name":"onCancelClose"},{"type":{"names":["function"]},"description":"<p>triggered when the user cancels any changes to the properties or geometry</p>","name":"onCancelEdit"},{"type":{"names":["function"]},"description":"<p>triggered when the user cancels removal</p>","name":"onCancelRemove"},{"type":{"names":["function"]},"description":"<p>triggered when the user cancels any changes to the style</p>","name":"onCancelStyle"},{"type":{"names":["function"]},"description":"<p>triggered when the mouse is out of any annotation card</p>","name":"onCleanHighlight"},{"type":{"names":["function"]},"description":"<p>triggered when the user confirms closing</p>","name":"onConfirmClose"},{"type":{"names":["function"]},"description":"<p>triggered when the user confirms removal</p>","name":"onConfirmRemove"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on an annotation card</p>","name":"onDetail"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on the download annotations button</p>","name":"onDownload"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on the annotation card into annotation viewer</p>","name":"onEdit"},{"type":{"names":["function"]},"description":"<p>triggered when the user enters some text in the filtering widget</p>","name":"onFilter"},{"type":{"names":["function"]},"description":"<p>triggered when the mouse hovers an annotation card</p>","name":"onHighlight"},{"type":{"names":["function"]},"description":"<p>set a flag in the state to say if the default symbols exists</p>","name":"onSetErrorSymbol"},{"type":{"names":["function"]},"description":"<p>toggles the view of the UnsavedChangesModal</p>","name":"onToggleUnsavedChangesModal"},{"type":{"names":["function"]},"description":"<p>toggles the view of the UnsavedStyleModal</p>","name":"onToggleUnsavedStyleModal"},{"type":{"names":["function"]},"description":"<p>triggered when user click on annotation visibility icon</p>","name":"onToggleVisibility"},{"type":{"names":["function"]},"description":"<p>triggered when user click on refresh icon of the symbols addon</p>","name":"onUpdateSymbols"},{"type":{"names":["function"]},"description":"<p>triggered when the user zooms to an annotation</p>","name":"onZoom"},{"type":{"names":["object"]},"description":"<p>object to remove, it is also a flag that means we are currently asking for removing an annotation / geometry. Toggles visibility of the confirm dialog</p>","name":"removing"},{"type":{"names":["boolean"]},"description":"<p>flag to state status of UnsavedChangesModal</p>","name":"showUnsavedChangesModal"},{"type":{"names":["boolean"]},"description":"<p>flag to state status of UnsavedStyleModal</p>","name":"showUnsavedStyleModal"},{"type":{"names":["boolean"]},"description":"<p>flag to state status of styling during editing</p>","name":"styling"},{"type":{"names":["boolean"]},"description":"<p>errors related to the symbols</p>","name":"symbolErrors"},{"type":{"names":["Array.<object>"]},"description":"<p>list of symbols</p>","name":"symbolList"},{"type":{"names":["string"]},"description":"<p>path to the svg folder</p>","name":"symbolsPath"},{"type":{"names":["number"]},"description":"<p>rotation step of text styler</p>","name":"textRotationStep"},{"type":{"names":["function"]},"description":"<p>triggered when the user closes the annotations panel</p>","name":"toggleControl"}],"name":"Annotations","longname":"components.mapControls.annotations.Annotations","scope":"static","$longname":"components.mapControls.annotations.Annotations"},{"comment":"/**\n * Annotations configuration object.\n * Stores overridable configuration.\n *\n * The default configuration is the following:\n *  - 2 fields (title and description)\n *  - extra markers library {@link https://github.com/coryasilva/Leaflet.ExtraMarkers}\n *  - font awesome glyphs for markers\n *  - multiGeometry enabled\n *\n * To (partially) override the configuration use initialState in localConfig.json:\n * @example\n * Only overrides the list of fields\n * {\n *   ...\n *   \"initialState\": {\n *     \"defaultState\": {\n *         \"annotations\": {\n *             \"config\": {\n *                 \"fields\": [{\n *                     \"name\": \"myattribute\",\n *                     \"editable\": true\n *                     \"validator\": \"value.indexOf('fake') === -1\",\n *                     \"validateError\": \"annotations.error.fake\"\n *                 }]\n *             }\n *         }\n *     }\n *   }\n * }\n *\n * @memberof components.mapControls.annotations\n * @class AnnotationsConfig\n */","meta":{"filename":"AnnotationsConfig.js","lineno":15,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{}},"description":"<p>Annotations configuration object.\nStores overridable configuration.</p>\n<p>The default configuration is the following:</p>\n<ul>\n<li>2 fields (title and description)</li>\n<li>extra markers library {@link https://github.com/coryasilva/Leaflet.ExtraMarkers}</li>\n<li>font awesome glyphs for markers</li>\n<li>multiGeometry enabled</li>\n</ul>\n<p>To (partially) override the configuration use initialState in localConfig.json:</p>","examples":["Only overrides the list of fields\n{\n  ...\n  \"initialState\": {\n    \"defaultState\": {\n        \"annotations\": {\n            \"config\": {\n                \"fields\": [{\n                    \"name\": \"myattribute\",\n                    \"editable\": true\n                    \"validator\": \"value.indexOf('fake') === -1\",\n                    \"validateError\": \"annotations.error.fake\"\n                }]\n            }\n        }\n    }\n  }\n}"],"memberof":"components.mapControls.annotations","kind":"class","name":"AnnotationsConfig","scope":"static","longname":"components.mapControls.annotations.AnnotationsConfig","$longname":"components.mapControls.annotations.AnnotationsConfig"},{"comment":"/**\n * (Default) Viewer / Editor for Annotations.\n * @memberof components.mapControls.annotations\n * @class\n * @prop {string} id identifier of the current annotation feature\n * @prop {function} onChangeFormat triggered every format change\n * @prop {string} format decimal or aeronautical degree for coordinates\n * @prop {string} mapProjection crs of the map\n * @prop {object} config configuration object, where overridable stuff is stored (fields config for annotations, marker library, etc.) {@link #components.mapControls.annotations.AnnotationsConfig}\n * @prop {object} editing feature object of the feature under editing (when editing mode is enabled, null otherwise)\n * @prop {boolean} drawing flag to state status of drawing during editing\n * @prop {boolean} styling flag to state status of styling during editing\n * @prop {object} errors key/value set of validation errors (field_name: error_id)\n * @prop {object} feature object with the annotation properties\n * @prop {bool} showBack shows / hides the back button in the view mode\n * @prop {bool} showEdit shows / hides the edit button in the view mode\n * @prop {function} onEdit triggered when the user clicks on the edit button\n * @prop {function} onCancelEdit triggered when the user cancels current editing session\n * @prop {function} onCancelStyle triggered when the user cancels style selection\n * @prop {function} onCancel triggered when the user cancels the addition/changes made to the annotation\n * @prop {function} onCleanHighlight triggered when the user exits 'details' mode\n * @prop {function} onHighlight triggered when the user hover the infoviewer card\n * @prop {function} onConfirmDeleteFeature triggered when the user confirms deletion of a feature\n * @prop {function} onAddText triggered when the user adds new Text geometry to the feature\n * @prop {function} onToggleUnsavedChangesModal toggles the view of the UnsavedChangesModal\n * @prop {function} onToggleUnsavedStyleModal toggles the view of the UnsavedStyleModal\n * @prop {function} onToggleUnsavedGeometryModal toggles the view of the UnsavedGeometryModal\n * @prop {function} onSetUnsavedChanges triggered when the user changes the value of any field, it sets a flag used to trigger the view of the UnsavedChangesModal\n * @prop {function} onAddNewFeature triggered when user click on save icon of the coordinate editor, this will add the feature being drawn to the list of features of the ft coll of the annotation\n * @prop {function} onChangeProperties triggered when the user changes the value of any field\n * @prop {function} onSetUnsavedStyle triggered when the user changes the style , it sets a flag used to trigger the view of the UnsavedStyleModal\n * @prop {function} onConfirmRemove triggered when the user confirms removal\n * @prop {function} onCancelRemove triggered when the user cancels removal\n * @prop {function} onCancelClose triggered when the user cancels closing\n * @prop {function} onConfirmClose triggered when the user confirms closing\n * @prop {function} onStartDrawing triggered before the user starts the drawing process\n * @prop {object} editedFields fields of the annotation\n * @prop {object} drawingText it contains info of the text annotation, 'drawing' if being added or 'show' used to show the modal to add the relative value\n * @prop {boolean} unsavedChanges flag used to trigger changes of showUnsavedChangesModal\n * @prop {boolean} unsavedStyle flag used to trigger changes of showUnsavedChangesModal\n * @prop {boolean} closing user asked for closing panel when editing\n * @prop {string} stylerType selected styler to be shown as body\n * @prop {boolean} showUnsavedStyleModal flag used to show the UnsavedChangesModal\n * @prop {boolean} showUnsavedChangesModal flag used to show the UnsavedStyleModal\n * @prop {boolean} showUnsavedGeometryModal flag used to display the modal after user clicks on back and has changed something in the coord editor\n * @prop {boolean} showDeleteFeatureModal flag used to display the modal after deleting a feature for confirmation\n * @prop {boolean} unsavedGeometry flag used to say if something has changed when coord editor is open\n * @prop {string} mode current mode of operation (list, editing, detail)\n * @prop {function} onRemove triggered when the user clicks on the remove button\n * @prop {function} onSave triggered when the user clicks on the save button\n * @prop {function} onSaveStyle triggered when the user saves changes to the style\n * @prop {function} onError triggered when a validation error occurs\n * @prop {function} onAddGeometry triggered when the user clicks on the add point button TODO FIX THIS\n * @prop {function} onDeleteGeometry triggered when the user clicks on the remove points button\n * @prop {function} onStyleGeometry triggered when the user clicks on the style button\n * @prop {function} onSetStyle triggered when the user changes a style property\n * @prop {function} onChangeSelected triggered when the user changes a value(lat or lon) of a coordinate in the coordinate editor\n * @prop {function} onChangeRadius triggered when the user changes the radius of the Circle in its coordinate editor\n * @prop {function} onChangeText triggered when the user changes the text of the Text Annotation in its coordinate editor\n * @prop {function} onSetInvalidSelected triggered when the user insert an invalid coordinate or remove a valid one i.e. \"\"\n * @prop {function} onHighlightPoint triggered when mouse goes over/off a CoordinatesRow\n * @prop {function} onResetCoordEditor triggered when the user goes back from the coordinate editor, it will open a dialog for unsaved changes\n * @prop {function} onZoom triggered when the user zooms to an annotation\n * @prop {function} onDownload triggered when the user exports\n * @prop {function} onChangeGeometryTitle triggered when the user changes geometry title in coordinate editor panel\n * @prop {function} onSelectFeature triggered when the user clicks on a geometry card\n * @prop {boolean} coordinateEditorEnabled triggered when the user zooms to an annotation\n * @prop {object} selected Feature containing the geometry and the properties used for the coordinated editor\n * @prop {object} aeronauticalOptions options for aeronautical format (seconds decimals and step)\n * @prop {number} maxZoom max zoome the for annotation (default 18)\n * @prop {function} onDeleteFeature triggered when user click on trash icon of the coordinate editor\n * @prop {function} onUpdateSymbols triggered when user click on refresh icon of the symbols addon\n * @prop {function} onSetErrorSymbol set a flag in the state to say if the default symbols exists\n * @prop {number} width of the annotation panel\n * @prop {string} pointType the type of the point, values are \"marker\" or \"symbol\"\n * @prop {object[]} lineDashOptions list of options for dashed lines\n * @prop {object[]} symbolList list of symbols\n * @prop {string} symbolsPath path to the svg folder\n * @prop {string} defaultShape default shape for symbol\n * @prop {string} defaultShapeStrokeColor default symbol stroke color\n * @prop {string} defaultShapeFillColor default symbol fill color\n * @prop {string} defaultShapeSize default symbol shape size in px\n * @prop {object} defaultStyles object with default symbol styles\n * @prop {number} textRotationStep rotation step of text styler\n * @prop {function} onSetAnnotationMeasurement triggered on click of edit measurement button when annotation is of type 'Measure'\n * @prop {function} onFilterMarker triggered when marker/glyph name is specified for filtering\n * @prop {object[]} annotations list of annotations\n * @prop {boolean} measurementAnnotationEdit flag for measurement specific annotation features\n * @prop {boolean} geodesic enable to draw a geodesic geometry (supported only for Circle)\n * @prop {function} onHideMeasureWarning triggered when warning is ignored with \"Don't show again\" flag\n * @prop {boolean} showAgain flag for checkbox on the measure annotation popup warning\n * @prop {boolean} showPopupWarning flag to show warning modal on navigating to measurement panel from annotation\n * @prop {function} onToggleShowAgain triggered when interacting with the checkbox on measure annotation warning popup\n * @prop {function} onInitPlugin triggered when annotation editor is mounted\n * @prop {function} onGeometryHighlight triggered onMouseEnter and onMouseLeave of the geometry card\n * @prop {function} onUnSelectFeature triggered on unselecting a geometry card\n *\n * In addition, as the Identify viewer interface mandates, every feature attribute is mapped as a component property (in addition to the feature object).\n */","meta":{"range":[9923,46022],"filename":"AnnotationsEditor.jsx","lineno":145,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{"id":"astnode100015246","name":"AnnotationsEditor","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>(Default) Viewer / Editor for Annotations.</p>","memberof":"components.mapControls.annotations","kind":"class","properties":[{"type":{"names":["object"]},"description":"<p>options for aeronautical format (seconds decimals and step)</p>","name":"aeronauticalOptions"},{"type":{"names":["Array.<object>"]},"description":"<p>list of annotations</p>","name":"annotations"},{"type":{"names":["boolean"]},"description":"<p>user asked for closing panel when editing</p>","name":"closing"},{"type":{"names":["object"]},"description":"<p>configuration object, where overridable stuff is stored (fields config for annotations, marker library, etc.) {@link #components.mapControls.annotations.AnnotationsConfig}</p>","name":"config"},{"type":{"names":["boolean"]},"description":"<p>triggered when the user zooms to an annotation</p>","name":"coordinateEditorEnabled"},{"type":{"names":["string"]},"description":"<p>default shape for symbol</p>","name":"defaultShape"},{"type":{"names":["string"]},"description":"<p>default symbol fill color</p>","name":"defaultShapeFillColor"},{"type":{"names":["string"]},"description":"<p>default symbol shape size in px</p>","name":"defaultShapeSize"},{"type":{"names":["string"]},"description":"<p>default symbol stroke color</p>","name":"defaultShapeStrokeColor"},{"type":{"names":["object"]},"description":"<p>object with default symbol styles</p>","name":"defaultStyles"},{"type":{"names":["boolean"]},"description":"<p>flag to state status of drawing during editing</p>","name":"drawing"},{"type":{"names":["object"]},"description":"<p>it contains info of the text annotation, 'drawing' if being added or 'show' used to show the modal to add the relative value</p>","name":"drawingText"},{"type":{"names":["object"]},"description":"<p>fields of the annotation</p>","name":"editedFields"},{"type":{"names":["object"]},"description":"<p>feature object of the feature under editing (when editing mode is enabled, null otherwise)</p>","name":"editing"},{"type":{"names":["object"]},"description":"<p>key/value set of validation errors (field_name: error_id)</p>","name":"errors"},{"type":{"names":["object"]},"description":"<p>object with the annotation properties</p>","name":"feature"},{"type":{"names":["string"]},"description":"<p>decimal or aeronautical degree for coordinates</p>","name":"format"},{"type":{"names":["boolean"]},"description":"<p>enable to draw a geodesic geometry (supported only for Circle)</p>","name":"geodesic"},{"type":{"names":["string"]},"description":"<p>identifier of the current annotation feature</p>","name":"id"},{"type":{"names":["Array.<object>"]},"description":"<p>list of options for dashed lines</p>","name":"lineDashOptions"},{"type":{"names":["string"]},"description":"<p>crs of the map</p>","name":"mapProjection"},{"type":{"names":["number"]},"description":"<p>max zoome the for annotation (default 18)</p>","name":"maxZoom"},{"type":{"names":["boolean"]},"description":"<p>flag for measurement specific annotation features</p>","name":"measurementAnnotationEdit"},{"type":{"names":["string"]},"description":"<p>current mode of operation (list, editing, detail)</p>","name":"mode"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on the add point button TODO FIX THIS</p>","name":"onAddGeometry"},{"type":{"names":["function"]},"description":"<p>triggered when user click on save icon of the coordinate editor, this will add the feature being drawn to the list of features of the ft coll of the annotation</p>","name":"onAddNewFeature"},{"type":{"names":["function"]},"description":"<p>triggered when the user adds new Text geometry to the feature</p>","name":"onAddText"},{"type":{"names":["function"]},"description":"<p>triggered when the user cancels the addition/changes made to the annotation</p>","name":"onCancel"},{"type":{"names":["function"]},"description":"<p>triggered when the user cancels closing</p>","name":"onCancelClose"},{"type":{"names":["function"]},"description":"<p>triggered when the user cancels current editing session</p>","name":"onCancelEdit"},{"type":{"names":["function"]},"description":"<p>triggered when the user cancels removal</p>","name":"onCancelRemove"},{"type":{"names":["function"]},"description":"<p>triggered when the user cancels style selection</p>","name":"onCancelStyle"},{"type":{"names":["function"]},"description":"<p>triggered every format change</p>","name":"onChangeFormat"},{"type":{"names":["function"]},"description":"<p>triggered when the user changes geometry title in coordinate editor panel</p>","name":"onChangeGeometryTitle"},{"type":{"names":["function"]},"description":"<p>triggered when the user changes the value of any field</p>","name":"onChangeProperties"},{"type":{"names":["function"]},"description":"<p>triggered when the user changes the radius of the Circle in its coordinate editor</p>","name":"onChangeRadius"},{"type":{"names":["function"]},"description":"<p>triggered when the user changes a value(lat or lon) of a coordinate in the coordinate editor</p>","name":"onChangeSelected"},{"type":{"names":["function"]},"description":"<p>triggered when the user changes the text of the Text Annotation in its coordinate editor</p>","name":"onChangeText"},{"type":{"names":["function"]},"description":"<p>triggered when the user exits 'details' mode</p>","name":"onCleanHighlight"},{"type":{"names":["function"]},"description":"<p>triggered when the user confirms closing</p>","name":"onConfirmClose"},{"type":{"names":["function"]},"description":"<p>triggered when the user confirms deletion of a feature</p>","name":"onConfirmDeleteFeature"},{"type":{"names":["function"]},"description":"<p>triggered when the user confirms removal</p>","name":"onConfirmRemove"},{"type":{"names":["function"]},"description":"<p>triggered when user click on trash icon of the coordinate editor</p>","name":"onDeleteFeature"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on the remove points button</p>","name":"onDeleteGeometry"},{"type":{"names":["function"]},"description":"<p>triggered when the user exports</p>","name":"onDownload"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on the edit button</p>","name":"onEdit"},{"type":{"names":["function"]},"description":"<p>triggered when a validation error occurs</p>","name":"onError"},{"type":{"names":["function"]},"description":"<p>triggered when marker/glyph name is specified for filtering</p>","name":"onFilterMarker"},{"type":{"names":["function"]},"description":"<p>triggered onMouseEnter and onMouseLeave of the geometry card</p>","name":"onGeometryHighlight"},{"type":{"names":["function"]},"description":"<p>triggered when warning is ignored with &quot;Don't show again&quot; flag</p>","name":"onHideMeasureWarning"},{"type":{"names":["function"]},"description":"<p>triggered when the user hover the infoviewer card</p>","name":"onHighlight"},{"type":{"names":["function"]},"description":"<p>triggered when mouse goes over/off a CoordinatesRow</p>","name":"onHighlightPoint"},{"type":{"names":["function"]},"description":"<p>triggered when annotation editor is mounted</p>","name":"onInitPlugin"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on the remove button</p>","name":"onRemove"},{"type":{"names":["function"]},"description":"<p>triggered when the user goes back from the coordinate editor, it will open a dialog for unsaved changes</p>","name":"onResetCoordEditor"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on the save button</p>","name":"onSave"},{"type":{"names":["function"]},"description":"<p>triggered when the user saves changes to the style</p>","name":"onSaveStyle"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on a geometry card</p>","name":"onSelectFeature"},{"type":{"names":["function"]},"description":"<p>triggered on click of edit measurement button when annotation is of type 'Measure'</p>","name":"onSetAnnotationMeasurement"},{"type":{"names":["function"]},"description":"<p>set a flag in the state to say if the default symbols exists</p>","name":"onSetErrorSymbol"},{"type":{"names":["function"]},"description":"<p>triggered when the user insert an invalid coordinate or remove a valid one i.e. &quot;&quot;</p>","name":"onSetInvalidSelected"},{"type":{"names":["function"]},"description":"<p>triggered when the user changes a style property</p>","name":"onSetStyle"},{"type":{"names":["function"]},"description":"<p>triggered when the user changes the value of any field, it sets a flag used to trigger the view of the UnsavedChangesModal</p>","name":"onSetUnsavedChanges"},{"type":{"names":["function"]},"description":"<p>triggered when the user changes the style , it sets a flag used to trigger the view of the UnsavedStyleModal</p>","name":"onSetUnsavedStyle"},{"type":{"names":["function"]},"description":"<p>triggered before the user starts the drawing process</p>","name":"onStartDrawing"},{"type":{"names":["function"]},"description":"<p>triggered when the user clicks on the style button</p>","name":"onStyleGeometry"},{"type":{"names":["function"]},"description":"<p>triggered when interacting with the checkbox on measure annotation warning popup</p>","name":"onToggleShowAgain"},{"type":{"names":["function"]},"description":"<p>toggles the view of the UnsavedChangesModal</p>","name":"onToggleUnsavedChangesModal"},{"type":{"names":["function"]},"description":"<p>toggles the view of the UnsavedGeometryModal</p>","name":"onToggleUnsavedGeometryModal"},{"type":{"names":["function"]},"description":"<p>toggles the view of the UnsavedStyleModal</p>","name":"onToggleUnsavedStyleModal"},{"type":{"names":["function"]},"description":"<p>triggered on unselecting a geometry card</p>\n<p>In addition, as the Identify viewer interface mandates, every feature attribute is mapped as a component property (in addition to the feature object).</p>","name":"onUnSelectFeature"},{"type":{"names":["function"]},"description":"<p>triggered when user click on refresh icon of the symbols addon</p>","name":"onUpdateSymbols"},{"type":{"names":["function"]},"description":"<p>triggered when the user zooms to an annotation</p>","name":"onZoom"},{"type":{"names":["string"]},"description":"<p>the type of the point, values are &quot;marker&quot; or &quot;symbol&quot;</p>","name":"pointType"},{"type":{"names":["object"]},"description":"<p>Feature containing the geometry and the properties used for the coordinated editor</p>","name":"selected"},{"type":{"names":["boolean"]},"description":"<p>flag for checkbox on the measure annotation popup warning</p>","name":"showAgain"},{"type":{"names":["bool"]},"description":"<p>shows / hides the back button in the view mode</p>","name":"showBack"},{"type":{"names":["boolean"]},"description":"<p>flag used to display the modal after deleting a feature for confirmation</p>","name":"showDeleteFeatureModal"},{"type":{"names":["bool"]},"description":"<p>shows / hides the edit button in the view mode</p>","name":"showEdit"},{"type":{"names":["boolean"]},"description":"<p>flag to show warning modal on navigating to measurement panel from annotation</p>","name":"showPopupWarning"},{"type":{"names":["boolean"]},"description":"<p>flag used to show the UnsavedStyleModal</p>","name":"showUnsavedChangesModal"},{"type":{"names":["boolean"]},"description":"<p>flag used to display the modal after user clicks on back and has changed something in the coord editor</p>","name":"showUnsavedGeometryModal"},{"type":{"names":["boolean"]},"description":"<p>flag used to show the UnsavedChangesModal</p>","name":"showUnsavedStyleModal"},{"type":{"names":["string"]},"description":"<p>selected styler to be shown as body</p>","name":"stylerType"},{"type":{"names":["boolean"]},"description":"<p>flag to state status of styling during editing</p>","name":"styling"},{"type":{"names":["Array.<object>"]},"description":"<p>list of symbols</p>","name":"symbolList"},{"type":{"names":["string"]},"description":"<p>path to the svg folder</p>","name":"symbolsPath"},{"type":{"names":["number"]},"description":"<p>rotation step of text styler</p>","name":"textRotationStep"},{"type":{"names":["boolean"]},"description":"<p>flag used to trigger changes of showUnsavedChangesModal</p>","name":"unsavedChanges"},{"type":{"names":["boolean"]},"description":"<p>flag used to say if something has changed when coord editor is open</p>","name":"unsavedGeometry"},{"type":{"names":["boolean"]},"description":"<p>flag used to trigger changes of showUnsavedChangesModal</p>","name":"unsavedStyle"},{"type":{"names":["number"]},"description":"<p>of the annotation panel</p>","name":"width"}],"name":"AnnotationsEditor","longname":"components.mapControls.annotations.AnnotationsEditor","scope":"static","$longname":"components.mapControls.annotations.AnnotationsEditor"},{"comment":"/**\n * Component for rendering a rectangular card with preview, title, description and caption.\n * @memberof components.misc.cardgrids\n * @name SideCard\n * @class\n * @prop {node}         body            add a node to the bottom of card\n * @prop {node|string}  caption         text for caption\n * @prop {node}         infoExtra       add a node under info\n * @prop {string}       className       custom class\n * @prop {node|string}  description     text for description\n * @prop {bool}         fullText        add full-text className\n * @prop {function}     onClick         callback on card click\n * @prop {function}     onMouseEnter    callback on card mouse enter\n * @prop {function}     onMouseLeave    callback on card mouse leave\n * @prop {node}         preview         insert a glyphicon or img node\n * @prop {node|string}  dragSymbol      insert a glyphicon or string for  drag symbol\n * @prop {bool}         selected        highlight the card with selected style\n * @prop {string}       size            size of card, 'sm' for small\n * @prop {object}       style           inline style\n * @prop {node|string}  title           text for title\n * @prop {bool}         loading         loading spinner\n * @prop {node}         tools           add a node to the right of card\n */","meta":{"filename":"SideCard.jsx","lineno":15,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/cardgrids","code":{}},"description":"<p>Component for rendering a rectangular card with preview, title, description and caption.</p>","memberof":"components.misc.cardgrids","name":"SideCard","kind":"class","properties":[{"type":{"names":["node"]},"description":"<p>add a node to the bottom of card</p>","name":"body"},{"type":{"names":["node","string"]},"description":"<p>text for caption</p>","name":"caption"},{"type":{"names":["string"]},"description":"<p>custom class</p>","name":"className"},{"type":{"names":["node","string"]},"description":"<p>text for description</p>","name":"description"},{"type":{"names":["node","string"]},"description":"<p>insert a glyphicon or string for  drag symbol</p>","name":"dragSymbol"},{"type":{"names":["bool"]},"description":"<p>add full-text className</p>","name":"fullText"},{"type":{"names":["node"]},"description":"<p>add a node under info</p>","name":"infoExtra"},{"type":{"names":["bool"]},"description":"<p>loading spinner</p>","name":"loading"},{"type":{"names":["function"]},"description":"<p>callback on card click</p>","name":"onClick"},{"type":{"names":["function"]},"description":"<p>callback on card mouse enter</p>","name":"onMouseEnter"},{"type":{"names":["function"]},"description":"<p>callback on card mouse leave</p>","name":"onMouseLeave"},{"type":{"names":["node"]},"description":"<p>insert a glyphicon or img node</p>","name":"preview"},{"type":{"names":["bool"]},"description":"<p>highlight the card with selected style</p>","name":"selected"},{"type":{"names":["string"]},"description":"<p>size of card, 'sm' for small</p>","name":"size"},{"type":{"names":["object"]},"description":"<p>inline style</p>","name":"style"},{"type":{"names":["node","string"]},"description":"<p>text for title</p>","name":"title"},{"type":{"names":["node"]},"description":"<p>add a node to the right of card</p>","name":"tools"}],"scope":"static","longname":"components.misc.cardgrids.SideCard","$longname":"components.misc.cardgrids.SideCard"},{"comment":"/**\n * Component for rendering a list of SideCard.\n * @memberof components.misc.cardgrids\n * @name SideGrid\n * @class\n * @prop {array} items array of list item\n * @prop {function} onItemClick callback on item click\n * @prop {string} size size of cards, 'sm' for small\n * @prop {element} cardComponent custom component for card in list\n * @prop {object} colProps props for react-bootstrap col component\n */","meta":{"filename":"SideGrid.jsx","lineno":15,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/cardgrids","code":{}},"description":"<p>Component for rendering a list of SideCard.</p>","memberof":"components.misc.cardgrids","name":"SideGrid","kind":"class","properties":[{"type":{"names":["element"]},"description":"<p>custom component for card in list</p>","name":"cardComponent"},{"type":{"names":["object"]},"description":"<p>props for react-bootstrap col component</p>","name":"colProps"},{"type":{"names":["array"]},"description":"<p>array of list item</p>","name":"items"},{"type":{"names":["function"]},"description":"<p>callback on item click</p>","name":"onItemClick"},{"type":{"names":["string"]},"description":"<p>size of cards, 'sm' for small</p>","name":"size"}],"scope":"static","longname":"components.misc.cardgrids.SideGrid","$longname":"components.misc.cardgrids.SideGrid"},{"comment":"/**\n * A component to display an empty page.\n * It allows to display a big icon with some information centered. As an option some additiona content can be provided via props. (e.g. add buttons, tools or info)\n * It is very similar to material design concept for [empty state](https://material.io/guidelines/patterns/empty-states.html)\n *\n * @class EmptyView\n * @memberof components.misc\n * @param  {object} [mainViewStyle]     Style for the main view\n * @param  {object} [contentStyle]      Style for the container view\n * @param  {string} [glyph=\"info-sign\"] The icon glyph\n * @param  {string|node} [title]               The title of the advice to display\n * @param  {string|node} [description]         The description to display\n * @param  {string|node} [content]             Additional content for the empty view (e.g. buttons...)\n */","meta":{"filename":"EmptyView.jsx","lineno":12,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc","code":{}},"description":"<p>A component to display an empty page.\nIt allows to display a big icon with some information centered. As an option some additiona content can be provided via props. (e.g. add buttons, tools or info)\nIt is very similar to material design concept for <a href=\"https://material.io/guidelines/patterns/empty-states.html\">empty state</a></p>","kind":"class","name":"EmptyView","memberof":"components.misc","params":[{"type":{"names":["object"]},"optional":true,"description":"<p>Style for the main view</p>","name":"mainViewStyle"},{"type":{"names":["object"]},"optional":true,"description":"<p>Style for the container view</p>","name":"contentStyle"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"info-sign\"","description":"<p>The icon glyph</p>","name":"glyph"},{"type":{"names":["string","node"]},"optional":true,"description":"<p>The title of the advice to display</p>","name":"title"},{"type":{"names":["string","node"]},"optional":true,"description":"<p>The description to display</p>","name":"description"},{"type":{"names":["string","node"]},"optional":true,"description":"<p>Additional content for the empty view (e.g. buttons...)</p>","name":"content"}],"scope":"static","longname":"components.misc.EmptyView","$longname":"components.misc.EmptyView"},{"comment":"/**\n* Empty State enhancer. Enhances an object displaying an empty state view under a given condition\n* @type {function}\n* @name emptyState\n* @memberof components.misc.enhancers\n* @param {function} isEmpty The test function for the properties. If it returns true, use empty view\n* @param {object|function} [emptyComponentProps] parameters for the empty components.\n* The structure must reflect the props of the EmptyComponent(3rd) parameter (or its default @see [EmptyView](#components.misc.EmptyView))\n* If this parameter is a function, will call it getting the component properties to generate the emptyComponent props\n* @param {Component} [EmptyComponent=EmptyView] the component to use for empty view. By default [EmptyView](#components.misc.EmptyView)\n* @example\n* emptyState(({data=[]}) => data.length === 0)(ComponentToEnhance);\n*\n*/","meta":{"filename":"emptyState.jsx","lineno":15,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/enhancers","code":{}},"description":"<p>Empty State enhancer. Enhances an object displaying an empty state view under a given condition</p>","type":{"names":["function"]},"name":"emptyState","memberof":"components.misc.enhancers","params":[{"type":{"names":["function"]},"description":"<p>The test function for the properties. If it returns true, use empty view</p>","name":"isEmpty"},{"type":{"names":["object","function"]},"optional":true,"description":"<p>parameters for the empty components.\nThe structure must reflect the props of the EmptyComponent(3rd) parameter (or its default @see <a href=\"#components.misc.EmptyView\">EmptyView</a>)\nIf this parameter is a function, will call it getting the component properties to generate the emptyComponent props</p>","name":"emptyComponentProps"},{"type":{"names":["Component"]},"optional":true,"defaultvalue":"EmptyView","description":"<p>the component to use for empty view. By default <a href=\"#components.misc.EmptyView\">EmptyView</a></p>","name":"EmptyComponent"}],"examples":["emptyState(({data=[]}) => data.length === 0)(ComponentToEnhance);"],"scope":"static","longname":"components.misc.enhancers.emptyState","kind":"member","$longname":"components.misc.enhancers.emptyState"},{"comment":"/**\n * Allow to transform a property processing another property (as an object) and applying certain rules.\n * It's useful if you want to generate flags that allow or deny certain functionalities based on certain rules to put in configuration.\n * Typically used with connect, expect to have an `accessInfo` object to use as source of information to apply the rules.\n * example:\n * ```\n * const CMP = accessRuleParser(\"hasAllAccess\")(oldCMP);\n * // hasAllAccess property in nestedComponent will be the result of accessInfo.mapInfo.canEdit && accessInfo.mapInfo.canDelete ( true )\n * return <CMP accessInfo={{ user: {role: \"ADMIN\"}, mapInfo: {canEdit: true, canDelete: true}}} hasAllAccess={[\"mapInfo.canEdit\", \"mapInfo.canDelete\"]} />\n * // or\n * return <CMP accessInfo={{ user: {role: \"ADMIN\"}, mapInfo: {canEdit: true, canDelete: true}}} hasAllAccess={[\"user.role=ADMIN\", \"mapInfo.canDelete\"]} />\n * // you can even transform a structured object\n * const CMP = accessRuleParser(\"hasAllAccess\", {asObject: true})(oldCMP);\n * return <CMP accessInfo={{ user: {role: \"ADMIN\"}, mapInfo: {canEdit: true, canDelete: true}}} hasAllAccess={[\"mapInfo.canEdit\", \"mapInfo.canDelete\"]} />\n *\n * // you can use \"__OR__\" as first element to change the default AND check of rules in array to OR\n * const CMP = accessRuleParser(\"hasAllAccess\", {asObject: true})(oldCMP);\n * return <CMP accessInfo={{ user: {role: \"ADMIN\"}, mapInfo: {canEdit: true, canDelete: true}}} hasAllAccess={[\"__OR__\", \"mapInfo.canEdit\", \"mapInfo.canDelete\"]} />\n * ```\n * **NOTE**: this limit the values of the variables that work with this parser. They can not start with `!` or be contained in `{}` (TODO: support JS expression like plugins)\n *\n * @name accessRuleParser\n * @memberof components.misc.enhancers.security\n * @param {string} name - name of the property to transform\n * @param {Object} options - The options to generate the enhancer\n * @param {string} [options.asObject = false] if true, the property is intended to be an object. The rules will be applied on each key of the object.\n *        If not defined, at propToMap have to be defined. Otherwise the rule will be applied only to the property. Useful if you have more than one flag to set.\n * @param {function} [options.postProcessValue = identity] process the value get from a rule to return. The function has the rule as second argument. Example of custom postProcessValue function is: `(v, rule) => rule == \"_ALWAYS_FALSE_\" ? false : v * 2\n * @param {function} [options.reduceFun = AND]. An Array.reduce function to accumulate the rules, useful if you want to transform the variable in a different thing that a flag, or you want to use OR condition.\n * @param {object} [options.accessInfo=\"accessInfo\"]: the property name of the property to use to retrieve data\n */","meta":{"filename":"accessRuleParser.jsx","lineno":52,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/enhancers/security","code":{}},"description":"<p>Allow to transform a property processing another property (as an object) and applying certain rules.\nIt's useful if you want to generate flags that allow or deny certain functionalities based on certain rules to put in configuration.\nTypically used with connect, expect to have an <code>accessInfo</code> object to use as source of information to apply the rules.\nexample:</p>\n<pre class=\"prettyprint source\"><code>const CMP = accessRuleParser(&quot;hasAllAccess&quot;)(oldCMP);\n// hasAllAccess property in nestedComponent will be the result of accessInfo.mapInfo.canEdit && accessInfo.mapInfo.canDelete ( true )\nreturn &lt;CMP accessInfo={{ user: {role: &quot;ADMIN&quot;}, mapInfo: {canEdit: true, canDelete: true}}} hasAllAccess={[&quot;mapInfo.canEdit&quot;, &quot;mapInfo.canDelete&quot;]} />\n// or\nreturn &lt;CMP accessInfo={{ user: {role: &quot;ADMIN&quot;}, mapInfo: {canEdit: true, canDelete: true}}} hasAllAccess={[&quot;user.role=ADMIN&quot;, &quot;mapInfo.canDelete&quot;]} />\n// you can even transform a structured object\nconst CMP = accessRuleParser(&quot;hasAllAccess&quot;, {asObject: true})(oldCMP);\nreturn &lt;CMP accessInfo={{ user: {role: &quot;ADMIN&quot;}, mapInfo: {canEdit: true, canDelete: true}}} hasAllAccess={[&quot;mapInfo.canEdit&quot;, &quot;mapInfo.canDelete&quot;]} />\n\n// you can use &quot;__OR__&quot; as first element to change the default AND check of rules in array to OR\nconst CMP = accessRuleParser(&quot;hasAllAccess&quot;, {asObject: true})(oldCMP);\nreturn &lt;CMP accessInfo={{ user: {role: &quot;ADMIN&quot;}, mapInfo: {canEdit: true, canDelete: true}}} hasAllAccess={[&quot;__OR__&quot;, &quot;mapInfo.canEdit&quot;, &quot;mapInfo.canDelete&quot;]} />\n</code></pre>\n<p><strong>NOTE</strong>: this limit the values of the variables that work with this parser. They can not start with <code>!</code> or be contained in <code>{}</code> (TODO: support JS expression like plugins)</p>","name":"accessRuleParser","memberof":"components.misc.enhancers.security","params":[{"type":{"names":["string"]},"description":"<p>name of the property to transform</p>","name":"name"},{"type":{"names":["Object"]},"description":"<p>The options to generate the enhancer</p>","name":"options"},{"type":{"names":["string"]},"optional":true,"defaultvalue":false,"description":"<p>if true, the property is intended to be an object. The rules will be applied on each key of the object.\nIf not defined, at propToMap have to be defined. Otherwise the rule will be applied only to the property. Useful if you have more than one flag to set.</p>","name":"options.asObject"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"identity","description":"<p>process the value get from a rule to return. The function has the rule as second argument. Example of custom postProcessValue function is: `(v, rule) =&gt; rule == &quot;<em>ALWAYS_FALSE</em>&quot; ? false : v * 2</p>","name":"options.postProcessValue"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"AND","description":"<p>An Array.reduce function to accumulate the rules, useful if you want to transform the variable in a different thing that a flag, or you want to use OR condition.</p>","name":"options.reduceFun"},{"type":{"names":["object"]},"optional":true,"defaultvalue":"\"accessInfo\"","description":"<p>the property name of the property to use to retrieve data</p>","name":"options.accessInfo"}],"scope":"static","longname":"components.misc.enhancers.security.accessRuleParser","kind":"member","$longname":"components.misc.enhancers.security.accessRuleParser"},{"comment":"/**\n * Tooltip enhancer. Enhances an object adding a tooltip (with i18n support).\n * It is applied only if props contains `tooltip` or `tooltipId`. It have to be applied to a React (functional) component\n * @type {function}\n * @name tooltip\n * @memberof components.misc.enhancers\n * @prop {string|node} [tooltip] if present will add the tooltip. This is the full tooltip content\n * @prop {string} [tooltipId] if present will show a localized tooltip using the tooltipId as msgId\n * @prop {string} [tooltipPosition=\"top\"]\n * @prop {string} tooltipTrigger see react overlay trigger\n * @example\n * render() {\n *   const Cmp = tooltip((props) =><El {...props}></El>); // or simply tooltip(El);\n *   return <Cmp tooltipId=\"Hello\" tooltipPosition=\"left\" /> // => render the component with tooltip\n * }\n *\n */","meta":{"filename":"tooltip.jsx","lineno":16,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/enhancers","code":{}},"description":"<p>Tooltip enhancer. Enhances an object adding a tooltip (with i18n support).\nIt is applied only if props contains <code>tooltip</code> or <code>tooltipId</code>. It have to be applied to a React (functional) component</p>","type":{"names":["function"]},"name":"tooltip","memberof":"components.misc.enhancers","properties":[{"type":{"names":["string","node"]},"optional":true,"description":"<p>if present will add the tooltip. This is the full tooltip content</p>","name":"tooltip"},{"type":{"names":["string"]},"optional":true,"description":"<p>if present will show a localized tooltip using the tooltipId as msgId</p>","name":"tooltipId"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"top\"","name":"tooltipPosition"},{"type":{"names":["string"]},"description":"<p>see react overlay trigger</p>","name":"tooltipTrigger"}],"examples":["render() {\n  const Cmp = tooltip((props) =><El {...props}></El>); // or simply tooltip(El);\n  return <Cmp tooltipId=\"Hello\" tooltipPosition=\"left\" /> // => render the component with tooltip\n}"],"scope":"static","longname":"components.misc.enhancers.tooltip","kind":"member","$longname":"components.misc.enhancers.tooltip"},{"comment":"/**\n * Component for rendering an Accordion with Side Card as header.\n * @memberof components.misc.panels\n * @name Accordion\n * @class\n * @prop {string} activePanel current open panel, should match the panel id\n * @prop {bool} fillContainer fill the height of container without scroolbar\n * @prop {string} className additional calss name\n * @prop {function} onSelect return the panel id when the header has been selected\n * @prop {array} panels array of objects head contains data of sidecard and body is an High-Order Component, e.g. {id: 'panel:000', head: { }, body: () => null }\n */","meta":{"filename":"Accordion.jsx","lineno":14,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/panels","code":{}},"description":"<p>Component for rendering an Accordion with Side Card as header.</p>","memberof":"components.misc.panels","name":"Accordion","kind":"class","properties":[{"type":{"names":["string"]},"description":"<p>current open panel, should match the panel id</p>","name":"activePanel"},{"type":{"names":["string"]},"description":"<p>additional calss name</p>","name":"className"},{"type":{"names":["bool"]},"description":"<p>fill the height of container without scroolbar</p>","name":"fillContainer"},{"type":{"names":["function"]},"description":"<p>return the panel id when the header has been selected</p>","name":"onSelect"},{"type":{"names":["array"]},"description":"<p>array of objects head contains data of sidecard and body is an High-Order Component, e.g. {id: 'panel:000', head: { }, body: () =&gt; null }</p>","name":"panels"}],"scope":"static","longname":"components.misc.panels.Accordion","$longname":"components.misc.panels.Accordion"},{"comment":"/**\n * Component for rendering a DockPanel or Modal based on dock props.\n * @memberof components.misc.panels\n * @name DockablePanel\n * @class\n * @prop {bool} dock true renders a DockPanel and false a RisizableModal\n * @prop {bool} open show/hide component\n */","meta":{"filename":"DockablePanel.jsx","lineno":16,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/panels","code":{}},"description":"<p>Component for rendering a DockPanel or Modal based on dock props.</p>","memberof":"components.misc.panels","name":"DockablePanel","kind":"class","properties":[{"type":{"names":["bool"]},"description":"<p>true renders a DockPanel and false a RisizableModal</p>","name":"dock"},{"type":{"names":["bool"]},"description":"<p>show/hide component</p>","name":"open"}],"scope":"static","longname":"components.misc.panels.DockablePanel","$longname":"components.misc.panels.DockablePanel"},{"comment":"/**\n * Component for rendering a DockPanel\n * @memberof components.misc.panels\n * @name DockPanel\n * @class\n * @prop {bool} fluid true calculates the size as a fraction of screen width/height\n * @prop {string} className additional class name\n * @prop {string} position side of the screen where the panel is located, top, bottom, left and right\n * @prop {bool} open show/hide component\n * @prop {number} size size of panel 0.0 to 1.0 if fluid instead of px value\n * @prop {object} style style of dock panel\n * @prop {number} zIndex panel z index\n * @prop {function} onClose callback on click close icon\n * @prop {string} bsStyle default or primary\n * @prop {node} title title on header\n * @prop {bool} showFullscreen enable fullscreen\n * @prop {string} glyph glyph displayed on top corner of panel\n * @prop {node} header additional element for header\n * @prop {node} footer footer content\n * @prop {bool} hideHeader hide header\n */","meta":{"filename":"DockPanel.jsx","lineno":16,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/panels","code":{}},"description":"<p>Component for rendering a DockPanel</p>","memberof":"components.misc.panels","name":"DockPanel","kind":"class","properties":[{"type":{"names":["string"]},"description":"<p>default or primary</p>","name":"bsStyle"},{"type":{"names":["string"]},"description":"<p>additional class name</p>","name":"className"},{"type":{"names":["bool"]},"description":"<p>true calculates the size as a fraction of screen width/height</p>","name":"fluid"},{"type":{"names":["node"]},"description":"<p>footer content</p>","name":"footer"},{"type":{"names":["string"]},"description":"<p>glyph displayed on top corner of panel</p>","name":"glyph"},{"type":{"names":["node"]},"description":"<p>additional element for header</p>","name":"header"},{"type":{"names":["bool"]},"description":"<p>hide header</p>","name":"hideHeader"},{"type":{"names":["function"]},"description":"<p>callback on click close icon</p>","name":"onClose"},{"type":{"names":["bool"]},"description":"<p>show/hide component</p>","name":"open"},{"type":{"names":["string"]},"description":"<p>side of the screen where the panel is located, top, bottom, left and right</p>","name":"position"},{"type":{"names":["bool"]},"description":"<p>enable fullscreen</p>","name":"showFullscreen"},{"type":{"names":["number"]},"description":"<p>size of panel 0.0 to 1.0 if fluid instead of px value</p>","name":"size"},{"type":{"names":["object"]},"description":"<p>style of dock panel</p>","name":"style"},{"type":{"names":["node"]},"description":"<p>title on header</p>","name":"title"},{"type":{"names":["number"]},"description":"<p>panel z index</p>","name":"zIndex"}],"scope":"static","longname":"components.misc.panels.DockPanel","$longname":"components.misc.panels.DockPanel"},{"comment":"/**\n * Component for rendering a PanelHeader\n * @memberof components.misc.panels\n * @name PanelHeader\n * @class\n * @prop {string} position side of the screen where the panel is located, top, bottom, left and right\n * @prop {function} onClose callback on click close icon\n * @prop {string} bsStyle default or primary\n * @prop {node} title title on header\n * @prop {bool} fullscreen current fullscreen state\n * @prop {bool} showFullscreen enable fullscreen\n * @prop {string} glyph glyph displayed on top corner of header\n * @prop {node} additionalRows additional element for header\n * @prop {function} onFullscreen return state of fullscreen\n */","meta":{"filename":"PanelHeader.jsx","lineno":36,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/panels","code":{}},"description":"<p>Component for rendering a PanelHeader</p>","memberof":"components.misc.panels","name":"PanelHeader","kind":"class","properties":[{"type":{"names":["node"]},"description":"<p>additional element for header</p>","name":"additionalRows"},{"type":{"names":["string"]},"description":"<p>default or primary</p>","name":"bsStyle"},{"type":{"names":["bool"]},"description":"<p>current fullscreen state</p>","name":"fullscreen"},{"type":{"names":["string"]},"description":"<p>glyph displayed on top corner of header</p>","name":"glyph"},{"type":{"names":["function"]},"description":"<p>callback on click close icon</p>","name":"onClose"},{"type":{"names":["function"]},"description":"<p>return state of fullscreen</p>","name":"onFullscreen"},{"type":{"names":["string"]},"description":"<p>side of the screen where the panel is located, top, bottom, left and right</p>","name":"position"},{"type":{"names":["bool"]},"description":"<p>enable fullscreen</p>","name":"showFullscreen"},{"type":{"names":["node"]},"description":"<p>title on header</p>","name":"title"}],"scope":"static","longname":"components.misc.panels.PanelHeader","$longname":"components.misc.panels.PanelHeader"},{"comment":"/**\n * MapStore generic sidebar component with good defaults\n * @class Sidebar\n * @memberof components.misc.sidebar\n * @param  {boolean} open       Open flag\n * @param  {Number} [width=600] Width of the sidebar\n * @param  {node} children      Content\n */","meta":{"filename":"Sidebar.jsx","lineno":13,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/sidebar","code":{}},"description":"<p>MapStore generic sidebar component with good defaults</p>","kind":"class","name":"Sidebar","memberof":"components.misc.sidebar","params":[{"type":{"names":["boolean"]},"description":"<p>Open flag</p>","name":"open"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":600,"description":"<p>Width of the sidebar</p>","name":"width"},{"type":{"names":["node"]},"description":"<p>Content</p>","name":"children"}],"scope":"static","longname":"components.misc.sidebar.Sidebar","$longname":"components.misc.sidebar.Sidebar"},{"comment":"/**\n * Component for rendering react-nouislider.\n * It will update the component only when start and disabled props change,\n * this improvement removes glitches due to excessive updates. (eg. filckering of TOC slider while zooming/panning on map).\n * It uses props of react-nouislider.\n * @memberof components.misc\n * @name Slider\n * @class\n */","meta":{"filename":"Slider.jsx","lineno":13,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc","code":{}},"description":"<p>Component for rendering react-nouislider.\nIt will update the component only when start and disabled props change,\nthis improvement removes glitches due to excessive updates. (eg. filckering of TOC slider while zooming/panning on map).\nIt uses props of react-nouislider.</p>","memberof":"components.misc","name":"Slider","kind":"class","scope":"static","longname":"components.misc.Slider","$longname":"components.misc.Slider"},{"comment":"/**\n* A Generic Reusable Toolbar. Build in animations.\n* @class Toolbar\n* @memberof components.misc.toolbar\n* @param  {object[]} [buttons=[]] Array of buttons. Button objects support the following properties:\n*  - *visible*: true by default, set to `false` to make the button disappear\n*  - *Element*: a component to render instead of the ToolbarButton, it can be a DropdownToolbarOptions\n*  - All the react-bootstrap buttons properties.\n*  - All the properties for @see components.misc.enhancers\n*  - All properties for @see components.misc.toolbar.ToolbarButton and react-bootstrap button\n* @param  {object} [btnDefaultProps] A series of default Props for buttons\n* @param  {object} [btnGroupProps] Props to add to the react-bootstrap `ButtonGroup` component\n* @param  {object|boolean} [transitionProps] properties of ReactCSSTransitionGroup. If false transition are  disabled. (for vertical toolbar)\n*/","meta":{"filename":"Toolbar.jsx","lineno":14,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/toolbar","code":{}},"description":"<p>A Generic Reusable Toolbar. Build in animations.</p>","kind":"class","name":"Toolbar","memberof":"components.misc.toolbar","params":[{"type":{"names":["Array.<object>"]},"optional":true,"defaultvalue":"[]","description":"<p>Array of buttons. Button objects support the following properties:</p>\n<ul>\n<li><em>visible</em>: true by default, set to <code>false</code> to make the button disappear</li>\n<li><em>Element</em>: a component to render instead of the ToolbarButton, it can be a DropdownToolbarOptions</li>\n<li>All the react-bootstrap buttons properties.</li>\n<li>All the properties for @see components.misc.enhancers</li>\n<li>All properties for @see components.misc.toolbar.ToolbarButton and react-bootstrap button</li>\n</ul>","name":"buttons"},{"type":{"names":["object"]},"optional":true,"description":"<p>A series of default Props for buttons</p>","name":"btnDefaultProps"},{"type":{"names":["object"]},"optional":true,"description":"<p>Props to add to the react-bootstrap <code>ButtonGroup</code> component</p>","name":"btnGroupProps"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>properties of ReactCSSTransitionGroup. If false transition are  disabled. (for vertical toolbar)</p>","name":"transitionProps"}],"scope":"static","longname":"components.misc.toolbar.Toolbar","$longname":"components.misc.toolbar.Toolbar"},{"comment":"/**\n * Transfer component\n * @memberof components.misc.transfer\n * @function\n * @name Transfer\n * @prop {object} leftColumn object that describes a transfer column on the left. It should have the following properties\n*  - *items*: an array of items\n*  - *title*: column title\n*  - *filterText*: current filter text\n*  - *filterPlaceholder*: placeholder text of a filter input field\n*  - *tools*: array that describes buttons that are rendered in the column's header\n*  - *emptyStateProps*: empty state props when filter text is not present\n*  - *emptyStateSearchProps*: empty state props when filter text is present\n*  - *onFilter*: callback that is called when filter text changes\n * @prop {object} rightColumn object that describes a transfer column on the right. For object props see *leftColumn*\n * @prop {boolean} [localizeItems=false] if true, it localizes items \"title\" and \"description\" fields, recursively i\n * @prop {boolean} [allowCtrlMultiSelect=false] when true, allows multiple items selected when ctrl key is pressed\n * @prop {array} selectedItems array of selected items\n * @prop {string} selectedSide column that is currently selected. Can be 'left' or 'right'\n * @prop {string} className className to add to the root div\n * @prop {function} filter function used to filter items, by default returns the original array of items\n * @prop {function} sortStrategy function that sorts items\n * @prop {function} onSelect callback that is called when an item is selected\n * @prop {function} onTransfer callback that is called when items are to be transferred between columns\n * @prop {array} moveButtons allows to override default implementations of move buttons\n * @returns {object} react element\n */","meta":{"filename":"Transfer.jsx","lineno":98,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc/transfer","code":{}},"description":"<p>Transfer component</p>","memberof":"components.misc.transfer","kind":"function","name":"Transfer","properties":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"<p>when true, allows multiple items selected when ctrl key is pressed</p>","name":"allowCtrlMultiSelect"},{"type":{"names":["string"]},"description":"<p>className to add to the root div</p>","name":"className"},{"type":{"names":["function"]},"description":"<p>function used to filter items, by default returns the original array of items</p>","name":"filter"},{"type":{"names":["object"]},"description":"<p>object that describes a transfer column on the left. It should have the following properties</p>\n<ul>\n<li><em>items</em>: an array of items</li>\n<li><em>title</em>: column title</li>\n<li><em>filterText</em>: current filter text</li>\n<li><em>filterPlaceholder</em>: placeholder text of a filter input field</li>\n<li><em>tools</em>: array that describes buttons that are rendered in the column's header</li>\n<li><em>emptyStateProps</em>: empty state props when filter text is not present</li>\n<li><em>emptyStateSearchProps</em>: empty state props when filter text is present</li>\n<li><em>onFilter</em>: callback that is called when filter text changes</li>\n</ul>","name":"leftColumn"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"<p>if true, it localizes items &quot;title&quot; and &quot;description&quot; fields, recursively i</p>","name":"localizeItems"},{"type":{"names":["array"]},"description":"<p>allows to override default implementations of move buttons</p>","name":"moveButtons"},{"type":{"names":["function"]},"description":"<p>callback that is called when an item is selected</p>","name":"onSelect"},{"type":{"names":["function"]},"description":"<p>callback that is called when items are to be transferred between columns</p>","name":"onTransfer"},{"type":{"names":["object"]},"description":"<p>object that describes a transfer column on the right. For object props see <em>leftColumn</em></p>","name":"rightColumn"},{"type":{"names":["array"]},"description":"<p>array of selected items</p>","name":"selectedItems"},{"type":{"names":["string"]},"description":"<p>column that is currently selected. Can be 'left' or 'right'</p>","name":"selectedSide"},{"type":{"names":["function"]},"description":"<p>function that sorts items</p>","name":"sortStrategy"}],"returns":[{"type":{"names":["object"]},"description":"<p>react element</p>"}],"scope":"static","longname":"components.misc.transfer.Transfer","$longname":"components.misc.transfer.Transfer"},{"comment":"/**\n * MousePosition is a component that shows the coordinate of the mouse position in a selected crs.\n * @class\n * @memberof components.mousePosition\n * @prop {boolean} showElevation shows elevation in addition to planar coordinates (requires a WMS layer with useElevation: true to be configured in the map)\n * @prop {function} elevationTemplate custom template to show the elevation if showElevation is true (default template shows the elevation number with no formatting)\n * @prop {string[]} filterAllowedCRS list of allowed crs in the combobox list\n * @prop {object[]} projectionDefs list of additional project definitions\n * @prop {object} additionalCRS additional crs to be added to the list\n */","meta":{"range":[1479,6505],"filename":"MousePosition.jsx","lineno":33,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/mouseposition","code":{"id":"astnode100004621","name":"MousePosition","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>MousePosition is a component that shows the coordinate of the mouse position in a selected crs.</p>","kind":"class","memberof":"components.mousePosition","properties":[{"type":{"names":["object"]},"description":"<p>additional crs to be added to the list</p>","name":"additionalCRS"},{"type":{"names":["function"]},"description":"<p>custom template to show the elevation if showElevation is true (default template shows the elevation number with no formatting)</p>","name":"elevationTemplate"},{"type":{"names":["Array.<string>"]},"description":"<p>list of allowed crs in the combobox list</p>","name":"filterAllowedCRS"},{"type":{"names":["Array.<object>"]},"description":"<p>list of additional project definitions</p>","name":"projectionDefs"},{"type":{"names":["boolean"]},"description":"<p>shows elevation in addition to planar coordinates (requires a WMS layer with useElevation: true to be configured in the map)</p>","name":"showElevation"}],"name":"MousePosition","longname":"components.mousePosition.MousePosition","scope":"static","$longname":"components.mousePosition.MousePosition"},{"comment":"/**\n * Container for Notifications. Allows to display notifications by passing\n * them in the notification property\n * @class\n * @memberof components.notifications\n * @prop {object[]} notifications the notifications. Each element have this form\n * ```\n *  {\n *    title: \"title.translation.path\" // or the message directly\n *    message: \"message.translation.path\" // or the message directly\n *    uid: \"1234\" // a unique identifier (if not present, current time is used),\n *    action: {\n *      label:  \"label.translation.path\" // or the message directly\n *    },\n *    autoDismiss: 5 // Delay in seconds for the notification go away. Set this to 0 to not auto-dismiss the notification\n *    position: tr // Position of the notification. Available: tr (top right), tl (top left), tc (top center), br (bottom right), bl (bottom left), bc (bottom center),\n *    values: {...} // an object used for templating the string. if undefined the formatMessage will return the original string\n *  }\n * ```\n * @see https://github.com/igorprado/react-notification-system#creating-a-notification for othe options\n * @example\n * <NotificationContainer notifications={[{uid: 1, title: \"notification\", level: \"success\"}]} />;\n */","meta":{"range":[1706,4755],"filename":"NotificationContainer.jsx","lineno":39,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/notifications","code":{"id":"astnode100005396","name":"NotificationContainer","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>Container for Notifications. Allows to display notifications by passing\nthem in the notification property</p>","kind":"class","memberof":"components.notifications","properties":[{"type":{"names":["Array.<object>"]},"description":"<p>the notifications. Each element have this form</p>\n<pre class=\"prettyprint source\"><code> {\n   title: &quot;title.translation.path&quot; // or the message directly\n   message: &quot;message.translation.path&quot; // or the message directly\n   uid: &quot;1234&quot; // a unique identifier (if not present, current time is used),\n   action: {\n     label:  &quot;label.translation.path&quot; // or the message directly\n   },\n   autoDismiss: 5 // Delay in seconds for the notification go away. Set this to 0 to not auto-dismiss the notification\n   position: tr // Position of the notification. Available: tr (top right), tl (top left), tc (top center), br (bottom right), bl (bottom left), bc (bottom center),\n   values: {...} // an object used for templating the string. if undefined the formatMessage will return the original string\n }\n</code></pre>","name":"notifications"}],"see":["https://github.com/igorprado/react-notification-system#creating-a-notification for othe options"],"examples":["<NotificationContainer notifications={[{uid: 1, title: \"notification\", level: \"success\"}]} />;"],"name":"NotificationContainer","longname":"components.notifications.NotificationContainer","scope":"static","$longname":"components.notifications.NotificationContainer"},{"comment":"/**\n * Container for plugins. Get's the plugin definitions (`plugins`) and configuration (`pluginsConfig`)\n * to render the configured plugins.\n * The plugins to render will come from the `mode` entry of the `pluginsConfig`\n * @class\n * @memberof components.plugins\n * @prop {string} mode key of the pluginsConfig object to get the plugins to render\n * @prop {string} defaultMode mode to use if mode is not defined\n * @prop {object} params params of the current page, usually from react router. Used as state to get plugins descriptor if monitored state is not present.\n * @prop {object} plugins the Plugins definitions\n * @prop {object} pluginsConfig the configuration for the plugins. a map of [mode]: [{pluginCfg1}...]\n * @prop {object} pluginsState a piece of state to use. usually controls.\n * @prop {object} monitoredState the piece of state to monitor Used as state to get plugins descriptor.\n */","meta":{"range":[1468,9320],"filename":"PluginsContainer.jsx","lineno":33,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/plugins","code":{"id":"astnode100012611","name":"PluginsContainer","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>Container for plugins. Get's the plugin definitions (<code>plugins</code>) and configuration (<code>pluginsConfig</code>)\nto render the configured plugins.\nThe plugins to render will come from the <code>mode</code> entry of the <code>pluginsConfig</code></p>","kind":"class","memberof":"components.plugins","properties":[{"type":{"names":["string"]},"description":"<p>mode to use if mode is not defined</p>","name":"defaultMode"},{"type":{"names":["string"]},"description":"<p>key of the pluginsConfig object to get the plugins to render</p>","name":"mode"},{"type":{"names":["object"]},"description":"<p>the piece of state to monitor Used as state to get plugins descriptor.</p>","name":"monitoredState"},{"type":{"names":["object"]},"description":"<p>params of the current page, usually from react router. Used as state to get plugins descriptor if monitored state is not present.</p>","name":"params"},{"type":{"names":["object"]},"description":"<p>the Plugins definitions</p>","name":"plugins"},{"type":{"names":["object"]},"description":"<p>the configuration for the plugins. a map of [mode]: [{pluginCfg1}...]</p>","name":"pluginsConfig"},{"type":{"names":["object"]},"description":"<p>a piece of state to use. usually controls.</p>","name":"pluginsState"}],"name":"PluginsContainer","longname":"components.plugins.PluginsContainer","scope":"static","$longname":"components.plugins.PluginsContainer"},{"comment":"/**\n * Combobox with remote autocomplete functionality.\n * @memberof components.query\n * @class\n * @prop {bool} [disabled] if the combobox should be disabled\n * @prop {object} [filterField] the filterField values\n * @prop {string} [label] the label of the combobox\n * @prop {number} [maxFeaturesWPS] the max number of features for any page\n * @prop {string} [nextPage] the icon for the next page tool\n * @prop {string} [prevPage] the icon for the prev page tool\n * @prop {function} [onUpdateField] updated the filterfield values in the state\n * @prop {bool} [paginated] if true it displays the pagination if there is more than one page\n * @prop {string} [textField] the key used for the labes corresponding to filterField.options[x].label\n * @prop {function} [toggleMenu] it toggles the combobox menu\n * @prop {string} [valueField] the key used for the values corresponding to filterField.options[x].value\n *\n */","meta":{"range":[1577,7578],"filename":"AutocompleteField.jsx","lineno":37,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/query","code":{"id":"astnode100008457","name":"AutocompleteField","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>Combobox with remote autocomplete functionality.</p>","memberof":"components.query","kind":"class","properties":[{"type":{"names":["bool"]},"optional":true,"description":"<p>if the combobox should be disabled</p>","name":"disabled"},{"type":{"names":["object"]},"optional":true,"description":"<p>the filterField values</p>","name":"filterField"},{"type":{"names":["string"]},"optional":true,"description":"<p>the label of the combobox</p>","name":"label"},{"type":{"names":["number"]},"optional":true,"description":"<p>the max number of features for any page</p>","name":"maxFeaturesWPS"},{"type":{"names":["string"]},"optional":true,"description":"<p>the icon for the next page tool</p>","name":"nextPage"},{"type":{"names":["function"]},"optional":true,"description":"<p>updated the filterfield values in the state</p>","name":"onUpdateField"},{"type":{"names":["bool"]},"optional":true,"description":"<p>if true it displays the pagination if there is more than one page</p>","name":"paginated"},{"type":{"names":["string"]},"optional":true,"description":"<p>the icon for the prev page tool</p>","name":"prevPage"},{"type":{"names":["string"]},"optional":true,"description":"<p>the key used for the labes corresponding to filterField.options[x].label</p>","name":"textField"},{"type":{"names":["function"]},"optional":true,"description":"<p>it toggles the combobox menu</p>","name":"toggleMenu"},{"type":{"names":["string"]},"optional":true,"description":"<p>the key used for the values corresponding to filterField.options[x].value</p>","name":"valueField"}],"name":"AutocompleteField","longname":"components.query.AutocompleteField","scope":"static","$longname":"components.query.AutocompleteField"},{"comment":"/**\n * Component for rendering a responsive dialog modal.\n * @memberof components.ResizableModal\n * @class\n * @prop {bool} show show modal. Default false\n * @prop {bool} loading enable loading spinner\n * @prop {element} loadingText if loading is true display this element next to the loading spinner\n * @prop {bool} showFullscreen enable fullscreen. Default false\n * @prop {bool} clickOutEnabled click on background overlay to close modal. Default true\n * @prop {string} fullscreenType type of fullscreen sm, lg or md/empty.\n * @prop {function} onClose callback on close.\n * @prop {node} title string or component for header title.\n * @prop {array} buttons array of buttons object see Toolbar.\n * @prop {string} size size of modal sm, lg or md/empty. Default ''\n * @prop {string} bodyClassName custom class for modal body.\n * @prop {bool} draggable enable modal drag.\n * @prop {bool} fitContent try to fit content if modal height is less than maximum size\n * @prop {string} dialogClassName custom class for the dialog component\n */","meta":{"range":[2141,5282],"filename":"ResizableModal.jsx","lineno":67,"columnno":6,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/misc","code":{"id":"astnode100022470","name":"ResizableModalComp","type":"ArrowFunctionExpression"},"vars":{"":null,"sizeClassName":"components.ResizableModal.ResizableModalComp~sizeClassName","fullscreenClassName":"components.ResizableModal.ResizableModalComp~fullscreenClassName","dialog":"components.ResizableModal.ResizableModalComp~dialog"}},"description":"<p>Component for rendering a responsive dialog modal.</p>","memberof":"components.ResizableModal","kind":"class","properties":[{"type":{"names":["string"]},"description":"<p>custom class for modal body.</p>","name":"bodyClassName"},{"type":{"names":["array"]},"description":"<p>array of buttons object see Toolbar.</p>","name":"buttons"},{"type":{"names":["bool"]},"description":"<p>click on background overlay to close modal. Default true</p>","name":"clickOutEnabled"},{"type":{"names":["string"]},"description":"<p>custom class for the dialog component</p>","name":"dialogClassName"},{"type":{"names":["bool"]},"description":"<p>enable modal drag.</p>","name":"draggable"},{"type":{"names":["bool"]},"description":"<p>try to fit content if modal height is less than maximum size</p>","name":"fitContent"},{"type":{"names":["string"]},"description":"<p>type of fullscreen sm, lg or md/empty.</p>","name":"fullscreenType"},{"type":{"names":["bool"]},"description":"<p>enable loading spinner</p>","name":"loading"},{"type":{"names":["element"]},"description":"<p>if loading is true display this element next to the loading spinner</p>","name":"loadingText"},{"type":{"names":["function"]},"description":"<p>callback on close.</p>","name":"onClose"},{"type":{"names":["bool"]},"description":"<p>show modal. Default false</p>","name":"show"},{"type":{"names":["bool"]},"description":"<p>enable fullscreen. Default false</p>","name":"showFullscreen"},{"type":{"names":["string"]},"description":"<p>size of modal sm, lg or md/empty. Default ''</p>","name":"size"},{"type":{"names":["node"]},"description":"<p>string or component for header title.</p>","name":"title"}],"name":"ResizableModalComp","longname":"components.ResizableModal.ResizableModalComp","scope":"static","params":[],"$longname":"components.ResizableModal.ResizableModalComp"},{"comment":"/**\n* Adds sharing functionality to a resource grid.\n* @memberof components.resources.enhancers\n* @name withShareTool\n* @type {function}\n* @prop {function} getShareUrl: takes a resource and returns an appropriate sharing url, or url along with shareApi value to override the one in shareApi prop\n* @prop {boolean} shareApi: controls, whether Share Dialog should include an option if embedding with APIs\n* @prop {object} [shareOptions] options to pass to the SharePanel\n* @prop {function} [getLocationObject] method to retrieve window.location. If not passed, window.location will be used.  (Overridable by unit tests)\n*/","meta":{"filename":"withShareTool.jsx","lineno":49,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/resources/enhancers","code":{}},"description":"<p>Adds sharing functionality to a resource grid.</p>","memberof":"components.resources.enhancers","name":"withShareTool","type":{"names":["function"]},"properties":[{"type":{"names":["function"]},"optional":true,"description":"<p>method to retrieve window.location. If not passed, window.location will be used.  (Overridable by unit tests)</p>","name":"getLocationObject"},{"type":{"names":["function"]},"description":"<p>takes a resource and returns an appropriate sharing url, or url along with shareApi value to override the one in shareApi prop</p>","name":"getShareUrl:"},{"type":{"names":["boolean"]},"description":"<p>controls, whether Share Dialog should include an option if embedding with APIs</p>","name":"shareApi:"},{"type":{"names":["object"]},"optional":true,"description":"<p>options to pass to the SharePanel</p>","name":"shareOptions"}],"scope":"static","longname":"components.resources.enhancers.withShareTool","kind":"member","$longname":"components.resources.enhancers.withShareTool"},{"comment":"/**\n * ResourceUnavailable is an error view like the typical 404 not found page, or access denied.\n *\n * @memberof plugins\n * @memberof components.ResourceUnavailable\n * @class\n * @prop {boolean} enabled. enable empty state of component combined with alwaysVisible, login or status !== 403.\n * @prop {boolean} login login status true or false\n * @prop {number} status error code 404 or 403\n * @prop {boolean} alwaysVisible set empty state always visible, needs enable to true\n * @prop {string} mode mode types referred to the page view, default 'map'\n * @prop {object} glyphs key represents the mode and the value the name of glyph, default {map: '1-map', dashboard: 'dashboard'}\n * @prop {string} errorMessage error message to display in description\n * @prop {boolean} showHomeButton enable/disable home button\n * @prop {node} homeButton home button to render in content section of empty state\n *\n */","meta":{"range":[1269,2296],"filename":"ResourceUnavailable.jsx","lineno":33,"columnno":6,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/errors","code":{"id":"astnode100028809","name":"ResourceUnavailable","type":"CallExpression","value":""}},"description":"<p>ResourceUnavailable is an error view like the typical 404 not found page, or access denied.</p>","memberof":"components.ResourceUnavailable","kind":"class","properties":[{"type":{"names":["boolean"]},"description":"<p>set empty state always visible, needs enable to true</p>","name":"alwaysVisible"},{"type":{"names":["boolean"]},"description":"<p>enable empty state of component combined with alwaysVisible, login or status !== 403.</p>","name":"enabled."},{"type":{"names":["string"]},"description":"<p>error message to display in description</p>","name":"errorMessage"},{"type":{"names":["object"]},"description":"<p>key represents the mode and the value the name of glyph, default {map: '1-map', dashboard: 'dashboard'}</p>","name":"glyphs"},{"type":{"names":["node"]},"description":"<p>home button to render in content section of empty state</p>","name":"homeButton"},{"type":{"names":["boolean"]},"description":"<p>login status true or false</p>","name":"login"},{"type":{"names":["string"]},"description":"<p>mode types referred to the page view, default 'map'</p>","name":"mode"},{"type":{"names":["boolean"]},"description":"<p>enable/disable home button</p>","name":"showHomeButton"},{"type":{"names":["number"]},"description":"<p>error code 404 or 403</p>","name":"status"}],"name":"ResourceUnavailable","longname":"components.ResourceUnavailable.ResourceUnavailable","scope":"static","params":[],"$longname":"components.ResourceUnavailable.ResourceUnavailable"},{"comment":"/**\n * Component for rendering a legend component.\n * This component shows a list of layers with visibility and opacity controls\n * @memberof components.TOC\n * @name FloatingLegend\n * @class\n * @prop {array} layers array of layer objects\n * @prop {bool} expanded expanded state\n * @prop {number} width width of legend\n * @prop {number} height height of legend\n * @prop {title} title title of map\n * @prop {object} legendProps props for WMSLegend\n * @prop {function} onChange return three arguments, layerId, node type and object with changed value of layer\n * @prop {function} onResize return changed size of legend, e.g {height: 700}\n * @prop {function} onExpand return current expanded state\n * @prop {node} toggleButton component added on legend header, left side\n * @prop {number} minHeight minimum height of legend\n * @prop {number} maxHeight maximum height of legend\n * @prop {number} deltaHeight additional height to increase the evaluated list height\n * @prop {bool} disabled disable and hide the component\n * @prop {number} currentZoomLvl current zoom level of map\n * @prop {array} scales array of supported scales\n * @prop {bool} disableOpacitySlider disable and hide opacity slider\n * @prop {bool} expandedOnMount show expanded legend when component did mount\n * @prop {bool} hideOpacityTooltip hide toolip on opacity sliders\n */","meta":{"filename":"FloatingLegend.jsx","lineno":26,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/TOC","code":{}},"description":"<p>Component for rendering a legend component.\nThis component shows a list of layers with visibility and opacity controls</p>","memberof":"components.TOC","name":"FloatingLegend","kind":"class","properties":[{"type":{"names":["number"]},"description":"<p>current zoom level of map</p>","name":"currentZoomLvl"},{"type":{"names":["number"]},"description":"<p>additional height to increase the evaluated list height</p>","name":"deltaHeight"},{"type":{"names":["bool"]},"description":"<p>disable and hide the component</p>","name":"disabled"},{"type":{"names":["bool"]},"description":"<p>disable and hide opacity slider</p>","name":"disableOpacitySlider"},{"type":{"names":["bool"]},"description":"<p>expanded state</p>","name":"expanded"},{"type":{"names":["bool"]},"description":"<p>show expanded legend when component did mount</p>","name":"expandedOnMount"},{"type":{"names":["number"]},"description":"<p>height of legend</p>","name":"height"},{"type":{"names":["bool"]},"description":"<p>hide toolip on opacity sliders</p>","name":"hideOpacityTooltip"},{"type":{"names":["array"]},"description":"<p>array of layer objects</p>","name":"layers"},{"type":{"names":["object"]},"description":"<p>props for WMSLegend</p>","name":"legendProps"},{"type":{"names":["number"]},"description":"<p>maximum height of legend</p>","name":"maxHeight"},{"type":{"names":["number"]},"description":"<p>minimum height of legend</p>","name":"minHeight"},{"type":{"names":["function"]},"description":"<p>return three arguments, layerId, node type and object with changed value of layer</p>","name":"onChange"},{"type":{"names":["function"]},"description":"<p>return current expanded state</p>","name":"onExpand"},{"type":{"names":["function"]},"description":"<p>return changed size of legend, e.g {height: 700}</p>","name":"onResize"},{"type":{"names":["array"]},"description":"<p>array of supported scales</p>","name":"scales"},{"type":{"names":["title"]},"description":"<p>title of map</p>","name":"title"},{"type":{"names":["node"]},"description":"<p>component added on legend header, left side</p>","name":"toggleButton"},{"type":{"names":["number"]},"description":"<p>width of legend</p>","name":"width"}],"scope":"static","longname":"components.TOC.FloatingLegend","$longname":"components.TOC.FloatingLegend"},{"comment":"/**\n * Component for rendering FeatureInfo an Accordion with current available format for get feature info\n * @memberof components.TOC.fragments.settings\n * @name FeatureInfo\n * @class\n * @prop {object} element data of the current selected node\n * @prop {array} defaultInfoFormat array of formats\n * @prop {object} formatCards object that represents the panels of accordion, e.g.: { FORMAT_NAME: { titleId: 'titleMsgId', descId: 'descMsgId', glyph: 'ext-empty', body: () => <div/> } }\n * @prop {function} onChange called when a format has been selected\n */","meta":{"filename":"FeatureInfo.jsx","lineno":18,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/TOC/fragments/settings","code":{}},"description":"<p>Component for rendering FeatureInfo an Accordion with current available format for get feature info</p>","memberof":"components.TOC.fragments.settings","name":"FeatureInfo","kind":"class","properties":[{"type":{"names":["array"]},"description":"<p>array of formats</p>","name":"defaultInfoFormat"},{"type":{"names":["object"]},"description":"<p>data of the current selected node</p>","name":"element"},{"type":{"names":["object"]},"description":"<p>object that represents the panels of accordion, e.g.: { FORMAT_NAME: { titleId: 'titleMsgId', descId: 'descMsgId', glyph: 'ext-empty', body: () =&gt; <div/> } }</p>","name":"formatCards"},{"type":{"names":["function"]},"description":"<p>called when a format has been selected</p>","name":"onChange"}],"scope":"static","longname":"components.TOC.fragments.settings.FeatureInfo","$longname":"components.TOC.fragments.settings.FeatureInfo"},{"comment":"/**\n * Component for rendering FeatureInfoEditor a modal editor to modify format template\n * @memberof components.TOC.fragments.settings\n * @name FeatureInfoEditor\n * @class\n * @prop {object} element data of the current selected node\n * @prop {bool} showEditor show/hide modal\n * @prop {funciotn} onShowEditor called when click on close buttons\n * @prop {function} onChange called when text in editor has been changed\n * @prop {bool} enableIFrameModule enable iframe in editor, default true\n */","meta":{"filename":"FeatureInfoEditor.jsx","lineno":17,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/TOC/fragments/settings","code":{}},"description":"<p>Component for rendering FeatureInfoEditor a modal editor to modify format template</p>","memberof":"components.TOC.fragments.settings","name":"FeatureInfoEditor","kind":"class","properties":[{"type":{"names":["object"]},"description":"<p>data of the current selected node</p>","name":"element"},{"type":{"names":["bool"]},"description":"<p>enable iframe in editor, default true</p>","name":"enableIFrameModule"},{"type":{"names":["function"]},"description":"<p>called when text in editor has been changed</p>","name":"onChange"},{"type":{"names":["funciotn"]},"description":"<p>called when click on close buttons</p>","name":"onShowEditor"},{"type":{"names":["bool"]},"description":"<p>show/hide modal</p>","name":"showEditor"}],"scope":"static","longname":"components.TOC.fragments.settings.FeatureInfoEditor","$longname":"components.TOC.fragments.settings.FeatureInfoEditor"},{"comment":"/**\n * Component for rendering a UI to dinamically style layers through attribute classification.\n * It can be used on layers that have a **thematic** property in their configuration.\n * A JSON editor is available to create the property on new layers (only if canEditThematic = true).\n *\n * Some parameters are fixed:\n *  - thema attribute\n *  - classification method\n *  - number of classes\n *  - border style\n *  - colors palette\n *\n * Some are configurable on a layer by layer basis:\n *  - additional parameters / filters\n *\n * An external service (a collection of functions / actions) is used to get metadata and build classification.\n *\n * The syntax for the configuration JSON depends on the service used.\n * @memberof components.TOC\n * @name ThematicLayer\n * @class\n * @prop {boolean} enableRemoveStyle, enables the remove style button (disabled by default)\n * @prop {object} layer, current selected layer the UI acts upon\n * @prop {boolean} canEditThematic the user can change the thematic base configuration (admins functionality) for the layer\n * @prop {boolean} applyEnabled enables the apply button\n * @prop {array} colors list of base color palettes the user can choose to create the style (they can be extended via\n *    layer configuration)\n * @prop {array} methods list of classification methods the user can choose to create the style\n * @prop {array} fields list of fields the user can choose to create a classification style on\n * @prop {object} fieldsLoading fields list can be externally loaded, this object tracks the loading status (loading / loaded and errors)\n * @prop {array} classification list of classes (range and color) for the current classification style\n * @prop {object} classificationLoading classes list can be externally loaded, this object tracks the loading status (loading / loaded and errors)\n * @prop {number} colorSamples number of samples to show in the color palette list\n * @prop {number} maxClasses number of classes (range + color) the user can choose for the style\n * @prop {object} initialParams object with initial/default values for the style parameters in the UI\n * @prop {object} invalidInputs current validation errors on user input, key is input and value is {error_message, params}\n * @prop {object} adminCfg current thema configuration object, contains:\n *  - open: true / false, status of the admin configuration panel\n *  - current: string version of the current configuration, as edited by the admin user\n *  - error: validation error(s), if any\n * @prop {function} onChange action called for every style parameter change\n * @prop {function} onChangeConfiguration action called for every thematic configuration change\n * @prop {function} onSwitchLayer action called when the selected layer changes\n * @prop {function} onClassify action called to update classify criterias and recalculate classification\n * @prop {function} onApplyStyle action called to apply the style to the selected layer\n * @prop {function} onDirtyStyle action called when the user changes style parameters (before applying them)\n * @prop {function} onInvalidInput action called when the user enters an invalid input\n * @prop {function} onValidInput action called when the user enters a valid input\n * @prop {function} getStyleParameters external service that returns layer additional parameters to build the thema, receiving\n *     the layer node and the current style parameters fetched from the UI\n * @prop {function} getThematicParameters returns a list of by layer parameters that are added to the UI (filters, etc.)\n * @prop {function} getMetadataParameters returns the actual values for by layer parameters to be used for styling\n * @prop {function} getColors external service that returns the actual list of color palettes (base palettes and/or by layer palettes)\n * @prop {function} hasThematicStyle external service that checks if the current layer has a thematic style applied on it\n * @prop {function} removeThematicStyle external service that removes thematic style on the current layer\n */","meta":{"filename":"ThematicLayer.jsx","lineno":28,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/TOC/fragments/settings","code":{}},"description":"<p>Component for rendering a UI to dinamically style layers through attribute classification.\nIt can be used on layers that have a <strong>thematic</strong> property in their configuration.\nA JSON editor is available to create the property on new layers (only if canEditThematic = true).</p>\n<p>Some parameters are fixed:</p>\n<ul>\n<li>thema attribute</li>\n<li>classification method</li>\n<li>number of classes</li>\n<li>border style</li>\n<li>colors palette</li>\n</ul>\n<p>Some are configurable on a layer by layer basis:</p>\n<ul>\n<li>additional parameters / filters</li>\n</ul>\n<p>An external service (a collection of functions / actions) is used to get metadata and build classification.</p>\n<p>The syntax for the configuration JSON depends on the service used.</p>","memberof":"components.TOC","name":"ThematicLayer","kind":"class","properties":[{"type":{"names":["object"]},"description":"<p>current thema configuration object, contains:</p>\n<ul>\n<li>open: true / false, status of the admin configuration panel</li>\n<li>current: string version of the current configuration, as edited by the admin user</li>\n<li>error: validation error(s), if any</li>\n</ul>","name":"adminCfg"},{"type":{"names":["boolean"]},"description":"<p>enables the apply button</p>","name":"applyEnabled"},{"type":{"names":["boolean"]},"description":"<p>the user can change the thematic base configuration (admins functionality) for the layer</p>","name":"canEditThematic"},{"type":{"names":["array"]},"description":"<p>list of classes (range and color) for the current classification style</p>","name":"classification"},{"type":{"names":["object"]},"description":"<p>classes list can be externally loaded, this object tracks the loading status (loading / loaded and errors)</p>","name":"classificationLoading"},{"type":{"names":["array"]},"description":"<p>list of base color palettes the user can choose to create the style (they can be extended via\nlayer configuration)</p>","name":"colors"},{"type":{"names":["number"]},"description":"<p>number of samples to show in the color palette list</p>","name":"colorSamples"},{"type":{"names":["boolean"]},"description":"<p>enables the remove style button (disabled by default)</p>","name":"enableRemoveStyle,"},{"type":{"names":["array"]},"description":"<p>list of fields the user can choose to create a classification style on</p>","name":"fields"},{"type":{"names":["object"]},"description":"<p>fields list can be externally loaded, this object tracks the loading status (loading / loaded and errors)</p>","name":"fieldsLoading"},{"type":{"names":["function"]},"description":"<p>external service that returns the actual list of color palettes (base palettes and/or by layer palettes)</p>","name":"getColors"},{"type":{"names":["function"]},"description":"<p>returns the actual values for by layer parameters to be used for styling</p>","name":"getMetadataParameters"},{"type":{"names":["function"]},"description":"<p>external service that returns layer additional parameters to build the thema, receiving\nthe layer node and the current style parameters fetched from the UI</p>","name":"getStyleParameters"},{"type":{"names":["function"]},"description":"<p>returns a list of by layer parameters that are added to the UI (filters, etc.)</p>","name":"getThematicParameters"},{"type":{"names":["function"]},"description":"<p>external service that checks if the current layer has a thematic style applied on it</p>","name":"hasThematicStyle"},{"type":{"names":["object"]},"description":"<p>object with initial/default values for the style parameters in the UI</p>","name":"initialParams"},{"type":{"names":["object"]},"description":"<p>current validation errors on user input, key is input and value is {error_message, params}</p>","name":"invalidInputs"},{"type":{"names":["object"]},"description":"<p>current selected layer the UI acts upon</p>","name":"layer,"},{"type":{"names":["number"]},"description":"<p>number of classes (range + color) the user can choose for the style</p>","name":"maxClasses"},{"type":{"names":["array"]},"description":"<p>list of classification methods the user can choose to create the style</p>","name":"methods"},{"type":{"names":["function"]},"description":"<p>action called to apply the style to the selected layer</p>","name":"onApplyStyle"},{"type":{"names":["function"]},"description":"<p>action called for every style parameter change</p>","name":"onChange"},{"type":{"names":["function"]},"description":"<p>action called for every thematic configuration change</p>","name":"onChangeConfiguration"},{"type":{"names":["function"]},"description":"<p>action called to update classify criterias and recalculate classification</p>","name":"onClassify"},{"type":{"names":["function"]},"description":"<p>action called when the user changes style parameters (before applying them)</p>","name":"onDirtyStyle"},{"type":{"names":["function"]},"description":"<p>action called when the user enters an invalid input</p>","name":"onInvalidInput"},{"type":{"names":["function"]},"description":"<p>action called when the selected layer changes</p>","name":"onSwitchLayer"},{"type":{"names":["function"]},"description":"<p>action called when the user enters a valid input</p>","name":"onValidInput"},{"type":{"names":["function"]},"description":"<p>external service that removes thematic style on the current layer</p>","name":"removeThematicStyle"}],"scope":"static","longname":"components.TOC.ThematicLayer","$longname":"components.TOC.ThematicLayer"},{"comment":"/**\n * Component for rendering TOC Settings as tabs inside a Dockable contanier\n * @memberof components.TOC\n * @name TOCItemsSettings\n * @class\n * @prop {boolean} dock switch between Dockable Panel and Resizable Modal, default true (DockPanel)\n * @prop {string} activeTab current active tab, should match the tab id\n * @prop {function} getTabs must return an array of object representing the tabs, eg (props) => [{ id: 'general', Component: MyGeneralComponent}]\n * @prop {string} className additional calss name\n */","meta":{"filename":"TOCItemsSettings.jsx","lineno":20,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/TOC","code":{}},"description":"<p>Component for rendering TOC Settings as tabs inside a Dockable contanier</p>","memberof":"components.TOC","name":"TOCItemsSettings","kind":"class","properties":[{"type":{"names":["string"]},"description":"<p>current active tab, should match the tab id</p>","name":"activeTab"},{"type":{"names":["string"]},"description":"<p>additional calss name</p>","name":"className"},{"type":{"names":["boolean"]},"description":"<p>switch between Dockable Panel and Resizable Modal, default true (DockPanel)</p>","name":"dock"},{"type":{"names":["function"]},"description":"<p>must return an array of object representing the tabs, eg (props) =&gt; [{ id: 'general', Component: MyGeneralComponent}]</p>","name":"getTabs"}],"scope":"static","longname":"components.TOC.TOCItemsSettings","$longname":"components.TOC.TOCItemsSettings"},{"comment":"/**\n * Custom react-redux connect function that can override state property with plugin config.\n * The plugin config properties are taken from the **pluginCfg** property.\n * @param {function} [mapStateToProps] state to properties selector\n * @param {function} [mapDispatchToProps] dispatch-able actions selector\n * @param {function} [mergeProps] merge function, if not defined, the internal override applies\n * @param {object} [options] connect options (look at react-redux docs for details)\n * @returns {function} function to be applied to the dumb object to connect it to state / dispatchers\n */","meta":{"range":[20582,20778],"filename":"PluginsUtils.js","lineno":504,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100063545","name":"exports.connect","type":"VariableDeclaration"}},"description":"<p>Custom react-redux connect function that can override state property with plugin config.\nThe plugin config properties are taken from the <strong>pluginCfg</strong> property.</p>","params":[{"type":{"names":["function"]},"optional":true,"description":"<p>state to properties selector</p>","name":"mapStateToProps"},{"type":{"names":["function"]},"optional":true,"description":"<p>dispatch-able actions selector</p>","name":"mapDispatchToProps"},{"type":{"names":["function"]},"optional":true,"description":"<p>merge function, if not defined, the internal override applies</p>","name":"mergeProps"},{"type":{"names":["object"]},"optional":true,"description":"<p>connect options (look at react-redux docs for details)</p>","name":"options"}],"returns":[{"type":{"names":["function"]},"description":"<p>function to be applied to the dumb object to connect it to state / dispatchers</p>"}],"name":"connect","longname":"connect","kind":"constant","scope":"global","$longname":"connect"},{"comment":"/**\n * Convert degree angle to radian\n * @param deg {number | String} a degree angle\n * @returns {number} the converted radian angle\n */","meta":{"range":[38645,38788],"filename":"CoordinatesUtils.js","lineno":1107,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100060639","name":"exports.convertDegreesToRadian","type":"VariableDeclaration"}},"description":"<p>Convert degree angle to radian</p>","params":[{"type":{"names":["number","String"]},"description":"<p>a degree angle</p>","name":"deg"}],"returns":[{"type":{"names":["number"]},"description":"<p>the converted radian angle</p>"}],"name":"convertDegreesToRadian","longname":"convertDegreesToRadian","kind":"constant","scope":"global","$longname":"convertDegreesToRadian"},{"comment":"/**\n * Convert radian angle to degrees\n * @param rad {number | String} a radian angle value\n * @returns {number} the converted degree angle\n */","meta":{"range":[38363,38506],"filename":"CoordinatesUtils.js","lineno":1097,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100060614","name":"exports.convertRadianToDegrees","type":"VariableDeclaration"}},"description":"<p>Convert radian angle to degrees</p>","params":[{"type":{"names":["number","String"]},"description":"<p>a radian angle value</p>","name":"rad"}],"returns":[{"type":{"names":["number"]},"description":"<p>the converted degree angle</p>"}],"name":"convertRadianToDegrees","longname":"convertRadianToDegrees","kind":"constant","scope":"global","$longname":"convertRadianToDegrees"},{"comment":"/**\n * Returns a bounds object.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @return {Object} Extent.\n */","meta":{"range":[10255,10376],"filename":"CoordinatesUtils.js","lineno":316,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100056636","name":"exports.createBBox","type":"VariableDeclaration"}},"description":"<p>Returns a bounds object.</p>","params":[{"type":{"names":["number"]},"description":"<p>Minimum X.</p>","name":"minX"},{"type":{"names":["number"]},"description":"<p>Minimum Y.</p>","name":"minY"},{"type":{"names":["number"]},"description":"<p>Maximum X.</p>","name":"maxX"},{"type":{"names":["number"]},"description":"<p>Maximum Y.</p>","name":"maxY"}],"returns":[{"type":{"names":["Object"]},"description":"<p>Extent.</p>"}],"name":"createBBox","longname":"createBBox","kind":"constant","scope":"global","$longname":"createBBox"},{"comment":"/**\n * Use this function to export a plugin from a module.\n *\n * @param {string} name name of the plugin (without the Plugin postfix)\n * @param {object} config configuration object, with the following (optional) properties:\n * @param {object|function} config.component: ReactJS component that implements the plugin functionalities, can be null if the plugin supports lazy loading\n * @param {object} config.options: generic plugins configuration options (e.g. disablePluginIf)\n * @param {object} config.containers: object with supported containers (key=container name, value=container config)\n * @param {object} config.reducers: reducers the plugin will need\n * @param {object} config.epics: epics the plugin will need to work\n * @param {boolean} config.lazy: true if the plugin implements on-demand loading,\n * @param {function} config.enabler: function used in lazy mode to decide when plugin needs to be loaded (receives redux state as the only param)\n * @param {promise} config.loader: promise that will return the loaded implementation\n *\n * @example statically loaded plugin\n * createPlugin('My', {\n *  component: MyPluginComponent,\n *  options: {...},\n *  containers: {\n *      Toolbar: {\n *          priority: 1,\n *          tool: true,\n *          ...\n *      }\n *  },\n *  reducers: {my: require('...')},\n *  epics: {myEpic: require('...')}\n * });\n *\n * @example lazy loaded plugin\n * createPlugin('My', {\n *  enabler: (state) => state.my.enabled || false,\n *  loader: () => new Promise((resolve) => {\n *    require.ensure(['...'], () => {\n *        const MyComponent = require('...');\n *        ...\n *        const MyPlugin = connect(...)(MyComponent);\n *        resolve(MyPlugin);\n *    });\n *  },\n *  options: {...},\n *  containers: {\n *      Toolbar: {\n *          priority: 1,\n *          tool: true,\n *          ...\n *      }\n *  },\n *  reducers: {my: require('...')},\n *  epics: {myEpic: require('...')}\n * });\n */","meta":{"range":[22710,23365],"filename":"PluginsUtils.js","lineno":560,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100063564","name":"exports.createPlugin","type":"VariableDeclaration"}},"description":"<p>Use this function to export a plugin from a module.</p>","params":[{"type":{"names":["string"]},"description":"<p>name of the plugin (without the Plugin postfix)</p>","name":"name"},{"type":{"names":["object"]},"description":"<p>configuration object, with the following (optional) properties:</p>","name":"config"},{"type":{"names":["object","function"]},"description":"<p>ReactJS component that implements the plugin functionalities, can be null if the plugin supports lazy loading</p>","name":"config.component:"},{"type":{"names":["object"]},"description":"<p>generic plugins configuration options (e.g. disablePluginIf)</p>","name":"config.options:"},{"type":{"names":["object"]},"description":"<p>object with supported containers (key=container name, value=container config)</p>","name":"config.containers:"},{"type":{"names":["object"]},"description":"<p>reducers the plugin will need</p>","name":"config.reducers:"},{"type":{"names":["object"]},"description":"<p>epics the plugin will need to work</p>","name":"config.epics:"},{"type":{"names":["boolean"]},"description":"<p>true if the plugin implements on-demand loading,</p>","name":"config.lazy:"},{"type":{"names":["function"]},"description":"<p>function used in lazy mode to decide when plugin needs to be loaded (receives redux state as the only param)</p>","name":"config.enabler:"},{"type":{"names":["promise"]},"description":"<p>promise that will return the loaded implementation</p>","name":"config.loader:"}],"examples":["statically loaded plugin\ncreatePlugin('My', {\n component: MyPluginComponent,\n options: {...},\n containers: {\n     Toolbar: {\n         priority: 1,\n         tool: true,\n         ...\n     }\n },\n reducers: {my: require('...')},\n epics: {myEpic: require('...')}\n});","lazy loaded plugin\ncreatePlugin('My', {\n enabler: (state) => state.my.enabled || false,\n loader: () => new Promise((resolve) => {\n   require.ensure(['...'], () => {\n       const MyComponent = require('...');\n       ...\n       const MyPlugin = connect(...)(MyComponent);\n       resolve(MyPlugin);\n   });\n },\n options: {...},\n containers: {\n     Toolbar: {\n         priority: 1,\n         tool: true,\n         ...\n     }\n },\n reducers: {my: require('...')},\n epics: {myEpic: require('...')}\n});"],"name":"createPlugin","longname":"createPlugin","kind":"constant","scope":"global","$longname":"createPlugin"},{"comment":"/**\n     * Deactivate map sync when featuregrid closes if it was active\n     */","meta":{"range":[48048,48313],"filename":"featuregrid.js","lineno":1100,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100046555","name":"exports.deactivateSyncWmsFilterOnFeatureGridClose","type":"VariableDeclaration"}},"description":"<p>Deactivate map sync when featuregrid closes if it was active</p>","name":"deactivateSyncWmsFilterOnFeatureGridClose","longname":"deactivateSyncWmsFilterOnFeatureGridClose","kind":"constant","scope":"global","$longname":"deactivateSyncWmsFilterOnFeatureGridClose"},{"comment":"","meta":{"range":[1717,3235],"filename":"DropDownEditor.jsx","lineno":51,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/featuregrid/editors","code":{"id":"astnode100006583","name":"DropDownEditor","type":"MethodDefinition","paramnames":["props"]},"vars":{"":null}},"undocumented":true,"name":"DropDownEditor","longname":"DropDownEditor","kind":"class","scope":"global","params":[],"$longname":"DropDownEditor"},{"comment":"/**\n * redux-observable epics\n * @see {@link https://redux-observable.js.org/docs/basics/Epics.html|the redux-observable documentation} for details\n * @name epics\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>redux-observable epics</p>","see":["{@link https://redux-observable.js.org/docs/basics/Epics.html|the redux-observable documentation} for details"],"name":"epics","longname":"epics","kind":"member","scope":"global","$longname":"epics","$members":[{"comment":"/**\n * Epics for update old map\n * @name epics.automapupdate\n * @type {Object}\n */","meta":{"filename":"automapupdate.js","lineno":69,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epics for update old map</p>","name":"automapupdate","type":{"names":["Object"]},"memberof":"epics","longname":"epics.automapupdate","scope":"static","kind":"member","$longname":"epics.automapupdate"},{"comment":"/**\n    * Epics for CATALOG\n    * @name epics.catalog\n    * @type {Object}\n    */","meta":{"filename":"catalog.js","lineno":89,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epics for CATALOG</p>","name":"catalog","type":{"names":["Object"]},"memberof":"epics","longname":"epics.catalog","scope":"static","kind":"member","$longname":"epics.catalog","$members":[{"comment":"/**\n     * Fetch all supported formats of a WMS service configured (infoFormats and imageFormats)\n     * Dispatches an action that sets the supported formats of the service.\n     * @param {Observable} action$ the actions triggered\n     * @param {object} getState store object\n     * @memberof epics.catalog\n     * @return {external:Observable}\n     */","meta":{"range":[24515,25536],"filename":"catalog.js","lineno":474,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100041183","name":"getSupportedFormatsEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Fetch all supported formats of a WMS service configured (infoFormats and imageFormats)\nDispatches an action that sets the supported formats of the service.</p>","params":[{"type":{"names":["Observable"]},"description":"<p>the actions triggered</p>","name":"action$"},{"type":{"names":["object"]},"description":"<p>store object</p>","name":"getState"}],"memberof":"epics.catalog","returns":[{"type":{"names":["external:Observable"]}}],"name":"getSupportedFormatsEpic","longname":"epics.catalog.getSupportedFormatsEpic","kind":"function","scope":"static","$longname":"epics.catalog.getSupportedFormatsEpic"},{"comment":"/**\n     * Gets every `ADD_SERVICE` event.\n     * It performs a head request in order to check if the server is up. (a better validation should be handled when research is performed).\n     * If it is adding a new service and the title is a duplicate, it triggers a notification. Other notification are triggered if the title is empty or the head request fails.\n     * It dispatches an action that actually add or update a service for the catalog.\n     * @param {Observable} action$ the actions triggered\n     * @memberof epics.catalog\n     * @return {external:Observable}\n    */","meta":{"range":[13084,14878],"filename":"catalog.js","lineno":268,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100040161","name":"newCatalogServiceAdded","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Gets every <code>ADD_SERVICE</code> event.\nIt performs a head request in order to check if the server is up. (a better validation should be handled when research is performed).\nIf it is adding a new service and the title is a duplicate, it triggers a notification. Other notification are triggered if the title is empty or the head request fails.\nIt dispatches an action that actually add or update a service for the catalog.</p>","params":[{"type":{"names":["Observable"]},"description":"<p>the actions triggered</p>","name":"action$"}],"memberof":"epics.catalog","returns":[{"type":{"names":["external:Observable"]}}],"name":"newCatalogServiceAdded","longname":"epics.catalog.newCatalogServiceAdded","kind":"function","scope":"static","$longname":"epics.catalog.newCatalogServiceAdded"}]},{"comment":"/**\n * Epics for cookies policy informations\n * @name epics.cookies\n * @type {Object}\n */","meta":{"filename":"cookies.js","lineno":51,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epics for cookies policy informations</p>","name":"cookies","type":{"names":["Object"]},"memberof":"epics","longname":"epics.cookies","scope":"static","kind":"member","$longname":"epics.cookies"},{"comment":"/**\n * Epìcs for feature grid\n * @memberof epics\n * @name featuregrid\n */","meta":{"filename":"featuregrid.js","lineno":324,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epìcs for feature grid</p>","memberof":"epics","name":"featuregrid","scope":"static","longname":"epics.featuregrid","kind":"member","$longname":"epics.featuregrid","$members":[{"comment":"/**\n * Closes the feature grid when the drawer menu button has been toggled\n * @memberof epics.featuregrid\n */","meta":{"range":[40173,40603],"filename":"featuregrid.js","lineno":946,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045800","name":"exports.autoCloseFeatureGridEpicOnDrowerOpen","type":"VariableDeclaration"}},"description":"<p>Closes the feature grid when the drawer menu button has been toggled</p>","memberof":"epics.featuregrid","name":"exports.autoCloseFeatureGridEpicOnDrowerOpen","longname":"epics.featuregrid.exports.autoCloseFeatureGridEpicOnDrowerOpen","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.autoCloseFeatureGridEpicOnDrowerOpen"},{"comment":"/**\n * Manage delete geometry action flow\n * @memberof epics.featuregrid\n */","meta":{"range":[37314,37627],"filename":"featuregrid.js","lineno":875,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045498","name":"exports.deleteGeometryFeature","type":"VariableDeclaration"}},"description":"<p>Manage delete geometry action flow</p>","memberof":"epics.featuregrid","name":"exports.deleteGeometryFeature","longname":"epics.featuregrid.exports.deleteGeometryFeature","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.deleteGeometryFeature"},{"comment":"/**\n * trigger WFS transaction stream on DELETE_SELECTED_FEATURES action\n * @memberof epics.featuregrid\n */","meta":{"range":[31187,32080],"filename":"featuregrid.js","lineno":733,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100044812","name":"exports.deleteSelectedFeatureGridFeatures","type":"VariableDeclaration"}},"description":"<p>trigger WFS transaction stream on DELETE_SELECTED_FEATURES action</p>","memberof":"epics.featuregrid","name":"exports.deleteSelectedFeatureGridFeatures","longname":"epics.featuregrid.exports.deleteSelectedFeatureGridFeatures","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.deleteSelectedFeatureGridFeatures"},{"comment":"/**\n * Enables the Geometry filter when entering edit mode in feature grid.\n * No filter value should have been set otherwise nothing is enabled.\n * @memberof epics.featuregrid\n */","meta":{"range":[18692,19278],"filename":"featuregrid.js","lineno":482,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100043320","name":"exports.enableGeometryFilterOnEditMode","type":"VariableDeclaration"}},"description":"<p>Enables the Geometry filter when entering edit mode in feature grid.\nNo filter value should have been set otherwise nothing is enabled.</p>","memberof":"epics.featuregrid","name":"exports.enableGeometryFilterOnEditMode","longname":"epics.featuregrid.exports.enableGeometryFilterOnEditMode","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.enableGeometryFilterOnEditMode"},{"comment":"/**\n * perform paginated query on page change\n * @memberof epics.featuregrid\n */","meta":{"range":[27465,28527],"filename":"featuregrid.js","lineno":650,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100044450","name":"exports.featureGridChangePage","type":"VariableDeclaration"}},"description":"<p>perform paginated query on page change</p>","memberof":"epics.featuregrid","name":"exports.featureGridChangePage","longname":"epics.featuregrid.exports.featureGridChangePage","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.featureGridChangePage"},{"comment":"/**\n * Intercepts layer selection to set it's id in the status and retrieve it later\n * @memberof epics.featuregrid\n */","meta":{"range":[11460,11633],"filename":"featuregrid.js","lineno":346,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100042759","name":"exports.featureGridLayerSelectionInitialization","type":"VariableDeclaration"}},"description":"<p>Intercepts layer selection to set it's id in the status and retrieve it later</p>","memberof":"epics.featuregrid","name":"exports.featureGridLayerSelectionInitialization","longname":"epics.featuregrid.exports.featureGridLayerSelectionInitialization","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.featureGridLayerSelectionInitialization"},{"comment":"/**\n * Reload the page on save success.\n * NOTE: The page is in the action.\n * ( e.g. for delete the page may be reset to 0)\n * @memberof epics.featuregrid\n */","meta":{"range":[28688,29615],"filename":"featuregrid.js","lineno":675,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100044578","name":"exports.featureGridReloadPageOnSaveSuccess","type":"VariableDeclaration"}},"description":"<p>Reload the page on save success.\nNOTE: The page is in the action.\n( e.g. for delete the page may be reset to 0)</p>","memberof":"epics.featuregrid","name":"exports.featureGridReloadPageOnSaveSuccess","longname":"epics.featuregrid.exports.featureGridReloadPageOnSaveSuccess","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.featureGridReloadPageOnSaveSuccess"},{"comment":"/**\n * Create sorted queries on sort action\n * With virtualScroll active reset to page 0 but the grid will reload\n * to the current index\n * @memberof epics.featuregrid\n */","meta":{"range":[12199,12999],"filename":"featuregrid.js","lineno":363,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100042839","name":"exports.featureGridSort","type":"VariableDeclaration"}},"description":"<p>Create sorted queries on sort action\nWith virtualScroll active reset to page 0 but the grid will reload\nto the current index</p>","memberof":"epics.featuregrid","name":"exports.featureGridSort","longname":"epics.featuregrid.exports.featureGridSort","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.featureGridSort"},{"comment":"/**\n * Intercepts query creation to perform the real query, setting page to 0\n * @memberof epics.featuregrid\n */","meta":{"range":[11747,12025],"filename":"featuregrid.js","lineno":353,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100042786","name":"exports.featureGridStartupQuery","type":"VariableDeclaration"}},"description":"<p>Intercepts query creation to perform the real query, setting page to 0</p>","memberof":"epics.featuregrid","name":"exports.featureGridStartupQuery","longname":"epics.featuregrid.exports.featureGridStartupQuery","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.featureGridStartupQuery"},{"comment":"/**\n * Performs the query when the geometry filter is updated.\n * @memberof epics.featuregrid\n */","meta":{"range":[13098,17621],"filename":"featuregrid.js","lineno":386,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100042939","name":"exports.featureGridUpdateGeometryFilter","type":"VariableDeclaration"}},"description":"<p>Performs the query when the geometry filter is updated.</p>","memberof":"epics.featuregrid","name":"exports.featureGridUpdateGeometryFilter","longname":"epics.featuregrid.exports.featureGridUpdateGeometryFilter","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.featureGridUpdateGeometryFilter"},{"comment":"/**\n * Performs the query when the text filters are updated\n * @memberof epics.featuregrid\n */","meta":{"range":[18264,18510],"filename":"featuregrid.js","lineno":472,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100043279","name":"exports.featureGridUpdateTextFilters","type":"VariableDeclaration"}},"description":"<p>Performs the query when the text filters are updated</p>","memberof":"epics.featuregrid","name":"exports.featureGridUpdateTextFilters","longname":"epics.featuregrid.exports.featureGridUpdateTextFilters","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.featureGridUpdateTextFilters"},{"comment":"/**\n * handle drawing actions on START_DRAWING_FEATURE action\n * @memberof epics.featuregrid\n */","meta":{"range":[33208,34327],"filename":"featuregrid.js","lineno":780,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045026","name":"exports.handleDrawFeature","type":"VariableDeclaration"}},"description":"<p>handle drawing actions on START_DRAWING_FEATURE action</p>","memberof":"epics.featuregrid","name":"exports.handleDrawFeature","longname":"epics.featuregrid.exports.handleDrawFeature","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.handleDrawFeature"},{"comment":"/**\n * Enable and manage editing draw support\n * @memberof epics.featuregrid\n */","meta":{"range":[32162,33110],"filename":"featuregrid.js","lineno":757,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100044905","name":"exports.handleEditFeature","type":"VariableDeclaration"}},"description":"<p>Enable and manage editing draw support</p>","memberof":"epics.featuregrid","name":"exports.handleEditFeature","longname":"epics.featuregrid.exports.handleEditFeature","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.handleEditFeature"},{"comment":"/**\n * intercept geometry changed events in draw support to update current\n * modified geometry in featuregrid\n * @memberof epics.featuregrid\n */","meta":{"range":[35939,37236],"filename":"featuregrid.js","lineno":848,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045333","name":"exports.onFeatureGridGeometryEditing","type":"VariableDeclaration"}},"description":"<p>intercept geometry changed events in draw support to update current\nmodified geometry in featuregrid</p>","memberof":"epics.featuregrid","name":"exports.onFeatureGridGeometryEditing","longname":"epics.featuregrid.exports.onFeatureGridGeometryEditing","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.onFeatureGridGeometryEditing"},{"comment":"/**\n * control highlight support on view mode.\n * @memberof epics.featuregrid\n */","meta":{"range":[38477,39257],"filename":"featuregrid.js","lineno":905,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045624","name":"exports.setHighlightFeaturesPath","type":"VariableDeclaration"}},"description":"<p>control highlight support on view mode.</p>","memberof":"epics.featuregrid","name":"exports.setHighlightFeaturesPath","longname":"epics.featuregrid.exports.setHighlightFeaturesPath","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.setHighlightFeaturesPath"},{"comment":"/**\n * triggers draw support events on selection changes.\n * @memberof epics.featuregrid\n */","meta":{"range":[37721,38155],"filename":"featuregrid.js","lineno":887,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045537","name":"exports.triggerDrawSupportOnSelectionChange","type":"VariableDeclaration"}},"description":"<p>triggers draw support events on selection changes.</p>","memberof":"epics.featuregrid","name":"exports.triggerDrawSupportOnSelectionChange","longname":"epics.featuregrid.exports.triggerDrawSupportOnSelectionChange","kind":"constant","scope":"static","$longname":"epics.featuregrid.exports.triggerDrawSupportOnSelectionChange"}]},{"comment":"/**\n * Epics for feedbackMask functionality\n * @name epics.feedbackMask\n * @type {Object}\n */","meta":{"filename":"feedbackMask.js","lineno":228,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epics for feedbackMask functionality</p>","name":"feedbackMask","type":{"names":["Object"]},"memberof":"epics","longname":"epics.feedbackMask","scope":"static","kind":"member","$longname":"epics.feedbackMask"},{"comment":"/**\n * Epics for fullscreen functionality\n * @name epics.fullscreen\n * @type {Object}\n */","meta":{"filename":"fullscreen.js","lineno":55,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epics for fullscreen functionality</p>","name":"fullscreen","type":{"names":["Object"]},"memberof":"epics","longname":"epics.fullscreen","scope":"static","kind":"member","$longname":"epics.fullscreen"},{"comment":"/**\n * Epics for 3d switcher functionality\n * @name epics.globeswitcher\n * @type {Object}\n */","meta":{"filename":"globeswitcher.js","lineno":30,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epics for 3d switcher functionality</p>","name":"globeswitcher","type":{"names":["Object"]},"memberof":"epics","longname":"epics.globeswitcher","scope":"static","kind":"member","$longname":"epics.globeswitcher"},{"comment":"/**\n * Epìcs for feature grid\n * @memberof epics\n * @name mapLayout\n */","meta":{"filename":"maplayout.js","lineno":30,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epìcs for feature grid</p>","memberof":"epics","name":"mapLayout","scope":"static","longname":"epics.mapLayout","kind":"member","$longname":"epics.mapLayout","$members":[{"comment":"/**\n * Capture that cause layout change to update the proper object.\n * Configures a map layout based on state of panels.\n * @param {external:Observable} action$ manages `MAP_CONFIG_LOADED`, `SIZE_CHANGE`, `CLOSE_FEATURE_GRID`, `OPEN_FEATURE_GRID`, `CLOSE_IDENTIFY`, `NO_QUERYABLE_LAYERS`, `LOAD_FEATURE_INFO`, `TOGGLE_MAPINFO_STATE`, `TOGGLE_CONTROL`, `SET_CONTROL_PROPERTY`.\n * @param store\n * @memberof epics.mapLayout\n * @return {external:Observable} emitting {@link #actions.map.updateMapLayout} action\n */","meta":{"range":[1964,7025],"filename":"maplayout.js","lineno":51,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100048641","name":"exports.updateMapLayoutEpic","type":"VariableDeclaration"}},"description":"<p>Capture that cause layout change to update the proper object.\nConfigures a map layout based on state of panels.</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>MAP_CONFIG_LOADED</code>, <code>SIZE_CHANGE</code>, <code>CLOSE_FEATURE_GRID</code>, <code>OPEN_FEATURE_GRID</code>, <code>CLOSE_IDENTIFY</code>, <code>NO_QUERYABLE_LAYERS</code>, <code>LOAD_FEATURE_INFO</code>, <code>TOGGLE_MAPINFO_STATE</code>, <code>TOGGLE_CONTROL</code>, <code>SET_CONTROL_PROPERTY</code>.</p>","name":"action$"},{"name":"store"}],"memberof":"epics.mapLayout","returns":[{"type":{"names":["external:Observable"]},"description":"<p>emitting {@link #actions.map.updateMapLayout} action</p>"}],"name":"exports.updateMapLayoutEpic","longname":"epics.mapLayout.exports.updateMapLayoutEpic","kind":"constant","scope":"static","$longname":"epics.mapLayout.exports.updateMapLayoutEpic"}]},{"comment":"/**\n * Epics for maptype switch functionalities\n * @name epics.maptype\n * @type {Object}\n */","meta":{"filename":"maptype.js","lineno":79,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epics for maptype switch functionalities</p>","name":"maptype","type":{"names":["Object"]},"memberof":"epics","longname":"epics.maptype","scope":"static","kind":"member","$longname":"epics.maptype"},{"comment":"/**\n * Epics for notifications\n * @name epics.notifications\n * @type {Object}\n */","meta":{"filename":"notifications.js","lineno":23,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epics for notifications</p>","name":"notifications","type":{"names":["Object"]},"memberof":"epics","longname":"epics.notifications","scope":"static","kind":"member","$longname":"epics.notifications"},{"comment":"/**\n * Epics for Tutorial\n * @name epics.tutorial\n * @type {Object}\n */","meta":{"filename":"tutorial.js","lineno":163,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epics for Tutorial</p>","name":"tutorial","type":{"names":["Object"]},"memberof":"epics","longname":"epics.tutorial","scope":"static","kind":"member","$longname":"epics.tutorial"},{"comment":"/**\n  * Epics for WFS query requests\n  * @name epics.wfsquery\n  * @type {Object}\n  */","meta":{"filename":"wfsquery.js","lineno":251,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"description":"<p>Epics for WFS query requests</p>","name":"wfsquery","type":{"names":["Object"]},"memberof":"epics","longname":"epics.wfsquery","scope":"static","kind":"member","$longname":"epics.wfsquery"}]},{"comment":"/**\n * When map has been loaded, it sends a notification if the version is less than 2 and users has write permission.\n * @param {external:Observable} action$ manages `MAP_CONFIG_LOADED` and `MAP_INFO_LOADED`.\n * @memberof epics.automapupdate\n * @return {external:Observable}\n */","meta":{"range":[951,3627],"filename":"automapupdate.js","lineno":25,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100038784","name":"exports.manageAutoMapUpdate","type":"VariableDeclaration"}},"description":"<p>When map has been loaded, it sends a notification if the version is less than 2 and users has write permission.</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>MAP_CONFIG_LOADED</code> and <code>MAP_INFO_LOADED</code>.</p>","name":"action$"}],"memberof":"epics.automapupdate","returns":[{"type":{"names":["external:Observable"]}}],"name":"exports.manageAutoMapUpdate","longname":"epics.automapupdate.exports.manageAutoMapUpdate","kind":"constant","scope":"static","$longname":"epics.automapupdate.exports.manageAutoMapUpdate"},{"comment":"/**\n * Show the cookie policy notification\n * @param  {external:Observable} action$ triggers on \"LOCATION_CHANGE\"\n * @param  {object} store   the store, to get current notifications\n * @memberof epics.cookies\n * @return {external:Observable} the steam of actions to trigger to display the noitification.\n */","meta":{"range":[842,1262],"filename":"cookies.js","lineno":25,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100041378","name":"exports.cookiePolicyChecker","type":"VariableDeclaration"}},"description":"<p>Show the cookie policy notification</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>triggers on &quot;LOCATION_CHANGE&quot;</p>","name":"action$"},{"type":{"names":["object"]},"description":"<p>the store, to get current notifications</p>","name":"store"}],"memberof":"epics.cookies","returns":[{"type":{"names":["external:Observable"]},"description":"<p>the steam of actions to trigger to display the noitification.</p>"}],"name":"exports.cookiePolicyChecker","longname":"epics.cookies.exports.cookiePolicyChecker","kind":"constant","scope":"static","$longname":"epics.cookies.exports.cookiePolicyChecker"},{"comment":"/**\n * Detect if the page has changed, if so it will stop loading and disable feedbackMask state.\n * It needed to stop nested stream of updateDashboardVisibility and updateMapVisibility\n * @param {Observable} action$ stream of actions. Manages `LOCATION_CHANGE`\n * @memberof epics.feedbackMask\n * @return {Observable}\n */","meta":{"range":[8426,9172],"filename":"feedbackMask.js","lineno":179,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100047906","name":"exports.detectNewPage","type":"VariableDeclaration"}},"description":"<p>Detect if the page has changed, if so it will stop loading and disable feedbackMask state.\nIt needed to stop nested stream of updateDashboardVisibility and updateMapVisibility</p>","params":[{"type":{"names":["Observable"]},"description":"<p>stream of actions. Manages <code>LOCATION_CHANGE</code></p>","name":"action$"}],"memberof":"epics.feedbackMask","returns":[{"type":{"names":["Observable"]}}],"name":"exports.detectNewPage","longname":"epics.feedbackMask.exports.detectNewPage","kind":"constant","scope":"static","$longname":"epics.feedbackMask.exports.detectNewPage"},{"comment":"/**\n * Enabled/disabled mask based on context load feedback in context creator, in case of error enable feedbackMask.\n * @param {Observable} action$ stream of actions. Manages `LOAD_CONTEXT, `LOAD_FINISHED`, `CONTEXT_LOAD_ERROR`, `LOGIN_SUCCESS`, `LOGOUT`, `LOCATION_CHANGE`\n * @memberof epics.feedbackMask\n * @return {Observable}\n */","meta":{"range":[7397,8102],"filename":"feedbackMask.js","lineno":158,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100047838","name":"exports.updateContextCreatorFeedbackMaskVisibility","type":"VariableDeclaration"}},"description":"<p>Enabled/disabled mask based on context load feedback in context creator, in case of error enable feedbackMask.</p>","params":[{"type":{"names":["Observable"]},"description":"<p>stream of actions. Manages <code>LOAD_CONTEXT, </code>LOAD_FINISHED<code>, </code>CONTEXT_LOAD_ERROR<code>, </code>LOGIN_SUCCESS<code>, </code>LOGOUT<code>, </code>LOCATION_CHANGE`</p>","name":"action$"}],"memberof":"epics.feedbackMask","returns":[{"type":{"names":["Observable"]}}],"name":"exports.updateContextCreatorFeedbackMaskVisibility","longname":"epics.feedbackMask.exports.updateContextCreatorFeedbackMaskVisibility","kind":"constant","scope":"static","$longname":"epics.feedbackMask.exports.updateContextCreatorFeedbackMaskVisibility"},{"comment":"/**\n * Enabled/disabled mask based on context load feedback, in case of error enable feedbackMask.\n * @param {Observable} action$ stream of actions. Manages `LOAD_CONTEXT, `LOAD_FINISHED`, `CONTEXT_LOAD_ERROR`, `MAP_CONFIG_LOAD_ERROR`, `MAP_INFO_LOAD_ERROR`, `LOGIN_SUCCESS`, `LOGOUT`, `LOCATION_CHANGE`\n * @memberof epics.feedbackMask\n * @return {Observable}\n */","meta":{"range":[6242,7060],"filename":"feedbackMask.js","lineno":137,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100047759","name":"exports.updateContextFeedbackMaskVisibility","type":"VariableDeclaration"}},"description":"<p>Enabled/disabled mask based on context load feedback, in case of error enable feedbackMask.</p>","params":[{"type":{"names":["Observable"]},"description":"<p>stream of actions. Manages <code>LOAD_CONTEXT, </code>LOAD_FINISHED<code>, </code>CONTEXT_LOAD_ERROR<code>, </code>MAP_CONFIG_LOAD_ERROR<code>, </code>MAP_INFO_LOAD_ERROR<code>, </code>LOGIN_SUCCESS<code>, </code>LOGOUT<code>, </code>LOCATION_CHANGE`</p>","name":"action$"}],"memberof":"epics.feedbackMask","returns":[{"type":{"names":["Observable"]}}],"name":"exports.updateContextFeedbackMaskVisibility","longname":"epics.feedbackMask.exports.updateContextFeedbackMaskVisibility","kind":"constant","scope":"static","$longname":"epics.feedbackMask.exports.updateContextFeedbackMaskVisibility"},{"comment":"/**\n * Enabled/disabled mask based on dashboard load feedback, in case of error enable feedbackMask.\n * @param {Observable} action$ stream of actions. Manages `LOAD_DASHBOARD`, `DASHBOARD_LOADED`, `DASHBOARD_LOAD_ERROR`, `LOGIN_SUCCESS`, `LOGOUT`, `LOCATION_CHANGE`\n * @memberof epics.feedbackMask\n * @return {Observable}\n */","meta":{"range":[4095,4885],"filename":"feedbackMask.js","lineno":95,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100047605","name":"exports.updateDashboardVisibility","type":"VariableDeclaration"}},"description":"<p>Enabled/disabled mask based on dashboard load feedback, in case of error enable feedbackMask.</p>","params":[{"type":{"names":["Observable"]},"description":"<p>stream of actions. Manages <code>LOAD_DASHBOARD</code>, <code>DASHBOARD_LOADED</code>, <code>DASHBOARD_LOAD_ERROR</code>, <code>LOGIN_SUCCESS</code>, <code>LOGOUT</code>, <code>LOCATION_CHANGE</code></p>","name":"action$"}],"memberof":"epics.feedbackMask","returns":[{"type":{"names":["Observable"]}}],"name":"exports.updateDashboardVisibility","longname":"epics.feedbackMask.exports.updateDashboardVisibility","kind":"constant","scope":"static","$longname":"epics.feedbackMask.exports.updateDashboardVisibility"},{"comment":"/**\n * Enabled/disabled mask based on geostory load feedback, in case of error enable feedbackMask.\n * @param {Observable} action$ stream of actions. Manages `LOAD_GEOSTORY, `GEOSTORY_LOADED`, `GEOSTORY_LOAD_ERROR`, `LOGIN_SUCCESS`, `LOGOUT`, `LOCATION_CHANGE`\n * @memberof epics.feedbackMask\n * @return {Observable}\n */","meta":{"range":[5207,5876],"filename":"feedbackMask.js","lineno":117,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100047689","name":"exports.updateGeoStoryFeedbackMaskVisibility","type":"VariableDeclaration"}},"description":"<p>Enabled/disabled mask based on geostory load feedback, in case of error enable feedbackMask.</p>","params":[{"type":{"names":["Observable"]},"description":"<p>stream of actions. Manages <code>LOAD_GEOSTORY, </code>GEOSTORY_LOADED<code>, </code>GEOSTORY_LOAD_ERROR<code>, </code>LOGIN_SUCCESS<code>, </code>LOGOUT<code>, </code>LOCATION_CHANGE`</p>","name":"action$"}],"memberof":"epics.feedbackMask","returns":[{"type":{"names":["Observable"]}}],"name":"exports.updateGeoStoryFeedbackMaskVisibility","longname":"epics.feedbackMask.exports.updateGeoStoryFeedbackMaskVisibility","kind":"constant","scope":"static","$longname":"epics.feedbackMask.exports.updateGeoStoryFeedbackMaskVisibility"},{"comment":"/**\n * Enabled/disabled mask based on map load feedback, in case of error enable feedbackMask.\n * @param {Observable} action$ stream of actions. Manages `INIT_MAP`, `MAP_CONFIG_LOADED`, `MAP_CONFIG_LOAD_ERROR`, `LOGIN_SUCCESS`, `LOGOUT`\n * @memberof epics.feedbackMask\n * @return {Observable}\n */","meta":{"range":[2853,3767],"filename":"feedbackMask.js","lineno":72,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100047495","name":"exports.updateMapVisibility","type":"VariableDeclaration"}},"description":"<p>Enabled/disabled mask based on map load feedback, in case of error enable feedbackMask.</p>","params":[{"type":{"names":["Observable"]},"description":"<p>stream of actions. Manages <code>INIT_MAP</code>, <code>MAP_CONFIG_LOADED</code>, <code>MAP_CONFIG_LOAD_ERROR</code>, <code>LOGIN_SUCCESS</code>, <code>LOGOUT</code></p>","name":"action$"}],"memberof":"epics.feedbackMask","returns":[{"type":{"names":["Observable"]}}],"name":"exports.updateMapVisibility","longname":"epics.feedbackMask.exports.updateMapVisibility","kind":"constant","scope":"static","$longname":"epics.feedbackMask.exports.updateMapVisibility"},{"comment":"/**\n * Enabled/disabled mask based on map load feedback, in case of error enable feedbackMask.\n * @param {Observable} action$ stream of actions. Manages `INIT_MAP`, `MAP_CONFIG_LOADED`, `MAP_CONFIG_LOAD_ERROR`, `LOGIN_SUCCESS`, `LOGOUT`\n * @param {Array} loadActions array of actions to control\n * @param {Function} isEnabled needs to return true or false to update the enabled state of feedbackMask\n * @param {String} mode declare mode to display the mask (map or dashboard)\n * @memberof epics.feedbackMask\n * @return {Observable}\n */","meta":{"range":[2057,2554],"filename":"feedbackMask.js","lineno":53,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100047431","name":"exports.updateVisibility","type":"VariableDeclaration"}},"description":"<p>Enabled/disabled mask based on map load feedback, in case of error enable feedbackMask.</p>","params":[{"type":{"names":["Observable"]},"description":"<p>stream of actions. Manages <code>INIT_MAP</code>, <code>MAP_CONFIG_LOADED</code>, <code>MAP_CONFIG_LOAD_ERROR</code>, <code>LOGIN_SUCCESS</code>, <code>LOGOUT</code></p>","name":"action$"},{"type":{"names":["Array"]},"description":"<p>array of actions to control</p>","name":"loadActions"},{"type":{"names":["function"]},"description":"<p>needs to return true or false to update the enabled state of feedbackMask</p>","name":"isEnabled"},{"type":{"names":["String"]},"description":"<p>declare mode to display the mask (map or dashboard)</p>","name":"mode"}],"memberof":"epics.feedbackMask","returns":[{"type":{"names":["Observable"]}}],"name":"exports.updateVisibility","longname":"epics.feedbackMask.exports.updateVisibility","kind":"constant","scope":"static","$longname":"epics.feedbackMask.exports.updateVisibility"},{"comment":"/**\n * Gets every `TOGGLE_FULLSCREEN` event.\n * Dispatches the fullscreen toggle event toggles the fullscreen itself.\n * Intercept all events for fullscreen and properly syncronizes the button state.\n * and updates every time the user toggles fullscreen (also hitting Esc)\n * @param {external:Observable} action$ manages `TOGGLE_FULLSCREEN`.\n * @memberof epics.fullscreen\n * @return {external:Observable} emitting {@link #actions.controls.setControlProperty} events\n */","meta":{"range":[1347,2339],"filename":"fullscreen.js","lineno":35,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100048321","name":"exports.toggleFullscreenEpic","type":"VariableDeclaration"}},"description":"<p>Gets every <code>TOGGLE_FULLSCREEN</code> event.\nDispatches the fullscreen toggle event toggles the fullscreen itself.\nIntercept all events for fullscreen and properly syncronizes the button state.\nand updates every time the user toggles fullscreen (also hitting Esc)</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>TOGGLE_FULLSCREEN</code>.</p>","name":"action$"}],"memberof":"epics.fullscreen","returns":[{"type":{"names":["external:Observable"]},"description":"<p>emitting {@link #actions.controls.setControlProperty} events</p>"}],"name":"exports.toggleFullscreenEpic","longname":"epics.fullscreen.exports.toggleFullscreenEpic","kind":"constant","scope":"static","$longname":"epics.fullscreen.exports.toggleFullscreenEpic"},{"comment":"/**\n * Gets every `TOGGLE_3D` event.\n * @memberof epics.globeswitcher\n * @param {external:Observable} action$ manages `TOGGLE_3D`.\n * @return {external:Observable} emitting connected-react-router push action and {@link #actions.globeswitcher.updateLast2dMapType} actions\n */","meta":{"range":[727,1122],"filename":"globeswitcher.js","lineno":19,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100048490","name":"exports.updateRouteOn3dSwitch","type":"VariableDeclaration"}},"description":"<p>Gets every <code>TOGGLE_3D</code> event.</p>","memberof":"epics.globeswitcher","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>TOGGLE_3D</code>.</p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]},"description":"<p>emitting connected-react-router push action and {@link #actions.globeswitcher.updateLast2dMapType} actions</p>"}],"name":"exports.updateRouteOn3dSwitch","longname":"epics.globeswitcher.exports.updateRouteOn3dSwitch","kind":"constant","scope":"static","$longname":"epics.globeswitcher.exports.updateRouteOn3dSwitch"},{"comment":"/**\n    * Sets control property to currently selected group when catalogue is open\n    * Sets the currently selected group as the detination of new layers in catalogue\n    * if a layer instead of a group is selected it resets the groupId to Default\n    *  Action performed: setControlProperty (only if catalogue is open)\n    * @memberof epics.layers\n    * @param {external:Observable} action$ manages `SELECT_NODE`\n    * @return {external:Observable}\n    */","meta":{"range":[26005,26539],"filename":"catalog.js","lineno":503,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100041279","name":"updateGroupSelectedMetadataExplorerEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Sets control property to currently selected group when catalogue is open\nSets the currently selected group as the detination of new layers in catalogue\nif a layer instead of a group is selected it resets the groupId to Default\nAction performed: setControlProperty (only if catalogue is open)</p>","memberof":"epics.layers","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>SELECT_NODE</code></p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"updateGroupSelectedMetadataExplorerEpic","longname":"epics.layers.updateGroupSelectedMetadataExplorerEpic","kind":"function","scope":"static","$longname":"epics.layers.updateGroupSelectedMetadataExplorerEpic"},{"comment":"/**\n * Keep in sync mapType in state with mapType in URL.\n * @memberof epics.maptype\n * @param  {external:Observable} action$ the stream of actions, acts on `LOCATION_CHANGE`\n * @param  {object} store   the store middleware API from redux `createMiddleware`\n * @return {external:Observable}  the stream of the actions to emit. (`changeMapType`)\n */","meta":{"range":[954,2675],"filename":"maptype.js","lineno":25,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100049500","name":"exports.syncMapType","type":"VariableDeclaration"}},"description":"<p>Keep in sync mapType in state with mapType in URL.</p>","memberof":"epics.maptype","params":[{"type":{"names":["external:Observable"]},"description":"<p>the stream of actions, acts on <code>LOCATION_CHANGE</code></p>","name":"action$"},{"type":{"names":["object"]},"description":"<p>the store middleware API from redux <code>createMiddleware</code></p>","name":"store"}],"returns":[{"type":{"names":["external:Observable"]},"description":"<p>the stream of the actions to emit. (<code>changeMapType</code>)</p>"}],"name":"exports.syncMapType","longname":"epics.maptype.exports.syncMapType","kind":"constant","scope":"static","$longname":"epics.maptype.exports.syncMapType"},{"comment":"/**\n * Clear all notifications on LOCATION_CHANGE.\n * @param {external:Observable} action$ manages `LOCATION_CHANGE`.\n * @memberof epics.notifications\n * @return {external:Observable}\n */","meta":{"range":[523,671],"filename":"notifications.js","lineno":19,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100049766","name":"exports.clearNotificationOnLocationChange","type":"VariableDeclaration"}},"description":"<p>Clear all notifications on LOCATION_CHANGE.</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>LOCATION_CHANGE</code>.</p>","name":"action$"}],"memberof":"epics.notifications","returns":[{"type":{"names":["external:Observable"]}}],"name":"exports.clearNotificationOnLocationChange","longname":"epics.notifications.exports.clearNotificationOnLocationChange","kind":"constant","scope":"static","$longname":"epics.notifications.exports.clearNotificationOnLocationChange"},{"comment":"/**\n * Gets every `TEXT_SEARCH_STARTED` event.\n * Dispatches the request to all the services in the action, postprocess them\n * and updates every tume the results\n * @param {external:Observable} action$ manages `TEXT_SEARCH_STARTED` and `TEXT_SEARCH_RESULTS_PURGE`, `TEXT_SEARCH_RESET`, `TEXT_SEARCH_ITEM_SELECTED` for cancellation\n * @memberof epics.search\n * @return {external:Observable}\n */","meta":{"range":[2232,4579],"filename":"search.js","lineno":59,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100049933","name":"exports.searchEpic","type":"VariableDeclaration"}},"description":"<p>Gets every <code>TEXT_SEARCH_STARTED</code> event.\nDispatches the request to all the services in the action, postprocess them\nand updates every tume the results</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>TEXT_SEARCH_STARTED</code> and <code>TEXT_SEARCH_RESULTS_PURGE</code>, <code>TEXT_SEARCH_RESET</code>, <code>TEXT_SEARCH_ITEM_SELECTED</code> for cancellation</p>","name":"action$"}],"memberof":"epics.search","returns":[{"type":{"names":["external:Observable"]}}],"name":"exports.searchEpic","longname":"epics.search.exports.searchEpic","kind":"constant","scope":"static","$longname":"epics.search.exports.searchEpic"},{"comment":"/**\n * Gets every `TEXT_SEARCH_ITEM_SELECTED` event.\n * on item selections zooms to the selected item, adds the marker to the marker layer and clear\n * search results.\n * If the selected item has a `__SERVICE__.then` entry, configures the search tool\n * to manage the nested services.\n * If the searvice has a search text template, it configures the searchText with\n * using the template.\n * @param {Observable} action$ stream of actions. Manages `TEXT_SEARCH_ITEM_SELECTED`\n * @memberof epics.search\n * @return {Observable}\n */","meta":{"range":[5111,11117],"filename":"search.js","lineno":114,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100050191","name":"exports.searchItemSelected","type":"VariableDeclaration"}},"description":"<p>Gets every <code>TEXT_SEARCH_ITEM_SELECTED</code> event.\non item selections zooms to the selected item, adds the marker to the marker layer and clear\nsearch results.\nIf the selected item has a <code>__SERVICE__.then</code> entry, configures the search tool\nto manage the nested services.\nIf the searvice has a search text template, it configures the searchText with\nusing the template.</p>","params":[{"type":{"names":["Observable"]},"description":"<p>stream of actions. Manages <code>TEXT_SEARCH_ITEM_SELECTED</code></p>","name":"action$"}],"memberof":"epics.search","returns":[{"type":{"names":["Observable"]}}],"name":"exports.searchItemSelected","longname":"epics.search.exports.searchItemSelected","kind":"constant","scope":"static","$longname":"epics.search.exports.searchItemSelected"},{"comment":"/**\n * Closes the tutorial if 3D button has been toggled\n * @memberof epics.tutorial\n * @param {external:Observable} action$ manages `START_TUTORIAL`\n * @return {external:Observable}\n */","meta":{"range":[1573,1763],"filename":"tutorial.js","lineno":45,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100051413","name":"exports.closeTutorialEpic","type":"VariableDeclaration"}},"description":"<p>Closes the tutorial if 3D button has been toggled</p>","memberof":"epics.tutorial","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>START_TUTORIAL</code></p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"exports.closeTutorialEpic","longname":"epics.tutorial.exports.closeTutorialEpic","kind":"constant","scope":"static","$longname":"epics.tutorial.exports.closeTutorialEpic"},{"comment":"/**\n * Get actions from tutorial steps\n * @memberof epics.tutorial\n * @param {external:Observable} action$ manages `UPDATE_TUTORIAL`\n * @return {external:Observable}\n */","meta":{"range":[6936,7513],"filename":"tutorial.js","lineno":154,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100051983","name":"exports.getActionsFromStepEpic","type":"VariableDeclaration"}},"description":"<p>Get actions from tutorial steps</p>","memberof":"epics.tutorial","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>UPDATE_TUTORIAL</code></p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"exports.getActionsFromStepEpic","longname":"epics.tutorial.exports.getActionsFromStepEpic","kind":"constant","scope":"static","$longname":"epics.tutorial.exports.getActionsFromStepEpic"},{"comment":"/**\n * Setup new steps based on the current path\n * @memberof epics.tutorial\n * @param {external:Observable} action$ manages `LOCATION_CHANGE`, `REDUCERS_LOADED`\n * @param {external:Observable} store\n * @return {external:Observable}\n */","meta":{"range":[2003,4889],"filename":"tutorial.js","lineno":58,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100051445","name":"exports.switchTutorialEpic","type":"VariableDeclaration"}},"description":"<p>Setup new steps based on the current path</p>","memberof":"epics.tutorial","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>LOCATION_CHANGE</code>, <code>REDUCERS_LOADED</code></p>","name":"action$"},{"type":{"names":["external:Observable"]},"name":"store"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"exports.switchTutorialEpic","longname":"epics.tutorial.exports.switchTutorialEpic","kind":"constant","scope":"static","$longname":"epics.tutorial.exports.switchTutorialEpic"},{"comment":"/**\n * Gets the WFS feature type attributes and geometry when the feature has been selected\n * @memberof epics.wfsquery\n * @param {external:Observable} action$ manages `FEATURE_TYPE_SELECTED`\n * @return {external:Observable}\n */","meta":{"range":[3107,7204],"filename":"wfsquery.js","lineno":95,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100052440","name":"exports.featureTypeSelectedEpic","type":"VariableDeclaration"}},"description":"<p>Gets the WFS feature type attributes and geometry when the feature has been selected</p>","memberof":"epics.wfsquery","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>FEATURE_TYPE_SELECTED</code></p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"exports.featureTypeSelectedEpic","longname":"epics.wfsquery.exports.featureTypeSelectedEpic","kind":"constant","scope":"static","$longname":"epics.wfsquery.exports.featureTypeSelectedEpic"},{"comment":"/**\n * Generate a spatial filter geometry from the view bounds\n * @memberof epics.wfsquery\n * @param {external:Observable} action$ manages `SELECT_VIEWPORT_SPATIAL_METHOD` and `CHANGE_MAP_VIEW`\n * @return {external:Observable}\n */","meta":{"range":[10097,11045],"filename":"wfsquery.js","lineno":214,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100053152","name":"exports.viewportSelectedEpic","type":"VariableDeclaration"}},"description":"<p>Generate a spatial filter geometry from the view bounds</p>","memberof":"epics.wfsquery","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>SELECT_VIEWPORT_SPATIAL_METHOD</code> and <code>CHANGE_MAP_VIEW</code></p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"exports.viewportSelectedEpic","longname":"epics.wfsquery.exports.viewportSelectedEpic","kind":"constant","scope":"static","$longname":"epics.wfsquery.exports.viewportSelectedEpic"},{"comment":"/**\n * Sends a WFS query composing filters from action, layerFilter and cql_filter, returns a response or handles request error\n * in particular the NoApplicableCode WFS error with a forced sort option on the first attribute\n * @memberof epics.wfsquery\n * @param {external:Observable} action$ manages `QUERY`\n * @return {external:Observable}\n */","meta":{"range":[7552,9863],"filename":"wfsquery.js","lineno":171,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100052897","name":"exports.wfsQueryEpic","type":"VariableDeclaration"}},"description":"<p>Sends a WFS query composing filters from action, layerFilter and cql_filter, returns a response or handles request error\nin particular the NoApplicableCode WFS error with a forced sort option on the first attribute</p>","memberof":"epics.wfsquery","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>QUERY</code></p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"exports.wfsQueryEpic","longname":"epics.wfsquery.exports.wfsQueryEpic","kind":"constant","scope":"static","$longname":"epics.wfsquery.exports.wfsQueryEpic"},{"comment":"/**\n * Extend an extent given another one\n *\n * @param extent1 {array} [minx, miny, maxx, maxy]\n * @param extent2 {array} [minx, miny, maxx, maxy]\n *\n * @return {array} [minx, miny, maxx, maxy]\n */","meta":{"range":[17318,17740],"filename":"CoordinatesUtils.js","lineno":524,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100057642","name":"exports.extendExtent","type":"VariableDeclaration"}},"description":"<p>Extend an extent given another one</p>","params":[{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>","name":"extent1"},{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>","name":"extent2"}],"returns":[{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>"}],"name":"extendExtent","longname":"extendExtent","kind":"constant","scope":"global","$longname":"extendExtent"},{"comment":"/**\n  * @external Observable\n  * @description A RxJS Observable\n  * @see {@link http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html|Observable}\n  */","meta":{"filename":"index.jsdoc","lineno":6,"columnno":1,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{}},"kind":"external","name":"Observable","description":"<p>A RxJS Observable</p>","see":["{@link http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html|Observable}"],"longname":"external:Observable","scope":"global","$longname":"external:Observable"},{"comment":"/**\n * @external selector\n * @see {@link https://github.com/reactjs/reselect|Reselect} for details\n * @description A function that computes the redux state or part of it allowing the redux store to be normalized and the react components to be re-rendered only if needed.\n */","meta":{"filename":"index.jsdoc","lineno":7,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{}},"kind":"external","name":"selector","see":["{@link https://github.com/reactjs/reselect|Reselect} for details"],"description":"<p>A function that computes the redux state or part of it allowing the redux store to be normalized and the react components to be re-rendered only if needed.</p>","longname":"external:selector","scope":"global","$longname":"external:selector"},{"comment":"","meta":{"range":[2922,2970],"filename":"FeatureGrid.jsx","lineno":72,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/featuregrid","code":{"id":"astnode100006299","name":"FeatureGrid","type":"MethodDefinition","paramnames":["props"]},"vars":{"":null}},"undocumented":true,"name":"FeatureGrid","longname":"FeatureGrid","kind":"class","scope":"global","params":[],"$longname":"FeatureGrid"},{"comment":"/**\n * Prompts login when page some resource is not accessible and you're not logged in.\n * @param {stream} action$ the action stream\n */","meta":{"range":[9312,10603],"filename":"feedbackMask.js","lineno":198,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100048008","name":"exports.feedbackMaskPromptLogin","type":"VariableDeclaration"}},"description":"<p>Prompts login when page some resource is not accessible and you're not logged in.</p>","params":[{"type":{"names":["stream"]},"description":"<p>the action stream</p>","name":"action$"}],"name":"feedbackMaskPromptLogin","longname":"feedbackMaskPromptLogin","kind":"constant","scope":"global","$longname":"feedbackMaskPromptLogin"},{"comment":"/**\n * get the absolute URL from the local url and the url to convert\n * @param  {string} localUrl     the context where to evaluate the URL, typically location.href\n * @param  {string} urlToConvert the url to convert\n * @return {string}              the absolute url of the urlToConvert\n */","meta":{"range":[1725,1977],"filename":"ShareUtils.js","lineno":63,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100068677","name":"exports.getAbsoluteURL","type":"VariableDeclaration"}},"description":"<p>get the absolute URL from the local url and the url to convert</p>","params":[{"type":{"names":["string"]},"description":"<p>the context where to evaluate the URL, typically location.href</p>","name":"localUrl"},{"type":{"names":["string"]},"description":"<p>the url to convert</p>","name":"urlToConvert"}],"returns":[{"type":{"names":["string"]},"description":"<p>the absolute url of the urlToConvert</p>"}],"name":"getAbsoluteURL","longname":"getAbsoluteURL","kind":"constant","scope":"global","$longname":"getAbsoluteURL"},{"comment":"/**\n * Parses the API url to get the proper base path where to retrieve the js for the api.\n * @param  {string} url the current context\n * @return {string}     the base path of mapstore where to retrieve the js api.\n */","meta":{"range":[2984,3153],"filename":"ShareUtils.js","lineno":91,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100068796","name":"exports.getApiUrl","type":"VariableDeclaration"}},"description":"<p>Parses the API url to get the proper base path where to retrieve the js for the api.</p>","params":[{"type":{"names":["string"]},"description":"<p>the current context</p>","name":"url"}],"returns":[{"type":{"names":["string"]},"description":"<p>the base path of mapstore where to retrieve the js api.</p>"}],"name":"getApiUrl","longname":"getApiUrl","kind":"constant","scope":"global","$longname":"getApiUrl"},{"comment":"/**\n * get the url for the configuration in GeoStore parsing the hash string (`#/viewer/{maptype}/1`)\n * @param  {string} url     the context where to evaluate the URL, typically location.href\n * @param  {string} geoStoreUrl the Base URL of GeoStore\n * @return {string} the absolute url of the GeoStore Resource\n */","meta":{"range":[2294,2763],"filename":"ShareUtils.js","lineno":76,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100068711","name":"exports.getConfigUrl","type":"VariableDeclaration"}},"description":"<p>get the url for the configuration in GeoStore parsing the hash string (<code>#/viewer/{maptype}/1</code>)</p>","params":[{"type":{"names":["string"]},"description":"<p>the context where to evaluate the URL, typically location.href</p>","name":"url"},{"type":{"names":["string"]},"description":"<p>the Base URL of GeoStore</p>","name":"geoStoreUrl"}],"returns":[{"type":{"names":["string"]},"description":"<p>the absolute url of the GeoStore Resource</p>"}],"name":"getConfigUrl","longname":"getConfigUrl","kind":"constant","scope":"global","$longname":"getConfigUrl"},{"comment":"/**\n * Return localized id of error messages\n * @param e {object} error\n * @param service {string} service that thrown the error\n * @param section {string} section where the error happens\n * @return {object} {title, message}\n */","meta":{"range":[5806,6069],"filename":"LocaleUtils.js","lineno":183,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100061597","name":"exports.getErrorMessage","type":"VariableDeclaration"}},"description":"<p>Return localized id of error messages</p>","params":[{"type":{"names":["object"]},"description":"<p>error</p>","name":"e"},{"type":{"names":["string"]},"description":"<p>service that thrown the error</p>","name":"service"},{"type":{"names":["string"]},"description":"<p>section where the error happens</p>","name":"section"}],"returns":[{"type":{"names":["object"]},"description":"<p>{title, message}</p>"}],"name":"getErrorMessage","longname":"getErrorMessage","kind":"constant","scope":"global","$longname":"getErrorMessage"},{"comment":"/**\n * Return a projection from a list of projections\n * @param code {string} code for the projection EPSG:3857\n * @return {object} {extent, code} fallsback to default {extent: [-20026376.39, -20048966.10, 20026376.39, 20048966.10]}\n */","meta":{"range":[36607,36809],"filename":"CoordinatesUtils.js","lineno":1056,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100060465","name":"exports.getExtentForProjection","type":"VariableDeclaration"}},"description":"<p>Return a projection from a list of projections</p>","params":[{"type":{"names":["string"]},"description":"<p>code for the projection EPSG:3857</p>","name":"code"}],"returns":[{"type":{"names":["object"]},"description":"<p>{extent, code} fallsback to default {extent: [-20026376.39, -20048966.10, 20026376.39, 20048966.10]}</p>"}],"name":"getExtentForProjection","longname":"getExtentForProjection","kind":"constant","scope":"global","$longname":"getExtentForProjection"},{"comment":"/**\n * Reproject extent to verify the intersection with the international date line (isIDL)\n * if on IDL return double extent array\n * @param bounds {object} {minx, miny, maxx, maxy}\n * @param projection {string} the projection of bounds\n * @return {object} {extent, isIDL}\n */","meta":{"range":[7450,8322],"filename":"CoordinatesUtils.js","lineno":226,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100056303","name":"exports.getExtentFromNormalized","type":"VariableDeclaration"}},"description":"<p>Reproject extent to verify the intersection with the international date line (isIDL)\nif on IDL return double extent array</p>","params":[{"type":{"names":["object"]},"description":"<p>{minx, miny, maxx, maxy}</p>","name":"bounds"},{"type":{"names":["string"]},"description":"<p>the projection of bounds</p>","name":"projection"}],"returns":[{"type":{"names":["object"]},"description":"<p>{extent, isIDL}</p>"}],"name":"getExtentFromNormalized","longname":"getExtentFromNormalized","kind":"constant","scope":"global","$longname":"getExtentFromNormalized"},{"comment":"/**\n * Calculates the extent for the geoJSON passed. It used a small buffer for points.\n * Like turf/bbox but works only with simple geometries.\n * @deprecated  We may replace it with turf/bbox + turf/buffer in the future, so using it with geometry is discouraged\n * @param {geoJSON|geometry} GeoJSON or geometry\n * @return {array} extent of the geoJSON\n */","meta":{"range":[18099,19839],"filename":"CoordinatesUtils.js","lineno":547,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100057727","name":"exports.getGeoJSONExtent","type":"VariableDeclaration"}},"description":"<p>Calculates the extent for the geoJSON passed. It used a small buffer for points.\nLike turf/bbox but works only with simple geometries.</p>","deprecated":"We may replace it with turf/bbox + turf/buffer in the future, so using it with geometry is discouraged","params":[{"type":{"names":["geoJSON","geometry"]},"description":"<p>or geometry</p>","name":"GeoJSON"}],"returns":[{"type":{"names":["array"]},"description":"<p>extent of the geoJSON</p>"}],"name":"getGeoJSONExtent","longname":"getGeoJSONExtent","kind":"constant","scope":"global","$longname":"getGeoJSONExtent"},{"comment":"/**\n * Find the layout name for the given options.\n * The convention is: `PAGE_FORMAT + (\"_2_pages_legend\"|\"_2_pages_legend\"|\"\") + (\"_landscape\"|\"\")``\n * @param  {object} spec the spec with the options\n * @returns {string}      the layout name.\n */","meta":{"range":[5356,5710],"filename":"PrintUtils.js","lineno":152,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064210","name":"exports.getLayoutName","type":"VariableDeclaration"}},"description":"<p>Find the layout name for the given options.\nThe convention is: `PAGE_FORMAT + (&quot;_2_pages_legend&quot;|&quot;_2_pages_legend&quot;|&quot;&quot;) + (&quot;_landscape&quot;|&quot;&quot;)``</p>","params":[{"type":{"names":["object"]},"description":"<p>the spec with the options</p>","name":"spec"}],"returns":[{"type":{"names":["string"]},"description":"<p>the layout name.</p>"}],"name":"getLayoutName","longname":"getLayoutName","kind":"constant","scope":"global","$longname":"getLayoutName"},{"comment":"/**\n * Retrieve localized string from object of translations\n * @param {string} locale code of locale, eg. en-US\n * @param {string|object} prop source of translation\n * @returns {string} localized string\n */","meta":{"range":[6278,6387],"filename":"LocaleUtils.js","lineno":195,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100061634","name":"exports.getLocalizedProp","type":"VariableDeclaration"}},"description":"<p>Retrieve localized string from object of translations</p>","params":[{"type":{"names":["string"]},"description":"<p>code of locale, eg. en-US</p>","name":"locale"},{"type":{"names":["string","object"]},"description":"<p>source of translation</p>","name":"prop"}],"returns":[{"type":{"names":["string"]},"description":"<p>localized string</p>"}],"name":"getLocalizedProp","longname":"getLocalizedProp","kind":"constant","scope":"global","$longname":"getLocalizedProp"},{"comment":"/**\n * Generates longitude and latitude value from the point\n * @param {object} point with latlng data\n * @return {array} corrected longitude and latitude\n */","meta":{"range":[37563,38217],"filename":"CoordinatesUtils.js","lineno":1077,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100060550","name":"exports.getLonLatFromPoint","type":"VariableDeclaration"}},"description":"<p>Generates longitude and latitude value from the point</p>","params":[{"type":{"names":["object"]},"description":"<p>with latlng data</p>","name":"point"}],"returns":[{"type":{"names":["array"]},"description":"<p>corrected longitude and latitude</p>"}],"name":"getLonLatFromPoint","longname":"getLonLatFromPoint","kind":"constant","scope":"global","$longname":"getLonLatFromPoint"},{"comment":"/**\n * Gets from the state the monitor state.\n * @param {object} state the whole application state\n * @param {object[]} [monitorState] the state parts to monitor. Every object of the array is shapes this way `{name: \"mapType\", path: 'maptype.mapType'}`. Joined with default.\n */","meta":{"range":[16006,16132],"filename":"PluginsUtils.js","lineno":396,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100063156","name":"exports.getMonitoredState","type":"VariableDeclaration"}},"description":"<p>Gets from the state the monitor state.</p>","params":[{"type":{"names":["object"]},"description":"<p>the whole application state</p>","name":"state"},{"type":{"names":["Array.<object>"]},"optional":true,"description":"<p>the state parts to monitor. Every object of the array is shapes this way <code>{name: &quot;mapType&quot;, path: 'maptype.mapType'}</code>. Joined with default.</p>","name":"monitorState"}],"name":"getMonitoredState","longname":"getMonitoredState","kind":"constant","scope":"global","$longname":"getMonitoredState"},{"comment":"/**\n * Return normalized latitude and longitude\n * @param coords {object} coordinates {lat, lng}\n * @return {object} {lat, lng}\n */","meta":{"range":[27452,27601],"filename":"CoordinatesUtils.js","lineno":808,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100059117","name":"exports.getNormalizedLatLon","type":"VariableDeclaration"}},"description":"<p>Return normalized latitude and longitude</p>","params":[{"type":{"names":["object"]},"description":"<p>coordinates {lat, lng}</p>","name":"coords"}],"returns":[{"type":{"names":["object"]},"description":"<p>{lat, lng}</p>"}],"name":"getNormalizedLatLon","longname":"getNormalizedLatLon","kind":"constant","scope":"global","$longname":"getNormalizedLatLon"},{"comment":"/**\n * provide the pluginDescriptor for a given plugin, with a state and a configuration\n * @param {object} state the state. This is required to load plugins that depend from the state itself\n * @param {object} plugins all the plugins, like this:\n * ```\n *  {\n *      P1Plugin: connectedComponent1,\n *      P2Plugin: connectedComponent2\n *  }\n * ```\n * @param {array} pluginConfig the configurations of the plugins\n * @param {object} [loadedPlugins] the plugins loaded with `require.ensure`\n * @return {object} a pluginDescriptor like this:\n * ```\n * {\n *    id: \"P1\",\n *    name: \"P1\",\n *    items: // the contained items\n *    cfg: // the configuration\n *    impl // the real implementation\n * }\n * ```\n */","meta":{"range":[17988,18994],"filename":"PluginsUtils.js","lineno":451,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100063261","name":"exports.getPluginDescriptor","type":"VariableDeclaration"}},"description":"<p>provide the pluginDescriptor for a given plugin, with a state and a configuration</p>","params":[{"type":{"names":["object"]},"description":"<p>the state. This is required to load plugins that depend from the state itself</p>","name":"state"},{"type":{"names":["object"]},"description":"<p>all the plugins, like this:</p>\n<pre class=\"prettyprint source\"><code> {\n     P1Plugin: connectedComponent1,\n     P2Plugin: connectedComponent2\n }\n</code></pre>","name":"plugins"},{"type":{"names":["array"]},"description":"<p>the configurations of the plugins</p>","name":"pluginConfig"},{"type":{"names":["object"]},"optional":true,"description":"<p>the plugins loaded with <code>require.ensure</code></p>","name":"loadedPlugins"}],"returns":[{"type":{"names":["object"]},"description":"<p>a pluginDescriptor like this:</p>\n<pre class=\"prettyprint source\"><code>{\n   id: &quot;P1&quot;,\n   name: &quot;P1&quot;,\n   items: // the contained items\n   cfg: // the configuration\n   impl // the real implementation\n}\n</code></pre>"}],"name":"getPluginDescriptor","longname":"getPluginDescriptor","kind":"constant","scope":"global","$longname":"getPluginDescriptor"},{"comment":"/**\n * helper use to create a geojson Feature with a Polygon geometry\n * starting from circle data\n * @see https://turfjs.org/docs/#circle\n * @param {number[]} center in the form of [x, y]\n * @param {number} radius\n * @param {string} [units=\"degrees\"] the unit measure\n * @param {number} [steps=100] number of vertices of the polygon\n */","meta":{"range":[35770,35974],"filename":"CoordinatesUtils.js","lineno":1033,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100060390","name":"exports.getPolygonFromCircle","type":"VariableDeclaration"}},"description":"<p>helper use to create a geojson Feature with a Polygon geometry\nstarting from circle data</p>","see":["https://turfjs.org/docs/#circle"],"params":[{"type":{"names":["Array.<number>"]},"description":"<p>in the form of [x, y]</p>","name":"center"},{"type":{"names":["number"]},"name":"radius"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"degrees\"","description":"<p>the unit measure</p>","name":"units"},{"type":{"names":["number"]},"optional":true,"defaultvalue":100,"description":"<p>number of vertices of the polygon</p>","name":"steps"}],"name":"getPolygonFromCircle","longname":"getPolygonFromCircle","kind":"constant","scope":"global","$longname":"getPolygonFromCircle"},{"comment":"/**\n * Creates a bbox of size dimensions areund the center point given to it given the\n * resolution and the rotation\n * @param center {object} the x,y coordinate of the point\n * @param resolution {number} the resolution of the map\n * @param rotation {number} the optional rotation of the new bbox\n * @param size {object} width,height of the desired bbox\n * @return {object} the desired bbox {minx, miny, maxx, maxy}\n */","meta":{"range":[9201,10050],"filename":"CoordinatesUtils.js","lineno":284,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100056447","name":"exports.getProjectedBBox","type":"VariableDeclaration"}},"description":"<p>Creates a bbox of size dimensions areund the center point given to it given the\nresolution and the rotation</p>","params":[{"type":{"names":["object"]},"description":"<p>the x,y coordinate of the point</p>","name":"center"},{"type":{"names":["number"]},"description":"<p>the resolution of the map</p>","name":"resolution"},{"type":{"names":["number"]},"description":"<p>the optional rotation of the new bbox</p>","name":"rotation"},{"type":{"names":["object"]},"description":"<p>width,height of the desired bbox</p>","name":"size"}],"returns":[{"type":{"names":["object"]},"description":"<p>the desired bbox {minx, miny, maxx, maxy}</p>"}],"name":"getProjectedBBox","longname":"getProjectedBBox","kind":"constant","scope":"global","$longname":"getProjectedBBox"},{"comment":"/**\n * Returns an array of projections\n * @return {array} of projection Definitions [{code, extent}]\n */","meta":{"range":[36081,36368],"filename":"CoordinatesUtils.js","lineno":1044,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100060423","name":"exports.getProjections","type":"VariableDeclaration"}},"description":"<p>Returns an array of projections</p>","returns":[{"type":{"names":["array"]},"description":"<p>of projection Definitions [{code, extent}]</p>"}],"name":"getProjections","longname":"getProjections","kind":"constant","scope":"global","$longname":"getProjections"},{"comment":"/**\n         * Returns the name of the attribute for the name of the geoJSON entry. This means that it translates \"geometry\" into the correct geometry name\n         * @param  {string} name The name of the geoJSON attribute, or \"geometry\"\n         * @return {string}      The original attribute name\n         */","meta":{"range":[3865,3923],"filename":"RequestBuilder.js","lineno":79,"columnno":8,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils/ogc/WFST","code":{"id":"astnode100068507","name":"getPropertyName","type":"ArrowFunctionExpression"}},"description":"<p>Returns the name of the attribute for the name of the geoJSON entry. This means that it translates &quot;geometry&quot; into the correct geometry name</p>","params":[{"type":{"names":["string"]},"description":"<p>The name of the geoJSON attribute, or &quot;geometry&quot;</p>","name":"name"}],"returns":[{"type":{"names":["string"]},"description":"<p>The original attribute name</p>"}],"name":"getPropertyName","longname":"getPropertyName","kind":"function","scope":"global","$longname":"getPropertyName"},{"comment":"/**\n * Returns the a function that returns the correct style based on the geometry type, to use in the highlight\n * @param {feature} f the feature in json format\n */","meta":{"range":[5659,6058],"filename":"mapInfo.js","lineno":145,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033168","name":"exports.getStyleForFeature","type":"VariableDeclaration"}},"description":"<p>Returns the a function that returns the correct style based on the geometry type, to use in the highlight</p>","params":[{"type":{"names":["feature"]},"description":"<p>the feature in json format</p>","name":"f"}],"name":"getStyleForFeature","longname":"getStyleForFeature","kind":"constant","scope":"global","$longname":"getStyleForFeature"},{"comment":"/**\n * Return the viewport geometry from the view bounds\n * @param bounds {object} bounds {minx, miny, maxx, maxy}\n * @param projection {string} the projection of bounds coordinates\n * @return {object} geometry {type, radius, projection, coordinates, extent, center}\n */","meta":{"range":[22989,24697],"filename":"CoordinatesUtils.js","lineno":682,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100058406","name":"exports.getViewportGeometry","type":"VariableDeclaration"}},"description":"<p>Return the viewport geometry from the view bounds</p>","params":[{"type":{"names":["object"]},"description":"<p>bounds {minx, miny, maxx, maxy}</p>","name":"bounds"},{"type":{"names":["string"]},"description":"<p>the projection of bounds coordinates</p>","name":"projection"}],"returns":[{"type":{"names":["object"]},"description":"<p>geometry {type, radius, projection, coordinates, extent, center}</p>"}],"name":"getViewportGeometry","longname":"getViewportGeometry","kind":"constant","scope":"global","$longname":"getViewportGeometry"},{"comment":"/**\n * gets the configured state for highlight mapInfo features.\n * @param {object} state the application state\n * @returns {object} style object\n */","meta":{"range":[6386,6593],"filename":"mapInfo.js","lineno":164,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033224","name":"exports.highlightStyleSelector","type":"VariableDeclaration"}},"description":"<p>gets the configured state for highlight mapInfo features.</p>","params":[{"type":{"names":["object"]},"description":"<p>the application state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>style object</p>"}],"name":"highlightStyleSelector","longname":"highlightStyleSelector","kind":"constant","scope":"global","$longname":"highlightStyleSelector"},{"comment":"/**\n * Defines the general options of the identifyTool to build the request\n */","meta":{"range":[3902,4175],"filename":"mapInfo.js","lineno":98,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032985","name":"exports.identifyOptionsSelector","type":"VariableDeclaration"}},"description":"<p>Defines the general options of the identifyTool to build the request</p>","name":"identifyOptionsSelector","longname":"identifyOptionsSelector","kind":"constant","scope":"global","$longname":"identifyOptionsSelector"},{"comment":"/**\n * Imports a plugin from the compiled source code.\n *\n * Compiled plugin bundles can be created using the dynamic import syntax with the webChunkName comment.\n *\n * @example named bundle plugin\n * import(&#47;* webpackChunkName: \"extensions/dummy-extension\" *&#47; './plugins/Extension')\n *\n * @example use a compiled plugin\n * importPlugin(\"... compiled code ...\", lazy => {\n *      lazy.loadPlugin((plugin) => {\n *          const Comp = plugin.component;\n *          ReactDOM.render(Comp, document.getElementById('container'));\n *      });\n * });\n *\n * @param {string} source plugin source code\n * @param {function} callback function called with the plugin implementation\n */","meta":{"range":[15623,15725],"filename":"PluginsUtils.js","lineno":387,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100063144","name":"exports.importPlugin","type":"VariableDeclaration"}},"description":"<p>Imports a plugin from the compiled source code.</p>\n<p>Compiled plugin bundles can be created using the dynamic import syntax with the webChunkName comment.</p>","examples":["named bundle plugin\nimport(&#47;* webpackChunkName: \"extensions/dummy-extension\" *&#47; './plugins/Extension')","use a compiled plugin\nimportPlugin(\"... compiled code ...\", lazy => {\n     lazy.loadPlugin((plugin) => {\n         const Comp = plugin.component;\n         ReactDOM.render(Comp, document.getElementById('container'));\n     });\n});"],"params":[{"type":{"names":["string"]},"description":"<p>plugin source code</p>","name":"source"},{"type":{"names":["function"]},"description":"<p>function called with the plugin implementation</p>","name":"callback"}],"name":"importPlugin","longname":"importPlugin","kind":"constant","scope":"global","$longname":"importPlugin"},{"comment":"/**\n * Identifies when to update a index when the display information trigger is click (GFI panel)\n * @param {object} state current state of the reducer\n * @param {array} responses the responses received so far\n * @param {number} requestIndex index position of the current request\n * @param {boolean} isVector type of the response received is vector or not\n */","meta":{"range":[1660,2444],"filename":"mapInfo.js","lineno":56,"columnno":6,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{"id":"astnode100035931","name":"isIndexValid","type":"ArrowFunctionExpression"},"vars":{"undefined":null,"validResponse":"isIndexValid~validResponse","inValidResponse":"isIndexValid~inValidResponse","cond1":"isIndexValid~cond1","cond2":"isIndexValid~cond2","":null,"cond3":"isIndexValid~cond3"}},"description":"<p>Identifies when to update a index when the display information trigger is click (GFI panel)</p>","params":[{"type":{"names":["object"]},"description":"<p>current state of the reducer</p>","name":"state"},{"type":{"names":["array"]},"description":"<p>the responses received so far</p>","name":"responses"},{"type":{"names":["number"]},"description":"<p>index position of the current request</p>","name":"requestIndex"},{"type":{"names":["boolean"]},"description":"<p>type of the response received is vector or not</p>","name":"isVector"}],"name":"isIndexValid","longname":"isIndexValid","kind":"function","scope":"global","$longname":"isIndexValid"},{"comment":"/**\n * Return true if coordinates are inside of visible area\n * @param coords {object} coordinates {lat, lng}\n * @param map {object} must contain present map\n * @param layout {object} current layout on map {bottom, top, left, right}\n * @param resolution {number} resolutions of current map zoom\n * @return {bool}\n */","meta":{"range":[27919,29178],"filename":"CoordinatesUtils.js","lineno":822,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100059142","name":"exports.isInsideVisibleArea","type":"VariableDeclaration"}},"description":"<p>Return true if coordinates are inside of visible area</p>","params":[{"type":{"names":["object"]},"description":"<p>coordinates {lat, lng}</p>","name":"coords"},{"type":{"names":["object"]},"description":"<p>must contain present map</p>","name":"map"},{"type":{"names":["object"]},"description":"<p>current layout on map {bottom, top, left, right}</p>","name":"layout"},{"type":{"names":["number"]},"description":"<p>resolutions of current map zoom</p>","name":"resolution"}],"returns":[{"type":{"names":["bool"]}}],"name":"isInsideVisibleArea","longname":"isInsideVisibleArea","kind":"constant","scope":"global","$longname":"isInsideVisibleArea"},{"comment":"/**\n * Check extent validity\n *\n * @param extent {array} [minx, miny, maxx, maxy]\n *\n * @return {bool}\n */","meta":{"range":[19947,20152],"filename":"CoordinatesUtils.js","lineno":595,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100057990","name":"exports.isValidExtent","type":"VariableDeclaration"}},"description":"<p>Check extent validity</p>","params":[{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>","name":"extent"}],"returns":[{"type":{"names":["bool"]}}],"name":"isValidExtent","longname":"isValidExtent","kind":"constant","scope":"global","$longname":"isValidExtent"},{"comment":"/**\n * Loads a plugin compiled bundle from the given URL.\n *\n * Compiled plugin bundles can be created using the module federation plugin. They require the\n * main project also use Module federation plugin.\n *\n * @example named bundle plugin\n * import(&#47;* webpackChunkName: \"extensions/dummy-extension\" *&#47; './plugins/Extension')\n *\n * @example load and use an external plugin\n * loadPlugin(\"dist/plugins/myPlugin\").then(lazy => {\n *      lazy.loadPlugin((plugin) => {\n *          const Comp = plugin.component;\n *          ReactDOM.render(Comp, document.getElementById('container'));\n *      });\n * });\n *\n * @param {string} pluginUrl url (relative or absolute) of a plugin compiled bundle to load\n * @returns {Promise} a Promise that resolves to a lazy plugin object.\n */","meta":{"range":[24168,24362],"filename":"PluginsUtils.js","lineno":600,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100063663","name":"exports.loadPlugin","type":"VariableDeclaration"}},"description":"<p>Loads a plugin compiled bundle from the given URL.</p>\n<p>Compiled plugin bundles can be created using the module federation plugin. They require the\nmain project also use Module federation plugin.</p>","examples":["named bundle plugin\nimport(&#47;* webpackChunkName: \"extensions/dummy-extension\" *&#47; './plugins/Extension')","load and use an external plugin\nloadPlugin(\"dist/plugins/myPlugin\").then(lazy => {\n     lazy.loadPlugin((plugin) => {\n         const Comp = plugin.component;\n         ReactDOM.render(Comp, document.getElementById('container'));\n     });\n});"],"params":[{"type":{"names":["string"]},"description":"<p>url (relative or absolute) of a plugin compiled bundle to load</p>","name":"pluginUrl"}],"returns":[{"type":{"names":["Promise"]},"description":"<p>a Promise that resolves to a lazy plugin object.</p>"}],"name":"loadPlugin","longname":"loadPlugin","kind":"constant","scope":"global","$longname":"loadPlugin"},{"comment":"/**\n * Loads a script inside the current page.\n * @param {string} src the URL where to load the script\n */","meta":{"range":[771,1605],"filename":"PluginsUtils.js","lineno":23,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100061719","name":"loadScript","type":"FunctionDeclaration","paramnames":["src"]},"vars":{"":null}},"description":"<p>Loads a script inside the current page.</p>","params":[{"type":{"names":["string"]},"description":"<p>the URL where to load the script</p>","name":"src"}],"name":"loadScript","longname":"loadScript","kind":"function","scope":"global","$longname":"loadScript"},{"comment":"/**\n * Extract the map layout in pixels.\n * @param {object} state the state\n * @returns {object} object with `left,bottom,right,top` properties, in pixels, containing the map layout\n */","meta":{"range":[4380,4866],"filename":"maplayout.js","lineno":134,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033645","name":"exports.mapPaddingSelector","type":"VariableDeclaration"}},"description":"<p>Extract the map layout in pixels.</p>","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>object with <code>left,bottom,right,top</code> properties, in pixels, containing the map layout</p>"}],"name":"mapPaddingSelector","longname":"mapPaddingSelector","kind":"constant","scope":"global","$longname":"mapPaddingSelector"},{"comment":"/**\n * Event triggered when loading a different map type plugins (code for the specific implementation)\n * @prop {boolean} loading true when the loading is active. False when the loading is finished.\n * @prop {string} maptype\n * @prop {boolean} loaded true if the plugin for the map type is effectively loaded. false or undefined if it is not loaded or there was some error loading\n * @prop {Error} errorMap if valorized, contains the error occurred during the map plugin loading.\n */","meta":{"range":[1949,2143],"filename":"map.js","lineno":44,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029607","name":"exports.mapPluginLoad","type":"FunctionDeclaration","paramnames":["loading","mapType","loaded","errorMap"]}},"description":"<p>Event triggered when loading a different map type plugins (code for the specific implementation)</p>","properties":[{"type":{"names":["boolean"]},"description":"<p>true when the loading is active. False when the loading is finished.</p>","name":"loading"},{"type":{"names":["string"]},"name":"maptype"},{"type":{"names":["boolean"]},"description":"<p>true if the plugin for the map type is effectively loaded. false or undefined if it is not loaded or there was some error loading</p>","name":"loaded"},{"type":{"names":["Error"]},"description":"<p>if valorized, contains the error occurred during the map plugin loading.</p>","name":"errorMap"}],"name":"mapPluginLoad","longname":"mapPluginLoad","kind":"function","scope":"global","$longname":"mapPluginLoad"},{"comment":"/**\n * Create an object structured like following:\n * ```\n * {\n *   bodyPlugins: [...all the configs without cfg.containerPosition attribute ]\n *   columns: [...all the configs configured with cfg.containerPosition: \"columns\"]\n *   header: [...all the configs configured with cfg.containerPosition: \"header\"]\n *   ... and so on, for every cfg.containerPosition value found\n * }\n * ```\n * @param  { object[] } pluginsConfig The configurations of plugins\n * @return { object }   An object that spreads the configurations in arrays by their`cfg.containerPosition`.\n */","meta":{"range":[16700,17024],"filename":"PluginsUtils.js","lineno":411,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100063173","name":"exports.mapPluginsPosition","type":"VariableDeclaration"}},"description":"<p>Create an object structured like following:</p>\n<pre class=\"prettyprint source\"><code>{\n  bodyPlugins: [...all the configs without cfg.containerPosition attribute ]\n  columns: [...all the configs configured with cfg.containerPosition: &quot;columns&quot;]\n  header: [...all the configs configured with cfg.containerPosition: &quot;header&quot;]\n  ... and so on, for every cfg.containerPosition value found\n}\n</code></pre>","params":[{"type":{"names":["Array.<object>"]},"description":"<p>The configurations of plugins</p>","name":"pluginsConfig"}],"returns":[{"type":{"names":["object"]},"description":"<p>An object that spreads the configurations in arrays by their<code>cfg.containerPosition</code>.</p>"}],"name":"mapPluginsPosition","longname":"mapPluginsPosition","kind":"constant","scope":"global","$longname":"mapPluginsPosition"},{"comment":"/**\n     * Available annotation fields.\n     * A list of object specifying:\n     *  - name: the field synthetic name\n     *  - type: type of value for the field (text or html)\n     *  - validator: (optional) rule for validation\n     *  - validationError: (optional) id for the translations file containing the validation error message\n     *  - showLabel: whether to show or not the label of the field in the viewer / editor\n     *  - editable: whether the field can be edited or not in editing mode\n     */","meta":{"range":[1914,2283],"filename":"AnnotationsConfig.js","lineno":60,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{"id":"astnode100019414","name":"fields","type":"ArrayExpression","value":"[\"{\\\"name\\\":\\\"title\\\",\\\"type\\\":\\\"text\\\",\\\"validator\\\":\\\"\\\",\\\"validateError\\\":\\\"annotations.mandatory\\\",\\\"showLabel\\\":true,\\\"editable\\\":true}\",\"{\\\"name\\\":\\\"description\\\",\\\"type\\\":\\\"html\\\",\\\"showLabel\\\":true,\\\"editable\\\":true}\"]"}},"description":"<p>Available annotation fields.\nA list of object specifying:</p>\n<ul>\n<li>name: the field synthetic name</li>\n<li>type: type of value for the field (text or html)</li>\n<li>validator: (optional) rule for validation</li>\n<li>validationError: (optional) id for the translations file containing the validation error message</li>\n<li>showLabel: whether to show or not the label of the field in the viewer / editor</li>\n<li>editable: whether the field can be edited or not in editing mode</li>\n</ul>","name":"fields","longname":"module.exports.fields","kind":"member","memberof":"module.exports","scope":"static","$longname":"module.exports.fields"},{"comment":"/**\n     * Returns a CSS classname usable to draw a glyph for the given style (iconGlyph),\n     * using the default glyphs library (font-awesome).\n     * @param {string} style style object\n     * @return {string} classname to draw the glyph\n     */","meta":{"range":[3095,3204],"filename":"AnnotationsConfig.js","lineno":102,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{"id":"astnode100019462","name":"getGlyphClassName","type":"ArrowFunctionExpression"}},"description":"<p>Returns a CSS classname usable to draw a glyph for the given style (iconGlyph),\nusing the default glyphs library (font-awesome).</p>","params":[{"type":{"names":["string"]},"description":"<p>style object</p>","name":"style"}],"returns":[{"type":{"names":["string"]},"description":"<p>classname to draw the glyph</p>"}],"name":"getGlyphClassName","longname":"module.exports.getGlyphClassName","kind":"function","memberof":"module.exports","scope":"static","$longname":"module.exports.getGlyphClassName"},{"comment":"/**\n     * Returns a marker configuration object for the given style, using the default (extra)\n     * markers library.\n     *\n     * @param {string} style style object\n     * @return {object} marker config object\n     */","meta":{"range":[3436,3614],"filename":"AnnotationsConfig.js","lineno":112,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{"id":"astnode100019478","name":"getMarkerFromStyle","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Returns a marker configuration object for the given style, using the default (extra)\nmarkers library.</p>","params":[{"type":{"names":["string"]},"description":"<p>style object</p>","name":"style"}],"returns":[{"type":{"names":["object"]},"description":"<p>marker config object</p>"}],"name":"getMarkerFromStyle","longname":"module.exports.getMarkerFromStyle","kind":"function","memberof":"module.exports","scope":"static","$longname":"module.exports.getMarkerFromStyle"},{"comment":"/**\n     * Available glyphs list (used by the markers styler).\n     */","meta":{"range":[2779,2836],"filename":"AnnotationsConfig.js","lineno":95,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{"id":"astnode100019452","name":"glyphs","type":"CallExpression","value":""}},"description":"<p>Available glyphs list (used by the markers styler).</p>","name":"glyphs","longname":"module.exports.glyphs","kind":"member","memberof":"module.exports","scope":"static","$longname":"module.exports.glyphs"},{"comment":"/**\n     * Markers icon sprite resource.\n     */","meta":{"range":[2437,2460],"filename":"AnnotationsConfig.js","lineno":83,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{"id":"astnode100019442","name":"markerIcon","type":"Identifier","value":"defaultIcon"}},"description":"<p>Markers icon sprite resource.</p>","name":"markerIcon","longname":"module.exports.markerIcon","kind":"member","memberof":"module.exports","scope":"static","$longname":"module.exports.markerIcon"},{"comment":"/**\n     * Grid of markers used to style annotations.\n     */","meta":{"range":[2355,2378],"filename":"AnnotationsConfig.js","lineno":79,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{"id":"astnode100019440","name":"markers","type":"Identifier","value":"defaultMarkers"}},"description":"<p>Grid of markers used to style annotations.</p>","name":"markers","longname":"module.exports.markers","kind":"member","memberof":"module.exports","scope":"static","$longname":"module.exports.markers"},{"comment":"/**\n     * Markers used to style annotations configuration object.\n     */","meta":{"range":[2545,2585],"filename":"AnnotationsConfig.js","lineno":87,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{"id":"astnode100019444","name":"markersConfig","type":"MemberExpression","value":"MarkerUtils.markers.extra"}},"description":"<p>Markers used to style annotations configuration object.</p>","name":"markersConfig","longname":"module.exports.markersConfig","kind":"member","memberof":"module.exports","scope":"static","$longname":"module.exports.markersConfig"},{"comment":"","meta":{"range":[953,1092],"filename":"FormatEditor.jsx","lineno":34,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/featuregrid/editors","code":{"id":"astnode100006958","name":"module.exports","type":"MethodDefinition","paramnames":["props"]},"vars":{"":null}},"undocumented":true,"name":"exports","longname":"module.exports#module.exports","kind":"class","memberof":"module.exports#module","scope":"static","params":[],"$longname":"module.exports#module.exports"},{"comment":"","meta":{"range":[1306,1465],"filename":"NumberEditor.jsx","lineno":45,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/data/featuregrid/editors","code":{"id":"astnode100007245","name":"module.exports","type":"MethodDefinition","paramnames":["props"]},"vars":{"":null}},"undocumented":true,"name":"exports","longname":"module.exports#module.exports","kind":"class","memberof":"module.exports#module","scope":"static","params":[],"$longname":"module.exports#module.exports"},{"comment":"/**\n     * Allow multiGeometry or not (MultiPoint on a single annotation).\n     */","meta":{"range":[2678,2698],"filename":"AnnotationsConfig.js","lineno":91,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/mapcontrols/annotations","code":{"id":"astnode100019450","name":"multiGeometry","type":"Literal","value":false}},"description":"<p>Allow multiGeometry or not (MultiPoint on a single annotation).</p>","name":"multiGeometry","longname":"module.exports.multiGeometry","kind":"member","memberof":"module.exports","scope":"static","$longname":"module.exports.multiGeometry"},{"comment":"/**\n     * Fetch the supported formats from the layer props if present\n     * else use the default info format\n     * @return {object} info formats\n     */","meta":{"range":[3702,4425],"filename":"FeatureInfo.jsx","lineno":86,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/TOC/fragments/settings","code":{"id":"astnode100025510","name":"supportedInfoFormats","type":"ClassProperty"}},"description":"<p>Fetch the supported formats from the layer props if present\nelse use the default info format</p>","returns":[{"type":{"names":["object"]},"description":"<p>info formats</p>"}],"name":"supportedInfoFormats","longname":"module.exports#supportedInfoFormats","kind":"member","memberof":"module.exports","scope":"instance","$longname":"module.exports#supportedInfoFormats"},{"comment":"/**\n * Triggered on mouse move. (only if some tool is registered on this event. See `registerEventListener`).\n * @param {object} position the position of the mouse on the map.\n */","meta":{"range":[6179,6259],"filename":"map.js","lineno":231,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029886","name":"exports.mouseMove","type":"VariableDeclaration"}},"description":"<p>Triggered on mouse move. (only if some tool is registered on this event. See <code>registerEventListener</code>).</p>","params":[{"type":{"names":["object"]},"description":"<p>the position of the mouse on the map.</p>","name":"position"}],"name":"mouseMove","longname":"mouseMove","kind":"constant","scope":"global","$longname":"mouseMove"},{"comment":"/**\n * Triggered when the mouse goes out from the map\n */","meta":{"range":[6319,6375],"filename":"map.js","lineno":239,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029897","name":"exports.mouseOut","type":"VariableDeclaration"}},"description":"<p>Triggered when the mouse goes out from the map</p>","name":"mouseOut","longname":"mouseOut","kind":"constant","scope":"global","$longname":"mouseOut"},{"comment":"/**\n * error for non queriable layer\n*/","meta":{"range":[7583,7779],"filename":"search.js","lineno":294,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100031063","name":"exports.nonQueriableLayerError","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>error for non queriable layer</p>","name":"nonQueriableLayerError","longname":"nonQueriableLayerError","kind":"function","scope":"global","$longname":"nonQueriableLayerError"},{"comment":"/**\n * Return an extent array normalized from EPSG:4326 reprojection\n * @param bounds {object} bounds {minx, miny, maxx, maxy}\n * @param projection {string} the projection of bounds coordinates\n * @return {array} extent with x values normalized from 0 to 360\n */","meta":{"range":[5010,6035],"filename":"CoordinatesUtils.js","lineno":165,"columnno":6,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100055975","name":"normalizeExtent","type":"ArrowFunctionExpression"},"vars":{"extent":"normalizeExtent~extent","":null,"isWorldView":"normalizeExtent~isWorldView"}},"description":"<p>Return an extent array normalized from EPSG:4326 reprojection</p>","params":[{"type":{"names":["object"]},"description":"<p>bounds {minx, miny, maxx, maxy}</p>","name":"bounds"},{"type":{"names":["string"]},"description":"<p>the projection of bounds coordinates</p>","name":"projection"}],"returns":[{"type":{"names":["array"]},"description":"<p>extent with x values normalized from 0 to 360</p>"}],"name":"normalizeExtent","longname":"normalizeExtent","kind":"function","scope":"global","$longname":"normalizeExtent"},{"comment":"/**\n * Collection of observable routines.\n * @name observables\n *\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables","code":{}},"description":"<p>Collection of observable routines.</p>","name":"observables","longname":"observables","kind":"member","scope":"global","$longname":"observables","$members":[{"comment":"/**\n * Observable routines to work with WPS\n * @see {@link https://docs.geoserver.org/stable/en/user/services/wps/|GeoServer documentation} for details\n * @name observables.wps\n *\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{}},"description":"<p>Observable routines to work with WPS</p>","see":["{@link https://docs.geoserver.org/stable/en/user/services/wps/|GeoServer documentation} for details"],"name":"wps","memberof":"observables","longname":"observables.wps","scope":"static","kind":"member","$longname":"observables.wps","$members":[{"comment":"/**\n * Common WPS routines and XML combinators\n * @name observables.wps.common\n */","meta":{"filename":"common.js","lineno":12,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{}},"description":"<p>Common WPS routines and XML combinators</p>","name":"common","memberof":"observables.wps","longname":"observables.wps.common","scope":"static","kind":"member","$longname":"observables.wps.common","$members":[{"comment":"/**\n * Wrap data in CDATA\n * @memberof observables.wps.common\n * @param {string} data data to wrap\n * @returns {string}\n */","meta":{"range":[2229,2282],"filename":"common.js","lineno":70,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053514","name":"exports.cdata","type":"VariableDeclaration"}},"description":"<p>Wrap data in CDATA</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>data to wrap</p>","name":"data"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.cdata","longname":"observables.wps.common.exports.cdata","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.cdata"},{"comment":"/**\n * Wrap XML in wps:ComplexData\n * @memberof observables.wps.common\n * @param {string} data xml to wrap\n * @param {string} [mimeType] mimeType attribute\n * @param {string} [encoding] encoding attribute\n * @returns {string}\n */","meta":{"range":[1914,2104],"filename":"common.js","lineno":63,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053486","name":"exports.complexData","type":"VariableDeclaration"}},"description":"<p>Wrap XML in wps:ComplexData</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>xml to wrap</p>","name":"data"},{"type":{"names":["string"]},"optional":true,"description":"<p>mimeType attribute</p>","name":"mimeType"},{"type":{"names":["string"]},"optional":true,"description":"<p>encoding attribute</p>","name":"encoding"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.complexData","longname":"observables.wps.common.exports.complexData","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.complexData"},{"comment":"/**\n * Make dwn:Parameter tag\n * @memberof observables.wps.common\n * @param {string} key key attribute\n * @param {string} value dwn:Parameter contents\n * @returns {string}\n */","meta":{"range":[4774,4878],"filename":"common.js","lineno":133,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053653","name":"exports.downloadParameter","type":"VariableDeclaration"}},"description":"<p>Make dwn:Parameter tag</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>key attribute</p>","name":"key"},{"type":{"names":["string"]},"description":"<p>dwn:Parameter contents</p>","name":"value"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.downloadParameter","longname":"observables.wps.common.exports.downloadParameter","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.downloadParameter"},{"comment":"/**\n * Construct url request for WPS from generic server url\n * @memberof observables.wps.common\n * @param {string} urlToParse url to use\n * @param {object} options object of query options to add to the final url\n * @returns {string}\n */","meta":{"range":[5631,5973],"filename":"common.js","lineno":161,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053736","name":"exports.getWPSURL","type":"VariableDeclaration"}},"description":"<p>Construct url request for WPS from generic server url</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>url to use</p>","name":"urlToParse"},{"type":{"names":["object"]},"description":"<p>object of query options to add to the final url</p>","name":"options"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.getWPSURL","longname":"observables.wps.common.exports.getWPSURL","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.getWPSURL"},{"comment":"/**\n * Wrap XML in wps:LiteralData\n * @memberof observables.wps.common\n * @param {string} literal LiteralData contents\n * @returns {string}\n */","meta":{"range":[1595,1683],"filename":"common.js","lineno":54,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053476","name":"exports.literalData","type":"VariableDeclaration"}},"description":"<p>Wrap XML in wps:LiteralData</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>LiteralData contents</p>","name":"literal"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.literalData","longname":"observables.wps.common.exports.literalData","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.literalData"},{"comment":"/**\n * Wrap XML in wps:Data\n * @memberof observables.wps.common\n * @param {data} data xml to wrap\n */","meta":{"range":[835,903],"filename":"common.js","lineno":35,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053432","name":"exports.processData","type":"VariableDeclaration"}},"description":"<p>Wrap XML in wps:Data</p>","memberof":"observables.wps.common","params":[{"type":{"names":["data"]},"description":"<p>xml to wrap</p>","name":"data"}],"name":"exports.processData","longname":"observables.wps.common.exports.processData","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.processData"},{"comment":"/**\n * Make wps:Output tag\n * @memberof observables.wps.common\n * @param {string} mimeType mimeType attribute\n * @param {boolean} asReference asReference attribute\n * @param {string} identifier output identifier\n * @param {string} title output title field\n * @param {string} abstract output abstract field\n * @returns {string}\n */","meta":{"range":[3836,4226],"filename":"common.js","lineno":112,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053586","name":"exports.processOutput","type":"VariableDeclaration"}},"description":"<p>Make wps:Output tag</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>mimeType attribute</p>","name":"mimeType"},{"type":{"names":["boolean"]},"description":"<p>asReference attribute</p>","name":"asReference"},{"type":{"names":["string"]},"description":"<p>output identifier</p>","name":"identifier"},{"type":{"names":["string"]},"description":"<p>output title field</p>","name":"title"},{"type":{"names":["string"]},"description":"<p>output abstract field</p>","name":"abstract"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.processOutput","longname":"observables.wps.common.exports.processOutput","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.processOutput"},{"comment":"/**\n * Process input combinator\n * @memberof observables.wps.common\n * @param {string} identifier input identifier\n * @param {string} dataXML data XML contents\n * @returns {string}\n */","meta":{"range":[566,731],"filename":"common.js","lineno":24,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053413","name":"exports.processParameter","type":"VariableDeclaration"}},"description":"<p>Process input combinator</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>input identifier</p>","name":"identifier"},{"type":{"names":["string"]},"description":"<p>data XML contents</p>","name":"dataXML"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.processParameter","longname":"observables.wps.common.exports.processParameter","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.processParameter"},{"comment":"/**\n * Generate wps:Reference\n * @memberof observables.wps.common\n * @param {string} mimeType  mimeType attribute\n * @param {string} href href attribute\n * @param {string} method method attribute\n * @param {string} requestBody wps:Body contents\n * @returns {string}\n */","meta":{"range":[1174,1450],"filename":"common.js","lineno":45,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053442","name":"exports.processReference","type":"VariableDeclaration"}},"description":"<p>Generate wps:Reference</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>mimeType attribute</p>","name":"mimeType"},{"type":{"names":["string"]},"description":"<p>href attribute</p>","name":"href"},{"type":{"names":["string"]},"description":"<p>method attribute</p>","name":"method"},{"type":{"names":["string"]},"description":"<p>wps:Body contents</p>","name":"requestBody"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.processReference","longname":"observables.wps.common.exports.processReference","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.processReference"},{"comment":"/**\n * Make wps:RawDataOutput\n * @memberof observables.wps.common\n * @param {string} identifier output identifier\n * @param {string} [mimeType] mimeType attribute\n * @returns {string}\n */","meta":{"range":[2739,2948],"filename":"common.js","lineno":86,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053534","name":"exports.rawDataOutput","type":"VariableDeclaration"}},"description":"<p>Make wps:RawDataOutput</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>output identifier</p>","name":"identifier"},{"type":{"names":["string"]},"optional":true,"description":"<p>mimeType attribute</p>","name":"mimeType"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.rawDataOutput","longname":"observables.wps.common.exports.rawDataOutput","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.rawDataOutput"},{"comment":"/**\n * Make wps:ResponseDocument with specified document data XML\n * @memberof observables.wps.common\n * @param {boolean} storeExecuteResponse storeExecuteResponse attribute\n * @param {boolean} status status attribute\n * @param {string} documentDataXML documentData xml\n * @returns {string}\n */","meta":{"range":[3244,3504],"filename":"common.js","lineno":98,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053559","name":"exports.responseDocument","type":"VariableDeclaration"}},"description":"<p>Make wps:ResponseDocument with specified document data XML</p>","memberof":"observables.wps.common","params":[{"type":{"names":["boolean"]},"description":"<p>storeExecuteResponse attribute</p>","name":"storeExecuteResponse"},{"type":{"names":["boolean"]},"description":"<p>status attribute</p>","name":"status"},{"type":{"names":["string"]},"description":"<p>documentData xml</p>","name":"documentDataXML"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.responseDocument","longname":"observables.wps.common.exports.responseDocument","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.responseDocument"},{"comment":"/**\n * Wrap XML in wps:ResponseForm\n * @memberof observables.wps.common\n * @param {string} responseFormContents xml to wrap\n * @returns {string}\n */","meta":{"range":[2433,2550],"filename":"common.js","lineno":78,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053524","name":"exports.responseForm","type":"VariableDeclaration"}},"description":"<p>Wrap XML in wps:ResponseForm</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>xml to wrap</p>","name":"responseFormContents"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.responseForm","longname":"observables.wps.common.exports.responseForm","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.responseForm"},{"comment":"/**\n * Construct writeParameters input with provided XML of individual parameters\n * @memberof observables.wps.common\n * @param {string} paramsXML xml containing dwn:Parameter tags\n * @returns {string}\n */","meta":{"range":[4434,4597],"filename":"common.js","lineno":125,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053636","name":"exports.writingParametersData","type":"VariableDeclaration"}},"description":"<p>Construct writeParameters input with provided XML of individual parameters</p>","memberof":"observables.wps.common","params":[{"type":{"names":["string"]},"description":"<p>xml containing dwn:Parameter tags</p>","name":"paramsXML"}],"returns":[{"type":{"names":["string"]}}],"name":"exports.writingParametersData","longname":"observables.wps.common.exports.writingParametersData","kind":"constant","scope":"static","$longname":"observables.wps.common.exports.writingParametersData"}]},{"comment":"/**\n * Contains routines to work with GeoServer WPS download community module processes\n * @name observables.wps.download\n */","meta":{"filename":"download.js","lineno":28,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{}},"description":"<p>Contains routines to work with GeoServer WPS download community module processes</p>","name":"download","memberof":"observables.wps","longname":"observables.wps.download","scope":"static","kind":"member","$longname":"observables.wps.download","$members":[{"comment":"/**\n * Execute gs:Download process, running gs:DownloadEstimator first\n * @memberof observables.wps.download\n * @param {string} url target url\n * @param {object} downloadOptions options to use to construct payload xml for DownloadEstimator and Download processes(except notifyDownloadEstimatorSuccess). See {@link api/framework#observables.wps.download.exports.downloadXML|downloadXML}\n * @param {boolean} downloadOptions.notifyDownloadEstimatorSuccess if true, the returned observable emits 'DownloadEstimatorSuccess' string after successful gs:DownloadEstimator run\n * @param {object} executeOptions options to pass to executeProcess. See {@link api/framework#observables.wps.execute.exports.executeProcess|executeProcess}\n */","meta":{"range":[8122,9937],"filename":"download.js","lineno":137,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100054941","name":"exports.download","type":"VariableDeclaration"}},"description":"<p>Execute gs:Download process, running gs:DownloadEstimator first</p>","memberof":"observables.wps.download","params":[{"type":{"names":["string"]},"description":"<p>target url</p>","name":"url"},{"type":{"names":["object"]},"description":"<p>options to use to construct payload xml for DownloadEstimator and Download processes(except notifyDownloadEstimatorSuccess). See {@link api/framework#observables.wps.download.exports.downloadXML|downloadXML}</p>","name":"downloadOptions"},{"type":{"names":["boolean"]},"description":"<p>if true, the returned observable emits 'DownloadEstimatorSuccess' string after successful gs:DownloadEstimator run</p>","name":"downloadOptions.notifyDownloadEstimatorSuccess"},{"type":{"names":["object"]},"description":"<p>options to pass to executeProcess. See {@link api/framework#observables.wps.execute.exports.executeProcess|executeProcess}</p>","name":"executeOptions"}],"name":"exports.download","longname":"observables.wps.download.exports.download","kind":"constant","scope":"static","$longname":"observables.wps.download.exports.download"},{"comment":"/**\n * Construct gs:DownloadEstimator XML payload\n * @memberof observables.wps.download\n * @param {string} downloadOptions options object\n * @param {string} downloadOptions.layerName target layer name\n * @param {object} [downloadOptions.dataFilter] object to use as filter (For more info see {@link api/framework#observables.wps.download.exports.downloadXML|downloadXML})\n * @param {string} [downloadOptions.targetCRS] CRS to project output coordinates in(e.g. EPSG:4326)\n * @param {object} [downloadOptions.ROI] object that specifies Region of Interest. Has the same structure as downloadOptions.dataFilter\n * @param {string} [downloadOptions.roiCRS] CRS of coordinates of geometry data specified in downloadOptions.ROI\n */","meta":{"range":[1737,2318],"filename":"download.js","lineno":47,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100054611","name":"exports.downloadEstimatorXML","type":"VariableDeclaration"}},"description":"<p>Construct gs:DownloadEstimator XML payload</p>","memberof":"observables.wps.download","params":[{"type":{"names":["string"]},"description":"<p>options object</p>","name":"downloadOptions"},{"type":{"names":["string"]},"description":"<p>target layer name</p>","name":"downloadOptions.layerName"},{"type":{"names":["object"]},"optional":true,"description":"<p>object to use as filter (For more info see {@link api/framework#observables.wps.download.exports.downloadXML|downloadXML})</p>","name":"downloadOptions.dataFilter"},{"type":{"names":["string"]},"optional":true,"description":"<p>CRS to project output coordinates in(e.g. EPSG:4326)</p>","name":"downloadOptions.targetCRS"},{"type":{"names":["object"]},"optional":true,"description":"<p>object that specifies Region of Interest. Has the same structure as downloadOptions.dataFilter</p>","name":"downloadOptions.ROI"},{"type":{"names":["string"]},"optional":true,"description":"<p>CRS of coordinates of geometry data specified in downloadOptions.ROI</p>","name":"downloadOptions.roiCRS"}],"name":"exports.downloadEstimatorXML","longname":"observables.wps.download.exports.downloadEstimatorXML","kind":"constant","scope":"static","$longname":"observables.wps.download.exports.downloadEstimatorXML"},{"comment":"/**\n * Execute gs:Download process and passes results to gs:Query, running gs:DownloadEstimator first\n * @memberof observables.wps.download\n * @param {string} url target url\n * @param {object} downloadOptions options to use to construct payload xml for DownloadEstimator and Download processes(except notifyDownloadEstimatorSuccess). See {@link api/framework#observables.wps.download.exports.downloadXML|downloadXML}\n * @param {boolean} downloadOptions.notifyDownloadEstimatorSuccess if true, the returned observable emits 'DownloadEstimatorSuccess' string after successful gs:DownloadEstimator run\n * @param {object} executeOptions options to pass to executeProcess. See {@link api/framework#observables.wps.execute.exports.executeProcess|executeProcess}\n */","meta":{"range":[10700,13603],"filename":"download.js","lineno":185,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100055106","name":"exports.downloadWithAttributesFilter","type":"VariableDeclaration"}},"description":"<p>Execute gs:Download process and passes results to gs:Query, running gs:DownloadEstimator first</p>","memberof":"observables.wps.download","params":[{"type":{"names":["string"]},"description":"<p>target url</p>","name":"url"},{"type":{"names":["object"]},"description":"<p>options to use to construct payload xml for DownloadEstimator and Download processes(except notifyDownloadEstimatorSuccess). See {@link api/framework#observables.wps.download.exports.downloadXML|downloadXML}</p>","name":"downloadOptions"},{"type":{"names":["boolean"]},"description":"<p>if true, the returned observable emits 'DownloadEstimatorSuccess' string after successful gs:DownloadEstimator run</p>","name":"downloadOptions.notifyDownloadEstimatorSuccess"},{"type":{"names":["object"]},"description":"<p>options to pass to executeProcess. See {@link api/framework#observables.wps.execute.exports.executeProcess|executeProcess}</p>","name":"executeOptions"}],"name":"exports.downloadWithAttributesFilter","longname":"observables.wps.download.exports.downloadWithAttributesFilter","kind":"constant","scope":"static","$longname":"observables.wps.download.exports.downloadWithAttributesFilter"},{"comment":"/**\n * Construct gs:Download XML payload\n * @memberof observables.wps.download\n * @param {string} downloadOptions options object\n * @param {string} downloadOptions.layerName target layer name\n * @param {string} downloadOptions.outputFormat MIME type of the output file that shall be returned as the result of the process\n * @param {string} [downloadOptions.targetCRS] CRS to project output coordinates in(e.g. EPSG:4326)\n * @param {object} [downloadOptions.dataFilter] object to use as filter\n * @param {string} [downloadOptions.dataFilter.type] 'TEXT' or 'REFERENCE'\n * @param {object} [downloadOptions.dataFilter.data] filter data object\n * @param {string} [downloadOptions.dataFilter.data.mimeType] mime type of the filter data\n * @param {string} [downloadOptions.dataFilter.data.data] if downloadOptions.dataFilter.type is 'TEXT' this shall contain textual contents of the filter\n * @param {string} [downloadOptions.dataFilter.data.href] if downloadOptions.dataFilter.type is 'REFERENCE' use this as 'href' attribute value\n * @param {string} [downloadOptions.dataFilter.data.method] if downloadOptions.dataFilter.type is 'REFERENCE' use this as 'method' attribute value\n * @param {string} [downloadOptions.dataFilter.data.requestBodyData] if downloadOptions.dataFilter.type is 'REFERENCE' use this as contents of requestBodyData\n * @param {object} [downloadOptions.ROI] object that specifies Region of Interest. Has the same structure as downloadOptions.dataFilter\n * @param {boolean} [downloadOptions.cropToROI] if true gs:Download shall use object specified in downloadOptions.ROI to crop output data\n * @param {string} [downloadOptions.roiCRS] CRS of coordinates of geometry data specified in downloadOptions.ROI\n * @param {boolean} [downloadOptions.asynchronous] if true gs:Download will run asynchronously\n * @param {boolean} [downloadOptions.outputAsReference] instructs gs:Download process to return a link where output file can be downloaded instead of the file itself\n * @param {string} [downloadOptions.resultOutput] MIME type of the output (application/zip by default)\n * @param {object} [downloadOptions.writeParameters] object that describes write parameters to be added in 'writeParameters' Input (For more info see {@link https://docs.geoserver.org/stable/en/user/community/wps-download/rawDownload.html#writing-parameters|GeoServer documentation})\n */","meta":{"range":[4692,5969],"filename":"download.js","lineno":81,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100054687","name":"exports.downloadXML","type":"VariableDeclaration"}},"description":"<p>Construct gs:Download XML payload</p>","memberof":"observables.wps.download","params":[{"type":{"names":["string"]},"description":"<p>options object</p>","name":"downloadOptions"},{"type":{"names":["string"]},"description":"<p>target layer name</p>","name":"downloadOptions.layerName"},{"type":{"names":["string"]},"description":"<p>MIME type of the output file that shall be returned as the result of the process</p>","name":"downloadOptions.outputFormat"},{"type":{"names":["string"]},"optional":true,"description":"<p>CRS to project output coordinates in(e.g. EPSG:4326)</p>","name":"downloadOptions.targetCRS"},{"type":{"names":["object"]},"optional":true,"description":"<p>object to use as filter</p>","name":"downloadOptions.dataFilter"},{"type":{"names":["string"]},"optional":true,"description":"<p>'TEXT' or 'REFERENCE'</p>","name":"downloadOptions.dataFilter.type"},{"type":{"names":["object"]},"optional":true,"description":"<p>filter data object</p>","name":"downloadOptions.dataFilter.data"},{"type":{"names":["string"]},"optional":true,"description":"<p>mime type of the filter data</p>","name":"downloadOptions.dataFilter.data.mimeType"},{"type":{"names":["string"]},"optional":true,"description":"<p>if downloadOptions.dataFilter.type is 'TEXT' this shall contain textual contents of the filter</p>","name":"downloadOptions.dataFilter.data.data"},{"type":{"names":["string"]},"optional":true,"description":"<p>if downloadOptions.dataFilter.type is 'REFERENCE' use this as 'href' attribute value</p>","name":"downloadOptions.dataFilter.data.href"},{"type":{"names":["string"]},"optional":true,"description":"<p>if downloadOptions.dataFilter.type is 'REFERENCE' use this as 'method' attribute value</p>","name":"downloadOptions.dataFilter.data.method"},{"type":{"names":["string"]},"optional":true,"description":"<p>if downloadOptions.dataFilter.type is 'REFERENCE' use this as contents of requestBodyData</p>","name":"downloadOptions.dataFilter.data.requestBodyData"},{"type":{"names":["object"]},"optional":true,"description":"<p>object that specifies Region of Interest. Has the same structure as downloadOptions.dataFilter</p>","name":"downloadOptions.ROI"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>if true gs:Download shall use object specified in downloadOptions.ROI to crop output data</p>","name":"downloadOptions.cropToROI"},{"type":{"names":["string"]},"optional":true,"description":"<p>CRS of coordinates of geometry data specified in downloadOptions.ROI</p>","name":"downloadOptions.roiCRS"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>if true gs:Download will run asynchronously</p>","name":"downloadOptions.asynchronous"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>instructs gs:Download process to return a link where output file can be downloaded instead of the file itself</p>","name":"downloadOptions.outputAsReference"},{"type":{"names":["string"]},"optional":true,"description":"<p>MIME type of the output (application/zip by default)</p>","name":"downloadOptions.resultOutput"},{"type":{"names":["object"]},"optional":true,"description":"<p>object that describes write parameters to be added in 'writeParameters' Input (For more info see {@link https://docs.geoserver.org/stable/en/user/community/wps-download/rawDownload.html#writing-parameters|GeoServer documentation})</p>","name":"downloadOptions.writeParameters"}],"name":"exports.downloadXML","longname":"observables.wps.download.exports.downloadXML","kind":"constant","scope":"static","$longname":"observables.wps.download.exports.downloadXML"},{"comment":"/**\n * Construct gs:Query XML payload\n * @memberof observables.wps.download\n * @param {string} downloadOptions options object\n * @param {string} downloadOptions.input WPS process reference object\n * @param {string} downloadOptions.attribute comma-separated list of attributes to include in output\n * @param {object} [downloadOptions.filter] object to use as filter\n * @param {boolean} [downloadOptions.asynchronous] if true gs:Download will run asynchronously\n * @param {boolean} [downloadOptions.outputAsReference] instructs process to return a link where output file can be downloaded instead of the file itself\n * @param {string} [downloadOptions.resultOutput] MIME type of the output\n */","meta":{"range":[6663,7391],"filename":"download.js","lineno":113,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100054849","name":"exports.queryXML","type":"VariableDeclaration"}},"description":"<p>Construct gs:Query XML payload</p>","memberof":"observables.wps.download","params":[{"type":{"names":["string"]},"description":"<p>options object</p>","name":"downloadOptions"},{"type":{"names":["string"]},"description":"<p>WPS process reference object</p>","name":"downloadOptions.input"},{"type":{"names":["string"]},"description":"<p>comma-separated list of attributes to include in output</p>","name":"downloadOptions.attribute"},{"type":{"names":["object"]},"optional":true,"description":"<p>object to use as filter</p>","name":"downloadOptions.filter"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>if true gs:Download will run asynchronously</p>","name":"downloadOptions.asynchronous"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>instructs process to return a link where output file can be downloaded instead of the file itself</p>","name":"downloadOptions.outputAsReference"},{"type":{"names":["string"]},"optional":true,"description":"<p>MIME type of the output</p>","name":"downloadOptions.resultOutput"}],"name":"exports.queryXML","longname":"observables.wps.download.exports.queryXML","kind":"constant","scope":"static","$longname":"observables.wps.download.exports.queryXML"}]},{"comment":"/**\n * Contains routines pertaining to Execute WPS operation.\n * @name observables.wps.execute\n */","meta":{"filename":"execute.js","lineno":17,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{}},"description":"<p>Contains routines pertaining to Execute WPS operation.</p>","name":"execute","memberof":"observables.wps","longname":"observables.wps.execute","scope":"static","kind":"member","$longname":"observables.wps.execute","$members":[{"comment":"/**\n * Run WPS Execute operation.\n * @memberof observables.wps.execute\n * @param {string} url url of the server\n * @param {string} payload xml payload\n * @param {object} executeOptions options object\n * @param {number} [executeOptions.executeStatusUpdateInterval=2000] time interval in ms between consecutive status checks if process is asynchronous\n * @param {function} [executeOptions.outputsExtractor=identity] function to apply to outputs array of ExecuteResponse and use it's return value as\n * a result. If not specified array of xml2js objects with parsed Output tags will be returned\n * @param {object} [requestOptions] request options to pass to axios.post\n * @returns {Observable} observable that emits ExecuteResponse outputs processed by outputsExtractor or data returned by the server if the initial response\n * was not ExecuteResponse(for example if RawDataOutput is specified without ResponseDocument in the payload)\n */","meta":{"range":[8062,10407],"filename":"execute.js","lineno":212,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100054258","name":"exports.executeProcess","type":"VariableDeclaration"}},"description":"<p>Run WPS Execute operation.</p>","memberof":"observables.wps.execute","params":[{"type":{"names":["string"]},"description":"<p>url of the server</p>","name":"url"},{"type":{"names":["string"]},"description":"<p>xml payload</p>","name":"payload"},{"type":{"names":["object"]},"description":"<p>options object</p>","name":"executeOptions"},{"type":{"names":["number"]},"optional":true,"defaultvalue":2000,"description":"<p>time interval in ms between consecutive status checks if process is asynchronous</p>","name":"executeOptions.executeStatusUpdateInterval"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"identity","description":"<p>function to apply to outputs array of ExecuteResponse and use it's return value as\na result. If not specified array of xml2js objects with parsed Output tags will be returned</p>","name":"executeOptions.outputsExtractor"},{"type":{"names":["object"]},"optional":true,"description":"<p>request options to pass to axios.post</p>","name":"requestOptions"}],"returns":[{"type":{"names":["Observable"]},"description":"<p>observable that emits ExecuteResponse outputs processed by outputsExtractor or data returned by the server if the initial response\nwas not ExecuteResponse(for example if RawDataOutput is specified without ResponseDocument in the payload)</p>"}],"name":"exports.executeProcess","longname":"observables.wps.execute.exports.executeProcess","kind":"constant","scope":"static","$longname":"observables.wps.execute.exports.executeProcess"},{"comment":"/**\n * Send WPS Execute request\n * @memberof observables.wps.execute\n * @param {string} url target url\n * @param {string} payload xml payload\n * @param {object} [requestOptions] request options to pass to axios.post\n * @returns {Observable} observable that emits result from axios.post\n */","meta":{"range":[6850,7124],"filename":"execute.js","lineno":192,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100054223","name":"exports.executeProcessRequest","type":"VariableDeclaration"}},"description":"<p>Send WPS Execute request</p>","memberof":"observables.wps.execute","params":[{"type":{"names":["string"]},"description":"<p>target url</p>","name":"url"},{"type":{"names":["string"]},"description":"<p>xml payload</p>","name":"payload"},{"type":{"names":["object"]},"optional":true,"description":"<p>request options to pass to axios.post</p>","name":"requestOptions"}],"returns":[{"type":{"names":["Observable"]},"description":"<p>observable that emits result from axios.post</p>"}],"name":"exports.executeProcessRequest","longname":"observables.wps.execute.exports.executeProcessRequest","kind":"constant","scope":"static","$longname":"observables.wps.execute.exports.executeProcessRequest"},{"comment":"/**\n * Construct XML payload of WPS Execute operation\n * @memberof observables.wps.execute\n * @param {string} processIdentifier WPS process idenitifier\n * @param {string[]} [dataInputsXML] array of XML string of each individual Input\n * @param {string} [responseFormXML] response form XML contents\n * @returns {string} XML payload\n */","meta":{"range":[1064,2087],"filename":"execute.js","lineno":38,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053835","name":"exports.executeProcessXML","type":"VariableDeclaration"}},"description":"<p>Construct XML payload of WPS Execute operation</p>","memberof":"observables.wps.execute","params":[{"type":{"names":["string"]},"description":"<p>WPS process idenitifier</p>","name":"processIdentifier"},{"type":{"names":["Array.<string>"]},"optional":true,"description":"<p>array of XML string of each individual Input</p>","name":"dataInputsXML"},{"type":{"names":["string"]},"optional":true,"description":"<p>response form XML contents</p>","name":"responseFormXML"}],"returns":[{"type":{"names":["string"]},"description":"<p>XML payload</p>"}],"name":"exports.executeProcessXML","longname":"observables.wps.execute.exports.executeProcessXML","kind":"constant","scope":"static","$longname":"observables.wps.execute.exports.executeProcessXML"},{"comment":"/**\n * Send GetExecutionStatus request\n * @memberof observables.wps.execute\n * @param {string} url target url\n * @param {string} execId executionId returned in ExecuteResponse of Execute process request\n * @param {object} [requestOptions] request options to pass to axios.get\n * @returns {Observable} observable that emits axios response object\n */","meta":{"range":[2438,2726],"filename":"execute.js","lineno":67,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053907","name":"exports.getExecutionStatus","type":"VariableDeclaration"}},"description":"<p>Send GetExecutionStatus request</p>","memberof":"observables.wps.execute","params":[{"type":{"names":["string"]},"description":"<p>target url</p>","name":"url"},{"type":{"names":["string"]},"description":"<p>executionId returned in ExecuteResponse of Execute process request</p>","name":"execId"},{"type":{"names":["object"]},"optional":true,"description":"<p>request options to pass to axios.get</p>","name":"requestOptions"}],"returns":[{"type":{"names":["Observable"]},"description":"<p>observable that emits axios response object</p>"}],"name":"exports.getExecutionStatus","longname":"observables.wps.execute.exports.getExecutionStatus","kind":"constant","scope":"static","$longname":"observables.wps.execute.exports.getExecutionStatus"},{"comment":"/**\n * Extracts identifier from Output\n * @memberof observables.wps.execute\n * @param {object} output xml2js object\n * @returns {object}\n */","meta":{"range":[4801,4984],"filename":"execute.js","lineno":129,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100054124","name":"exports.identifierOutputExtractor","type":"VariableDeclaration"}},"description":"<p>Extracts identifier from Output</p>","memberof":"observables.wps.execute","params":[{"type":{"names":["object"]},"description":"<p>xml2js object</p>","name":"output"}],"returns":[{"type":{"names":["object"]}}],"name":"exports.identifierOutputExtractor","longname":"observables.wps.execute.exports.identifierOutputExtractor","kind":"constant","scope":"static","$longname":"observables.wps.execute.exports.identifierOutputExtractor"},{"comment":"/**\n * Extracts LiteralData contents from Output\n * @memberof observables.wps.execute\n * @param {object} output xml2js object\n * @returns {object}\n */","meta":{"range":[5136,5333],"filename":"execute.js","lineno":144,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100054141","name":"exports.literalDataOutputExtractor","type":"VariableDeclaration"}},"description":"<p>Extracts LiteralData contents from Output</p>","memberof":"observables.wps.execute","params":[{"type":{"names":["object"]},"description":"<p>xml2js object</p>","name":"output"}],"returns":[{"type":{"names":["object"]}}],"name":"exports.literalDataOutputExtractor","longname":"observables.wps.execute.exports.literalDataOutputExtractor","kind":"constant","scope":"static","$longname":"observables.wps.execute.exports.literalDataOutputExtractor"},{"comment":"/**\n * Make outputs extractor function from primitive ones.\n * The returned value of the result outputs extractor function is an array of objects items of which\n * correspond to Output tags in ExecuteResponse. Each object is constructed by merging the results\n * of calling each extractor on the Output tag.\n * @memberof observables.wps.execute\n * @param  {...function} extractors primitive extractor functions\n * @returns {function} outputs extractor function to be passed as outputsExtractor option to executeProcess\n */","meta":{"range":[6254,6558],"filename":"execute.js","lineno":178,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100054177","name":"exports.makeOutputsExtractor","type":"VariableDeclaration"}},"description":"<p>Make outputs extractor function from primitive ones.\nThe returned value of the result outputs extractor function is an array of objects items of which\ncorrespond to Output tags in ExecuteResponse. Each object is constructed by merging the results\nof calling each extractor on the Output tag.</p>","memberof":"observables.wps.execute","params":[{"type":{"names":["function"]},"variable":true,"description":"<p>primitive extractor functions</p>","name":"extractors"}],"returns":[{"type":{"names":["function"]},"description":"<p>outputs extractor function to be passed as outputsExtractor option to executeProcess</p>"}],"name":"exports.makeOutputsExtractor","longname":"observables.wps.execute.exports.makeOutputsExtractor","kind":"constant","scope":"static","$longname":"observables.wps.execute.exports.makeOutputsExtractor"},{"comment":"/**\n * Extracts href and mimeType from Reference from Output\n * @memberof observables.wps.execute\n * @param {object} output xml2js object\n * @returns {object}\n */","meta":{"range":[5497,5730],"filename":"execute.js","lineno":159,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100054158","name":"exports.referenceOutputExtractor","type":"VariableDeclaration"}},"description":"<p>Extracts href and mimeType from Reference from Output</p>","memberof":"observables.wps.execute","params":[{"type":{"names":["object"]},"description":"<p>xml2js object</p>","name":"output"}],"returns":[{"type":{"names":["object"]}}],"name":"exports.referenceOutputExtractor","longname":"observables.wps.execute.exports.referenceOutputExtractor","kind":"constant","scope":"static","$longname":"observables.wps.execute.exports.referenceOutputExtractor"}]}]}]},{"comment":"/**\n * Proerly resets draw support on create new feature\n */","meta":{"range":[38217,38394],"filename":"featuregrid.js","lineno":897,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045599","name":"exports.onFeatureGridCreateNewFeature","type":"VariableDeclaration"}},"description":"<p>Proerly resets draw support on create new feature</p>","name":"onFeatureGridCreateNewFeature","longname":"onFeatureGridCreateNewFeature","kind":"constant","scope":"global","$longname":"onFeatureGridCreateNewFeature"},{"comment":"/**\n            catalog opening must close other panels like:\n            - GFI\n            - FeatureGrid\n            */","meta":{"range":[16059,16396],"filename":"catalog.js","lineno":327,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100040384","name":"openCatalogEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>catalog opening must close other panels like:\n- GFI\n- FeatureGrid</p>","name":"openCatalogEpic","longname":"openCatalogEpic","kind":"function","scope":"global","$longname":"openCatalogEpic"},{"comment":"/**\n * Dispatch orientation co-ordinates (head, pitch and roll)\n * @param orientation\n * @returns {{orientation, type: string}}\n */","meta":{"range":[6509,6599],"filename":"map.js","lineno":248,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029905","name":"exports.orientateMap","type":"VariableDeclaration"}},"description":"<p>Dispatch orientation co-ordinates (head, pitch and roll)</p>","params":[{"name":"orientation"}],"returns":[{"type":{"names":["Object"]}}],"name":"orientateMap","longname":"orientateMap","kind":"constant","scope":"global","$longname":"orientateMap"},{"comment":"/**\n * Parse the URN to get EPSG code\n * @param {object|string} crs object or string\n * @return {string} EPSG in the form EPSG:NNNN\n */","meta":{"range":[26024,26458],"filename":"CoordinatesUtils.js","lineno":769,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100058840","name":"exports.parseURN","type":"VariableDeclaration"}},"description":"<p>Parse the URN to get EPSG code</p>","params":[{"type":{"names":["object","string"]},"description":"<p>object or string</p>","name":"crs"}],"returns":[{"type":{"names":["string"]},"description":"<p>EPSG in the form EPSG:NNNN</p>"}],"name":"parseURN","longname":"parseURN","kind":"constant","scope":"global","$longname":"parseURN"},{"comment":"/**\n * Default persisted store name.\n */","meta":{"range":[1322,1381],"filename":"StateUtils.js","lineno":41,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069086","name":"exports.PERSISTED_STORE_NAME","type":"VariableDeclaration"}},"description":"<p>Default persisted store name.</p>","name":"PERSISTED_STORE_NAME","longname":"PERSISTED_STORE_NAME","kind":"constant","scope":"global","$longname":"PERSISTED_STORE_NAME"},{"comment":"/**\n * Returns well known vendor params of the selected layer to be used in feature grid.\n * returns an object that contains `viewParams` and `cqlFilter` getting them from the params object of the layer\n */","meta":{"range":[7452,7804],"filename":"featuregrid.js","lineno":171,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100031900","name":"exports.queryOptionsSelector","type":"VariableDeclaration"}},"description":"<p>Returns well known vendor params of the selected layer to be used in feature grid.\nreturns an object that contains <code>viewParams</code> and <code>cqlFilter</code> getting them from the params object of the layer</p>","name":"queryOptionsSelector","longname":"queryOptionsSelector","kind":"constant","scope":"global","$longname":"queryOptionsSelector"},{"comment":"/**\n * Handles responses based on the type [\"data\"|\"exceptions\",\"error\",\"vector\"] of the responses received\n * @param {object} state current state of the reducer\n * @param {object} action object of the current response\n * @param {string} type type of the response received\n */","meta":{"range":[2723,4947],"filename":"mapInfo.js","lineno":75,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{"id":"astnode100036030","name":"receiveResponse","type":"FunctionDeclaration","paramnames":["state","action","type"]},"vars":{"isVector":"receiveResponse~isVector","requestIndex":"receiveResponse~requestIndex","":null,"fltRequests":"receiveResponse~fltRequests","fltResponses":"receiveResponse~fltResponses","undefined":null,"responses":"receiveResponse~responses","isHover":"receiveResponse~isHover","updateResponse":"receiveResponse~updateResponse","responses[undefined]":"receiveResponse~responses.undefined]","indexObj":"receiveResponse~indexObj"}},"description":"<p>Handles responses based on the type [&quot;data&quot;|&quot;exceptions&quot;,&quot;error&quot;,&quot;vector&quot;] of the responses received</p>","params":[{"type":{"names":["object"]},"description":"<p>current state of the reducer</p>","name":"state"},{"type":{"names":["object"]},"description":"<p>object of the current response</p>","name":"action"},{"type":{"names":["string"]},"description":"<p>type of the response received</p>","name":"type"}],"name":"receiveResponse","longname":"receiveResponse","kind":"function","scope":"global","$longname":"receiveResponse"},{"comment":"/**\n     * search a layer given catalog service url, format, startPosition, maxRecords and text\n     * text is the name of the layer to search\n     * it also start with a loading action used to trigger loading state in catalog ui\n     */","meta":{"range":[3260,5393],"filename":"catalog.js","lineno":101,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100039268","name":"recordSearchEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>search a layer given catalog service url, format, startPosition, maxRecords and text\ntext is the name of the layer to search\nit also start with a loading action used to trigger loading state in catalog ui</p>","name":"recordSearchEpic","longname":"recordSearchEpic","kind":"function","scope":"global","$longname":"recordSearchEpic"},{"comment":"/**\n * Redux reducers.\n * @see {@link http://redux.js.org/docs/basics/Reducers.html|the redux documentation} for details\n * @name reducers\n *\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{}},"description":"<p>Redux reducers.</p>","see":["{@link http://redux.js.org/docs/basics/Reducers.html|the redux documentation} for details"],"name":"reducers","longname":"reducers","kind":"member","scope":"global","$longname":"reducers","$members":[{"comment":"/**\n * Manages the state of the controls in MapStore2\n * The root elements of the state returned by this reducers ar variable, but they have\n * this shape\n * ```\n * {\n *   [action.control]: {\n *     [action.property]: action.value\n *   }\n * }\n * ```\n * where:\n * @prop {string} action.control identifier, used as key\n * @prop {string} action.property the proeprty to set, by default enabled\n * @prop {boolean|string|number|object} action.value the value of the action. If not present is a boolean that toggles\n * @example\n * {\n *   controls: {\n *     help: {\n *       enabled: false\n *     },\n *     print: {\n *       enabled: false\n *     },\n *     toolbar: {\n *       active: null,\n *       expanded: false\n *     },\n *     drawer: {\n *       enabled: false,\n *       menu: '1'\n *     }\n *   }\n * }\n * @memberof reducers\n */","meta":{"range":[1257,3023],"filename":"controls.js","lineno":55,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{"id":"astnode100033857","name":"controls","type":"FunctionDeclaration","paramnames":["state","action"]},"vars":{"property":"reducers.controls~property","newControls":"reducers.controls~newControls","":null,"resetted":"reducers.controls~resetted"}},"description":"<p>Manages the state of the controls in MapStore2\nThe root elements of the state returned by this reducers ar variable, but they have\nthis shape</p>\n<pre class=\"prettyprint source\"><code>{\n  [action.control]: {\n    [action.property]: action.value\n  }\n}\n</code></pre>\n<p>where:</p>","properties":[{"type":{"names":["string"]},"description":"<p>identifier, used as key</p>","name":"action.control"},{"type":{"names":["string"]},"description":"<p>the proeprty to set, by default enabled</p>","name":"action.property"},{"type":{"names":["boolean","string","number","object"]},"description":"<p>the value of the action. If not present is a boolean that toggles</p>","name":"action.value"}],"examples":["{\n  controls: {\n    help: {\n      enabled: false\n    },\n    print: {\n      enabled: false\n    },\n    toolbar: {\n      active: null,\n      expanded: false\n    },\n    drawer: {\n      enabled: false,\n      menu: '1'\n    }\n  }\n}"],"memberof":"reducers","name":"controls","longname":"reducers.controls","kind":"function","scope":"static","params":[],"$longname":"reducers.controls"},{"comment":"/**\n * Manages the state of the featuregrid\n * The properties represent the shape of the state\n * @prop {string[]} editingAllowedRoles array of user roles allowed to enter in edit mode\n * @prop {boolean} canEdit flag used to enable editing on the feature grid\n * @prop {object} filters filters for quick search. `{attribute: \"name\", value: \"filter_value\", opeartor: \"=\", rawValue: \"the fitler raw value\"}`\n * @prop {boolean} enableColumnFilters enables column filter. [configurable]\n * @prop {boolean} open feature grid open or close\n * @prop {string} mode `VIEW` or `EDIT`\n * @prop {array} changes list of current changes in editing\n * @prop {object} pagination object containing current page and page size of the feature grid.\n * @prop {array} select A list of the selected features ids\n * @prop {boolean} multiselect enables multiselect (edit mode by default allows multiselect)\n * @prop {boolean} drawing flag set during drawing\n * @prop {array} newFeatures array of new features created in editing\n * @prop {array} features list of the features currently loaded in the feature grid\n * @prop {boolean} timeSync false by default. If true, enables the time sync on the timeline\n * @prop {boolean} showTimeSync false by default. If true, shows the time sync button. Its disabled by default because WFS do not support officially time.\n * @example\n *  {\n *     editingAllowedRoles: [\"ADMIN\"],\n *     filters: {},\n *     enableColumnFilters: true,\n *     open: false,\n *     canEdit: false,\n *     focusOnEdit: false,\n *     mode: MODES.VIEW,\n *     changes: [],\n *     pagination: {\n *         page: 0,\n *         size: 20\n *     },\n *     select: [],\n *     multiselect: false,\n *     drawing: false,\n *     newFeatures: [],\n *     features: [],\n *     dockSize: 0.35\n * }\n *\n * @memberof reducers\n */","meta":{"range":[4586,15198],"filename":"featuregrid.js","lineno":150,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{"id":"astnode100034386","name":"featuregrid","type":"FunctionDeclaration","paramnames":["state","action"]},"vars":{"features":"reducers.featuregrid~features","":null,"keepValues":"reducers.featuregrid~keepValues","newValues":"reducers.featuregrid~newValues","res":"reducers.featuregrid~res","newFeaturesChanges":"reducers.featuregrid~newFeaturesChanges","id":"reducers.featuregrid~id","undefined":null,"value":"reducers.featuregrid~value","oldVal":"reducers.featuregrid~oldVal","newValue":"reducers.featuregrid~newValue","maxDockSize":"reducers.featuregrid~maxDockSize","minDockSize":"reducers.featuregrid~minDockSize","size":"reducers.featuregrid~size"}},"description":"<p>Manages the state of the featuregrid\nThe properties represent the shape of the state</p>","properties":[{"type":{"names":["boolean"]},"description":"<p>flag used to enable editing on the feature grid</p>","name":"canEdit"},{"type":{"names":["array"]},"description":"<p>list of current changes in editing</p>","name":"changes"},{"type":{"names":["boolean"]},"description":"<p>flag set during drawing</p>","name":"drawing"},{"type":{"names":["Array.<string>"]},"description":"<p>array of user roles allowed to enter in edit mode</p>","name":"editingAllowedRoles"},{"type":{"names":["boolean"]},"description":"<p>enables column filter. [configurable]</p>","name":"enableColumnFilters"},{"type":{"names":["array"]},"description":"<p>list of the features currently loaded in the feature grid</p>","name":"features"},{"type":{"names":["object"]},"description":"<p>filters for quick search. <code>{attribute: &quot;name&quot;, value: &quot;filter_value&quot;, opeartor: &quot;=&quot;, rawValue: &quot;the fitler raw value&quot;}</code></p>","name":"filters"},{"type":{"names":["string"]},"description":"<p><code>VIEW</code> or <code>EDIT</code></p>","name":"mode"},{"type":{"names":["boolean"]},"description":"<p>enables multiselect (edit mode by default allows multiselect)</p>","name":"multiselect"},{"type":{"names":["array"]},"description":"<p>array of new features created in editing</p>","name":"newFeatures"},{"type":{"names":["boolean"]},"description":"<p>feature grid open or close</p>","name":"open"},{"type":{"names":["object"]},"description":"<p>object containing current page and page size of the feature grid.</p>","name":"pagination"},{"type":{"names":["array"]},"description":"<p>A list of the selected features ids</p>","name":"select"},{"type":{"names":["boolean"]},"description":"<p>false by default. If true, shows the time sync button. Its disabled by default because WFS do not support officially time.</p>","name":"showTimeSync"},{"type":{"names":["boolean"]},"description":"<p>false by default. If true, enables the time sync on the timeline</p>","name":"timeSync"}],"examples":["{\n    editingAllowedRoles: [\"ADMIN\"],\n    filters: {},\n    enableColumnFilters: true,\n    open: false,\n    canEdit: false,\n    focusOnEdit: false,\n    mode: MODES.VIEW,\n    changes: [],\n    pagination: {\n        page: 0,\n        size: 20\n    },\n    select: [],\n    multiselect: false,\n    drawing: false,\n    newFeatures: [],\n    features: [],\n    dockSize: 0.35\n}"],"memberof":"reducers","name":"featuregrid","longname":"reducers.featuregrid","kind":"function","scope":"static","params":[],"$longname":"reducers.featuregrid"},{"comment":"/**\n * Manages the state of the floatinglegend\n * The properties represent the shape of the state\n * @prop {object} size size of legend {width: 0, height: 0}\n * @prop {boolan} expanded expanded state\n * @memberof reducers\n */","meta":{"range":[552,940],"filename":"floatinglegend.js","lineno":19,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{"id":"astnode100035782","name":"floatinglegend","type":"FunctionDeclaration","paramnames":["state","action"]}},"description":"<p>Manages the state of the floatinglegend\nThe properties represent the shape of the state</p>","properties":[{"type":{"names":["boolan"]},"description":"<p>expanded state</p>","name":"expanded"},{"type":{"names":["object"]},"description":"<p>size of legend {width: 0, height: 0}</p>","name":"size"}],"memberof":"reducers","name":"floatinglegend","longname":"reducers.floatinglegend","kind":"function","scope":"static","params":[],"$longname":"reducers.floatinglegend"},{"comment":"/**\n * Manages the map info tool state. Contains configurations and responses.\n * @prop {boolean} [enabled=true] if true, the info tool is enabled by default\n * @prop {object} [highlightStyle] customize style for highlight. Can be customized this way\n * ```\n * {\n *     color: '#3388ff',\n *     weight: 4,\n *     radius: 4,\n *     dashArray: '',\n *     fillColor: '#3388ff',\n *     fillOpacity: 0.2\n * }\n * ```\n * @prop {object} configuration contains the configuration for getFeatureInfo tool.\n * @prop {boolean} showInMapPopup if true, the results are always shown in a popup (if configuration.hover = true, they are by default)\n * @prop {array} requests the requests performed. Here a sample:\n * ```javascript\n * {\n *     request: {\n *         service: 'WMS',\n *         version: '1.1.1',\n *         request: 'GetFeatureInfo',\n *         exceptions: 'application/json',\n *         id: 'tiger:poi__7',\n *         layers: 'tiger:poi',\n *         query_layers: 'tiger:poi',\n *         x: 51,\n *         y: 51,\n *         height: 101,\n *         width: 101,\n *         srs: 'EPSG:3857',\n *         bbox: '-8238713.7375893425,4969819.729231167,-8238472.483218817,4970060.983601692',\n *         feature_count: 10,\n *         info_format: 'text/plain',\n *         ENV: 'locale:it'\n *     },\n *     reqId: '4e030000-514a-11e9-90f1-3db233bf30bf'\n * }\n * ```\n * @prop {array} responses the responses to the requests performed. This is a sample response\n * ```javascript\n * {\n *     response: 'Results for FeatureType', // text\n *     queryParams: {\n *         service: 'WMS',\n *         version: '1.1.1',\n *         request: 'GetFeatureInfo',\n *         exceptions: 'application/json',\n *         id: 'tiger:poi__7',\n *         layers: 'tiger:poi',\n *         query_layers: 'tiger:poi',\n *         x: 51,\n *         y: 51,\n *         height: 101,\n *         width: 101,\n *         srs: 'EPSG:3857',\n *         bbox: '-8238713.7375893425,4969819.729231167,-8238472.483218817,4970060.983601692',\n *         feature_count: 10,\n *         info_format: 'text/plain',\n *         ENV: 'locale:it'\n *     },\n *     layerMetadata: {\n *         title: 'Manhattan (NY) points of interest',\n *         viewer: {},\n *         featureInfo: {}\n *     }\n * }\n * ```\n * @prop {object} clickPoint the clicked point. Contains the `pixel` clicked (x,y), the coordinates of the clicked point `latlng` (latlng) and `modifiers` (buttons pressed when clicked)\n * @prop {object} clickLayer used to query vector layers\n * @example\n * {\n *       enabled: true,\n *       highlightStyle: {\n *           color: '#3388ff',\n *           weight: 4,\n *           radius: 4,\n *           dashArray: '',\n *           fillColor: '#3388ff',\n *           fillOpacity: 0.2\n *       },\n *       configuration: {},\n *       showMarker: true,\n *       responses: [\n *           // ...array of responses\n *       ],\n *       requests: [\n *           // ...requests\n *       ],\n *       centerToMarker: 'disabled',\n *       clickPoint: {\n *           pixel: {\n *               x: 873,\n *               y: 576\n *           },\n *           latlng: {\n *               lat: 40.71190648169588,\n *               lng: -74.00854110717773\n *           },\n *           modifiers: {\n *               alt: false,\n *               ctrl: false,\n *               shift: false\n *           }\n *       },\n *       clickLayer: null,\n *       index: 0\n *   }\n *\n * @memberof reducers\n */","meta":{"range":[8430,16166],"filename":"mapInfo.js","lineno":246,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{"id":"astnode100036269","name":"mapInfo","type":"FunctionDeclaration","paramnames":["state","action"]},"vars":{"undefined":null,"requests":"reducers.mapInfo~requests","point":"reducers.mapInfo~point","unit":"reducers.mapInfo~unit","resolution":"reducers.mapInfo~resolution","bufferedPoint":"reducers.mapInfo~bufferedPoint","intersected":"reducers.mapInfo~intersected","":null,"responses":"reducers.mapInfo~responses","isHover":"reducers.mapInfo~isHover","vectorResponse":"reducers.mapInfo~vectorResponse","vectorAction":"reducers.mapInfo~vectorAction","responses[undefined]":"reducers.mapInfo~responses.undefined]"}},"description":"<p>Manages the map info tool state. Contains configurations and responses.</p>","properties":[{"type":{"names":["object"]},"description":"<p>used to query vector layers</p>","name":"clickLayer"},{"type":{"names":["object"]},"description":"<p>the clicked point. Contains the <code>pixel</code> clicked (x,y), the coordinates of the clicked point <code>latlng</code> (latlng) and <code>modifiers</code> (buttons pressed when clicked)</p>","name":"clickPoint"},{"type":{"names":["object"]},"description":"<p>contains the configuration for getFeatureInfo tool.</p>","name":"configuration"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>if true, the info tool is enabled by default</p>","name":"enabled"},{"type":{"names":["object"]},"optional":true,"description":"<p>customize style for highlight. Can be customized this way</p>\n<pre class=\"prettyprint source\"><code>{\n    color: '#3388ff',\n    weight: 4,\n    radius: 4,\n    dashArray: '',\n    fillColor: '#3388ff',\n    fillOpacity: 0.2\n}\n</code></pre>","name":"highlightStyle"},{"type":{"names":["array"]},"description":"<p>the requests performed. Here a sample:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>{\n    request: {\n        service: 'WMS',\n        version: '1.1.1',\n        request: 'GetFeatureInfo',\n        exceptions: 'application/json',\n        id: 'tiger:poi__7',\n        layers: 'tiger:poi',\n        query_layers: 'tiger:poi',\n        x: 51,\n        y: 51,\n        height: 101,\n        width: 101,\n        srs: 'EPSG:3857',\n        bbox: '-8238713.7375893425,4969819.729231167,-8238472.483218817,4970060.983601692',\n        feature_count: 10,\n        info_format: 'text/plain',\n        ENV: 'locale:it'\n    },\n    reqId: '4e030000-514a-11e9-90f1-3db233bf30bf'\n}\n</code></pre>","name":"requests"},{"type":{"names":["array"]},"description":"<p>the responses to the requests performed. This is a sample response</p>\n<pre class=\"prettyprint source lang-javascript\"><code>{\n    response: 'Results for FeatureType', // text\n    queryParams: {\n        service: 'WMS',\n        version: '1.1.1',\n        request: 'GetFeatureInfo',\n        exceptions: 'application/json',\n        id: 'tiger:poi__7',\n        layers: 'tiger:poi',\n        query_layers: 'tiger:poi',\n        x: 51,\n        y: 51,\n        height: 101,\n        width: 101,\n        srs: 'EPSG:3857',\n        bbox: '-8238713.7375893425,4969819.729231167,-8238472.483218817,4970060.983601692',\n        feature_count: 10,\n        info_format: 'text/plain',\n        ENV: 'locale:it'\n    },\n    layerMetadata: {\n        title: 'Manhattan (NY) points of interest',\n        viewer: {},\n        featureInfo: {}\n    }\n}\n</code></pre>","name":"responses"},{"type":{"names":["boolean"]},"description":"<p>if true, the results are always shown in a popup (if configuration.hover = true, they are by default)</p>","name":"showInMapPopup"}],"examples":["{\n      enabled: true,\n      highlightStyle: {\n          color: '#3388ff',\n          weight: 4,\n          radius: 4,\n          dashArray: '',\n          fillColor: '#3388ff',\n          fillOpacity: 0.2\n      },\n      configuration: {},\n      showMarker: true,\n      responses: [\n          // ...array of responses\n      ],\n      requests: [\n          // ...requests\n      ],\n      centerToMarker: 'disabled',\n      clickPoint: {\n          pixel: {\n              x: 873,\n              y: 576\n          },\n          latlng: {\n              lat: 40.71190648169588,\n              lng: -74.00854110717773\n          },\n          modifiers: {\n              alt: false,\n              ctrl: false,\n              shift: false\n          }\n      },\n      clickLayer: null,\n      index: 0\n  }"],"memberof":"reducers","name":"mapInfo","longname":"reducers.mapInfo","kind":"function","scope":"static","params":[],"$longname":"reducers.mapInfo"},{"comment":"/**\n * Manages the state of the maps list search with it's results\n * The properties represent the shape of the state\n * @prop {boolan} loading loading state\n * @prop {string} searchText the text used for search (or while digiting)\n * @prop {number} start index for pagination for the current request\n * @prop {number} limit number of results for the current request\n * @prop {number} totalCount the number of results that match the last search on the server\n * @prop {array}  results the results\n * @prop {boolean} success the status of the last request\n * @prop {array} errors the errors happended\n *\n * @example\n * {\n *   maps: {\n *     mapType: 'leaflet',\n *     enabled: false,\n *     errors: [],\n *     searchText: 'test',\n *     loading: false,\n *     start: 0,\n *     limit: 12,\n *     success: true,\n *     totalCount: 1,\n *     results: [\n *       {\n *         updating: true, // only when updating\n *         deleting: true, // only when deleting\n *         canDelete: true,\n *         canEdit: true,\n *         canCopy: true,\n *         creation: '2017-01-16 12:16:09.538',\n *         lastUpdate: '2017-03-17 11:51:34.428',\n *         description: 'Simple map to test WFS search capabilities',\n *         id: 1740,\n *         name: 'WFS Test Map',\n *         thumbnail: '%2Fmapstore%2Frest%2Fgeostore%2Fdata%2F1744%2Fraw%3Fdecode%3Ddatauri',\n *         owner: 'admin'\n *       }\n *     ]\n *   }\n * }\n *}\n * @memberof reducers\n */","meta":{"range":[2100,6841],"filename":"maps.js","lineno":75,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{"id":"astnode100037083","name":"maps","type":"FunctionDeclaration","paramnames":["state","action"]},"vars":{"results":"reducers.maps~results","newMaps":"reducers.maps~newMaps","i":"reducers.maps~i","newMaps[undefined]":"reducers.maps~newMaps.undefined]","newMapsState":"reducers.maps~newMapsState","newState":"reducers.maps~newState","":null}},"description":"<p>Manages the state of the maps list search with it's results\nThe properties represent the shape of the state</p>","properties":[{"type":{"names":["array"]},"description":"<p>the errors happended</p>","name":"errors"},{"type":{"names":["number"]},"description":"<p>number of results for the current request</p>","name":"limit"},{"type":{"names":["boolan"]},"description":"<p>loading state</p>","name":"loading"},{"type":{"names":["array"]},"description":"<p>the results</p>","name":"results"},{"type":{"names":["string"]},"description":"<p>the text used for search (or while digiting)</p>","name":"searchText"},{"type":{"names":["number"]},"description":"<p>index for pagination for the current request</p>","name":"start"},{"type":{"names":["boolean"]},"description":"<p>the status of the last request</p>","name":"success"},{"type":{"names":["number"]},"description":"<p>the number of results that match the last search on the server</p>","name":"totalCount"}],"examples":["{\n  maps: {\n    mapType: 'leaflet',\n    enabled: false,\n    errors: [],\n    searchText: 'test',\n    loading: false,\n    start: 0,\n    limit: 12,\n    success: true,\n    totalCount: 1,\n    results: [\n      {\n        updating: true, // only when updating\n        deleting: true, // only when deleting\n        canDelete: true,\n        canEdit: true,\n        canCopy: true,\n        creation: '2017-01-16 12:16:09.538',\n        lastUpdate: '2017-03-17 11:51:34.428',\n        description: 'Simple map to test WFS search capabilities',\n        id: 1740,\n        name: 'WFS Test Map',\n        thumbnail: '%2Fmapstore%2Frest%2Fgeostore%2Fdata%2F1744%2Fraw%3Fdecode%3Ddatauri',\n        owner: 'admin'\n      }\n    ]\n  }\n}\n}"],"memberof":"reducers","name":"maps","longname":"reducers.maps","kind":"function","scope":"static","params":[],"$longname":"reducers.maps"},{"comment":"/**\n * stores state for the mapType to use (typically one of leaflet, openlayers, cesium... )\n * @memberof reducers\n * @param  {Object} [state={mapType: \"leaflet\"}] the initial state\n * @param  {} action  the action gets `MAP_TYPE_CHANGED`\n * @return {Object} the new state\n * @example\n * {\n *  mapType: \"leaflet\"\n * }\n */","meta":{"range":[658,1598],"filename":"maptype.js","lineno":24,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{"id":"astnode100037766","name":"maptype","type":"FunctionDeclaration","paramnames":["state","action"]}},"description":"<p>stores state for the mapType to use (typically one of leaflet, openlayers, cesium... )</p>","memberof":"reducers","params":[{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{mapType: \"leaflet\"}","description":"<p>the initial state</p>","name":"state"},{"description":"<p>the action gets <code>MAP_TYPE_CHANGED</code></p>","name":"action"}],"returns":[{"type":{"names":["Object"]},"description":"<p>the new state</p>"}],"examples":["{\n mapType: \"leaflet\"\n}"],"name":"maptype","longname":"reducers.maptype","kind":"function","scope":"static","$longname":"reducers.maptype"},{"comment":"/**\n * Manages the notifications.\n * @memberof reducers\n * @param  {Array}  [state=[]]  the notifications array\n * @param  {Object} [action={}] the action. can be `SHOW_NOTIFICATION`, `HIDE_NOTIFICATION` or `CLEAR_NOTIFICATIONS`\n * @return {Array}              the modified state\n * @example\n * [{\n *  uid: 1234,\n *  title: \"My Notification\",\n *  level: \"success\",\n *  action: {\n *      \"label\": \"I Agree\"\n *  }\n * }]\n */","meta":{"range":[729,1178],"filename":"notifications.js","lineno":27,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{"id":"astnode100037877","name":"notifications","type":"FunctionDeclaration","paramnames":["state","action"]},"vars":{"undefined":null,"":null}},"description":"<p>Manages the notifications.</p>","memberof":"reducers","params":[{"type":{"names":["Array"]},"optional":true,"defaultvalue":"[]","description":"<p>the notifications array</p>","name":"state"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"<p>the action. can be <code>SHOW_NOTIFICATION</code>, <code>HIDE_NOTIFICATION</code> or <code>CLEAR_NOTIFICATIONS</code></p>","name":"action"}],"returns":[{"type":{"names":["Array"]},"description":"<p>the modified state</p>"}],"examples":["[{\n uid: 1234,\n title: \"My Notification\",\n level: \"success\",\n action: {\n     \"label\": \"I Agree\"\n }\n}]"],"name":"notifications","longname":"reducers.notifications","kind":"function","scope":"static","$longname":"reducers.notifications"},{"comment":"/**\n * Manages the state of the map search with it's results\n * The properties represent the shape of the state\n * @prop {boolan} loading loading state\n * @prop {object} error the last error, if any\n * @prop {string} searchText the search text\n * @prop {array}  results the results\n * @prop {object} markerPosition  the markerPosition\n * @prop {object} selectedServicess tores the services currently selected by the user\n * @prop {object} selectedItems the selected items\n *\n * @example\n *{\n *  search: {\n *    searchText: 'test',\n *    error: null,\n *    loading: false,\n *    results: [\n *      {\n *        properties: {\n *          place_id: '130504451',\n *          licence: 'Data © OpenStreetMap contributors, ODbL 1.0. http://www.openstreetmap.org/copyright',\n *          osm_type: 'way',\n *          osm_id: '294145572',\n *          lat: '6.82439805',\n *          lon: '81.0004103985287',\n *          display_name: 'test, Bandarawela, Badulla District, Uva, Sri Lanka',\n *          'class': 'landuse',\n *          type: 'forest',\n *          importance: 0.31,\n *        },\n *        id: '294145572',\n *        type: 'Feature',\n *        bbox: [\n *          81.0001165,\n *          6.8238999,\n *          81.0008042,\n *          6.8248084\n *        ],\n *        geometry: {\n *          type: 'Polygon',\n *          coordinates: [\n *              [[ 81.0001165, 6.8242576],\n *              [81.0001892, 6.8245385],\n *              [81.0003879, 6.8248084],\n *              [81.0008042, 6.8241984],\n *              [81.0003606, 6.8238999],\n *              [81.0001165, 6.8242576]\n *            ]]\n *        },\n *        __SERVICE__: {\n *          type: 'nominatim'\n *        },\n *        __PRIORITY__: 0\n *      },\n *    ]\n *  }\n *}\n * @memberof reducers\n */","meta":{"range":[2500,4995],"filename":"search.js","lineno":89,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{"id":"astnode100037976","name":"search","type":"FunctionDeclaration","paramnames":["state","action"]},"vars":{"results":"reducers.search~results","latlng":"reducers.search~latlng","":null}},"description":"<p>Manages the state of the map search with it's results\nThe properties represent the shape of the state</p>","properties":[{"type":{"names":["object"]},"description":"<p>the last error, if any</p>","name":"error"},{"type":{"names":["boolan"]},"description":"<p>loading state</p>","name":"loading"},{"type":{"names":["object"]},"description":"<p>the markerPosition</p>","name":"markerPosition"},{"type":{"names":["array"]},"description":"<p>the results</p>","name":"results"},{"type":{"names":["string"]},"description":"<p>the search text</p>","name":"searchText"},{"type":{"names":["object"]},"description":"<p>the selected items</p>","name":"selectedItems"},{"type":{"names":["object"]},"description":"<p>tores the services currently selected by the user</p>","name":"selectedServicess"}],"examples":["{\n search: {\n   searchText: 'test',\n   error: null,\n   loading: false,\n   results: [\n     {\n       properties: {\n         place_id: '130504451',\n         licence: 'Data © OpenStreetMap contributors, ODbL 1.0. http://www.openstreetmap.org/copyright',\n         osm_type: 'way',\n         osm_id: '294145572',\n         lat: '6.82439805',\n         lon: '81.0004103985287',\n         display_name: 'test, Bandarawela, Badulla District, Uva, Sri Lanka',\n         'class': 'landuse',\n         type: 'forest',\n         importance: 0.31,\n       },\n       id: '294145572',\n       type: 'Feature',\n       bbox: [\n         81.0001165,\n         6.8238999,\n         81.0008042,\n         6.8248084\n       ],\n       geometry: {\n         type: 'Polygon',\n         coordinates: [\n             [[ 81.0001165, 6.8242576],\n             [81.0001892, 6.8245385],\n             [81.0003879, 6.8248084],\n             [81.0008042, 6.8241984],\n             [81.0003606, 6.8238999],\n             [81.0001165, 6.8242576]\n           ]]\n       },\n       __SERVICE__: {\n         type: 'nominatim'\n       },\n       __PRIORITY__: 0\n     },\n   ]\n }\n}"],"memberof":"reducers","name":"search","longname":"reducers.search","kind":"function","scope":"static","params":[],"$longname":"reducers.search"},{"comment":"/**\n * Provides state for the timeline. Example:\n * ```\n * {\n *     settings: {\n *         autoSelect: true // true by defaults, if set the first layer available will be selected on startup\n *         showHiddenLayers: true // false by default. If set to false, the guide layers will be in sync with time layer's visibility in TOC and automatically switches to the next available guide layer (if snap to guide layer is enabled)\n *         snapType: \"start\" // start by default. If set to \"end\" the timeline cursor will snap to the end of the interval when changed\n *         endValuesSupport: undefined // undefined by default. If set to true the snap to (start/end) radio button will appear, both snapping are supported\n *     },\n *     range: {\n *         start: // start date of the current range\n *         end: // end date of the current range\n *     }\n *     loading: {\n *          layerID_1: false // map of loading flags for layer time data\n *     },\n *     rangeData: {\n *          // one entry for each layer ID\n *          layerID_1: {\n *              range: {\n *                  start: \"2016-04-13T14:48:32.048Z\",\n *                  end: \"2017-08-01T16:57:10.726Z\"\n *              },\n *              histogram: {\n *                  values: [0, 10, 2, 6, 0, 20] // values of the histogram\n *                  domain: \"2016-09-01T00:00:00.000Z/2017-04-11T00:00:00.000Z/PT570H\" // format: START/END/RESOLUTION\n *              },\n *              domain: {\n *                   values: [ // domain values in ISO FORMAT\n *              }\n *                      '2016-12-17T00:00:00.000Z',\n *                      '2016-12-18T00:00:00.000Z',\n *                      '2016-12-20T00:00:00.000Z',\n *                      '2017-01-05T00:00:00.000Z']\n *          }\n *     }\n * }\n * ```\n * @memberof reducers\n * @name timeline\n * @param {object} state the previous state\n * @param {action} action\n\n */","meta":{"filename":"timeline.js","lineno":19,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/reducers","code":{}},"description":"<p>Provides state for the timeline. Example:</p>\n<pre class=\"prettyprint source\"><code>{\n    settings: {\n        autoSelect: true // true by defaults, if set the first layer available will be selected on startup\n        showHiddenLayers: true // false by default. If set to false, the guide layers will be in sync with time layer's visibility in TOC and automatically switches to the next available guide layer (if snap to guide layer is enabled)\n        snapType: &quot;start&quot; // start by default. If set to &quot;end&quot; the timeline cursor will snap to the end of the interval when changed\n        endValuesSupport: undefined // undefined by default. If set to true the snap to (start/end) radio button will appear, both snapping are supported\n    },\n    range: {\n        start: // start date of the current range\n        end: // end date of the current range\n    }\n    loading: {\n         layerID_1: false // map of loading flags for layer time data\n    },\n    rangeData: {\n         // one entry for each layer ID\n         layerID_1: {\n             range: {\n                 start: &quot;2016-04-13T14:48:32.048Z&quot;,\n                 end: &quot;2017-08-01T16:57:10.726Z&quot;\n             },\n             histogram: {\n                 values: [0, 10, 2, 6, 0, 20] // values of the histogram\n                 domain: &quot;2016-09-01T00:00:00.000Z/2017-04-11T00:00:00.000Z/PT570H&quot; // format: START/END/RESOLUTION\n             },\n             domain: {\n                  values: [ // domain values in ISO FORMAT\n             }\n                     '2016-12-17T00:00:00.000Z',\n                     '2016-12-18T00:00:00.000Z',\n                     '2016-12-20T00:00:00.000Z',\n                     '2017-01-05T00:00:00.000Z']\n         }\n    }\n}\n</code></pre>","memberof":"reducers","name":"timeline","params":[{"type":{"names":["object"]},"description":"<p>the previous state</p>","name":"state"},{"type":{"names":["action"]},"name":"action"}],"scope":"static","longname":"reducers.timeline","kind":"member","$longname":"reducers.timeline"}]},{"comment":"/**\n * Register a parser to translate error services\n * @param type {string} name of the service\n * @param parser {object} custom parser of the service\n */","meta":{"range":[5487,5576],"filename":"LocaleUtils.js","lineno":173,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100061583","name":"exports.registerErrorParser","type":"VariableDeclaration"}},"description":"<p>Register a parser to translate error services</p>","params":[{"type":{"names":["string"]},"description":"<p>name of the service</p>","name":"type"},{"type":{"names":["object"]},"description":"<p>custom parser of the service</p>","name":"parser"}],"name":"registerErrorParser","longname":"registerErrorParser","kind":"constant","scope":"global","$longname":"registerErrorParser"},{"comment":"/**\n * Add a tool to the list of event listeners for the map plugin.\n * This can help to trigger actions only if some tool is effectively listen. Useful for\n * events that are triggered frequently and so can slow down the application.\n * @param {string} eventName the event name. One of ``pointermove`,\n * @param {string} toolName an identifier for the tool\n */","meta":{"range":[5536,5667],"filename":"map.js","lineno":210,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029858","name":"exports.registerEventListener","type":"VariableDeclaration"}},"description":"<p>Add a tool to the list of event listeners for the map plugin.\nThis can help to trigger actions only if some tool is effectively listen. Useful for\nevents that are triggered frequently and so can slow down the application.</p>","params":[{"type":{"names":["string"]},"description":"<p>the event name. One of ``pointermove`,</p>","name":"eventName"},{"type":{"names":["string"]},"description":"<p>an identifier for the tool</p>","name":"toolName"}],"name":"registerEventListener","longname":"registerEventListener","kind":"constant","scope":"global","$longname":"registerEventListener"},{"comment":"/**\n * Remove all query from url and hash\n * @param  {string} url the current context\n * @return {string}     the current context without query params\n */","meta":{"range":[3309,3678],"filename":"ShareUtils.js","lineno":100,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100068826","name":"exports.removeQueryFromUrl","type":"VariableDeclaration"}},"description":"<p>Remove all query from url and hash</p>","params":[{"type":{"names":["string"]},"description":"<p>the current context</p>","name":"url"}],"returns":[{"type":{"names":["string"]},"description":"<p>the current context without query params</p>"}],"name":"removeQueryFromUrl","longname":"removeQueryFromUrl","kind":"constant","scope":"global","$longname":"removeQueryFromUrl"},{"comment":"/**\n * Removes the WMSFilter from the layer when the feature grid is closed.\n *\n */","meta":{"range":[41510,42410],"filename":"featuregrid.js","lineno":970,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045977","name":"exports.removeWmsFilterOnGridClose","type":"VariableDeclaration"}},"description":"<p>Removes the WMSFilter from the layer when the feature grid is closed.</p>","name":"removeWmsFilterOnGridClose","longname":"removeWmsFilterOnGridClose","kind":"constant","scope":"global","$longname":"removeWmsFilterOnGridClose"},{"comment":"/**\n * Implements synchronization with time dimension for the feature grid.\n * Performs again createQuery when time changes or if timeSync is toggled\n */","meta":{"range":[51463,52713],"filename":"featuregrid.js","lineno":1171,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100046981","name":"exports.replayOnTimeDimensionChange","type":"VariableDeclaration"}},"description":"<p>Implements synchronization with time dimension for the feature grid.\nPerforms again createQuery when time changes or if timeSync is toggled</p>","name":"replayOnTimeDimensionChange","longname":"replayOnTimeDimensionChange","kind":"constant","scope":"global","$longname":"replayOnTimeDimensionChange"},{"comment":"/**\n * Reprojects a bounding box.\n * @param bbox {array} [minx, miny, maxx, maxy]\n * @param source {string} SRS of the given bbox\n * @param dest {string} SRS of the returned bbox\n * @return {array} [minx, miny, maxx, maxy]\n */","meta":{"range":[12852,13633],"filename":"CoordinatesUtils.js","lineno":386,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100056945","name":"exports.reprojectBbox","type":"VariableDeclaration"}},"description":"<p>Reprojects a bounding box.</p>","params":[{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>","name":"bbox"},{"type":{"names":["string"]},"description":"<p>SRS of the given bbox</p>","name":"source"},{"type":{"names":["string"]},"description":"<p>SRS of the returned bbox</p>","name":"dest"}],"returns":[{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>"}],"name":"reprojectBbox","longname":"reprojectBbox","kind":"constant","scope":"global","$longname":"reprojectBbox"},{"comment":"/**\n * Reproject extent from EPSG different from 'EPSG:4326'\n * @param extent {array} array of bounds [minx, miny, maxx, maxy] or isIDL `true` [[..bounds], [..bounds]]\n * @param projection {string} the projection of extent coordinates\n * @param isIDL {boolean} intersect the international date line\n * @return {array} extent\n */","meta":{"range":[6367,6915],"filename":"CoordinatesUtils.js","lineno":196,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100056166","name":"exports.reprojectExtent","type":"VariableDeclaration"}},"description":"<p>Reproject extent from EPSG different from 'EPSG:4326'</p>","params":[{"type":{"names":["array"]},"description":"<p>array of bounds [minx, miny, maxx, maxy] or isIDL <code>true</code> [[..bounds], [..bounds]]</p>","name":"extent"},{"type":{"names":["string"]},"description":"<p>the projection of extent coordinates</p>","name":"projection"},{"type":{"names":["boolean"]},"description":"<p>intersect the international date line</p>","name":"isIDL"}],"returns":[{"type":{"names":["array"]},"description":"<p>extent</p>"}],"name":"reprojectExtent","longname":"reprojectExtent","kind":"constant","scope":"global","$longname":"reprojectExtent"},{"comment":"/**\n * Reprojects a geojson from a crs into another\n */","meta":{"range":[10433,12207],"filename":"CoordinatesUtils.js","lineno":322,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100056656","name":"exports.reprojectGeoJson","type":"VariableDeclaration"}},"description":"<p>Reprojects a geojson from a crs into another</p>","name":"reprojectGeoJson","longname":"reprojectGeoJson","kind":"constant","scope":"global","$longname":"reprojectGeoJson"},{"comment":"/**\n * reset controls on edit mode switch\n */","meta":{"range":[46846,47017],"filename":"featuregrid.js","lineno":1070,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100046429","name":"exports.resetControlsOnEnterInEditMode","type":"VariableDeclaration"}},"description":"<p>reset controls on edit mode switch</p>","name":"resetControlsOnEnterInEditMode","longname":"resetControlsOnEnterInEditMode","kind":"constant","scope":"global","$longname":"resetControlsOnEnterInEditMode"},{"comment":"/**\n * Restores the view mode on location change.\n * This forces to view mode and turn all tools to initial state.\n */","meta":{"range":[39377,39782],"filename":"featuregrid.js","lineno":924,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100045712","name":"exports.resetGridOnLocationChange","type":"VariableDeclaration"}},"description":"<p>Restores the view mode on location change.\nThis forces to view mode and turn all tools to initial state.</p>","name":"resetGridOnLocationChange","longname":"resetGridOnLocationChange","kind":"constant","scope":"global","$longname":"resetGridOnLocationChange"},{"comment":"/**\n * Restores last 2D map type when switch to a context where maptype is not\n * in the URL.\n */","meta":{"range":[3211,3720],"filename":"maptype.js","lineno":70,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100049694","name":"exports.restore2DMapTypeOnLocationChange","type":"VariableDeclaration"}},"description":"<p>Restores last 2D map type when switch to a context where maptype is not\nin the URL.</p>","name":"restore2DMapTypeOnLocationChange","longname":"restore2DMapTypeOnLocationChange","kind":"constant","scope":"global","$longname":"restore2DMapTypeOnLocationChange"},{"comment":"/**\n * choose to round or floor value incase of 0 fractional digits\n * @return {number} the rounded value or the original one\n*/","meta":{"range":[32836,33083],"filename":"CoordinatesUtils.js","lineno":939,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100059910","name":"exports.roundCoord","type":"VariableDeclaration"}},"description":"<p>choose to round or floor value incase of 0 fractional digits</p>","returns":[{"type":{"names":["number"]},"description":"<p>the rounded value or the original one</p>"}],"name":"roundCoord","longname":"roundCoord","kind":"constant","scope":"global","$longname":"roundCoord"},{"comment":"/**\n * trigger WFS transaction stream on SAVE_CHANGES action\n */","meta":{"range":[30277,31078],"filename":"featuregrid.js","lineno":711,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100044725","name":"exports.savePendingFeatureGridChanges","type":"VariableDeclaration"}},"description":"<p>trigger WFS transaction stream on SAVE_CHANGES action</p>","name":"savePendingFeatureGridChanges","longname":"savePendingFeatureGridChanges","kind":"constant","scope":"global","$longname":"savePendingFeatureGridChanges"},{"comment":"/**\n * Gets every `SEARCH_WITH_FILTER` event.\n * Triggers a GetFeature with a subsequent getFeatureInfo with a point taken from geometry of first feature retrieved\n*/","meta":{"range":[15211,17165],"filename":"search.js","lineno":292,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100051082","name":"exports.searchOnStartEpic","type":"VariableDeclaration"}},"description":"<p>Gets every <code>SEARCH_WITH_FILTER</code> event.\nTriggers a GetFeature with a subsequent getFeatureInfo with a point taken from geometry of first feature retrieved</p>","name":"searchOnStartEpic","longname":"searchOnStartEpic","kind":"constant","scope":"global","$longname":"searchOnStartEpic"},{"comment":"/**\n * React/Redux selectors.\n * @see {@link https://github.com/reactjs/reselect|Reselect} for details\n * @name selectors\n *\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{}},"description":"<p>React/Redux selectors.</p>","see":["{@link https://github.com/reactjs/reselect|Reselect} for details"],"name":"selectors","longname":"selectors","kind":"member","scope":"global","$longname":"selectors","$members":[{"comment":"/**\n * selects featuregrid state\n * @name featuregrid\n * @memberof selectors\n * @static\n */","meta":{"filename":"featuregrid.js","lineno":76,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{}},"description":"<p>selects featuregrid state</p>","name":"featuregrid","memberof":"selectors","scope":"static","longname":"selectors.featuregrid","kind":"member","$longname":"selectors.featuregrid","$members":[{"comment":"/**\n * get a filter for an attribute\n * @memberof selectors.featuregrid\n * @param  {object} state Application's state\n * @param  {string} name  The name of the attribute\n * @return {object}       The filter for the attribute\n */","meta":{"range":[4190,4279],"filename":"featuregrid.js","lineno":99,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100031572","name":"exports.getAttributeFilter","type":"VariableDeclaration"}},"description":"<p>get a filter for an attribute</p>","memberof":"selectors.featuregrid","params":[{"type":{"names":["object"]},"description":"<p>Application's state</p>","name":"state"},{"type":{"names":["string"]},"description":"<p>The name of the attribute</p>","name":"name"}],"returns":[{"type":{"names":["object"]},"description":"<p>The filter for the attribute</p>"}],"name":"exports.getAttributeFilter","longname":"selectors.featuregrid.exports.getAttributeFilter","kind":"constant","scope":"static","$longname":"selectors.featuregrid.exports.getAttributeFilter"},{"comment":"/**\n * check if the feature geometry is supported for editing\n * @function\n * @memberof selectors.featuregrid\n * @param  {object}  state applications state\n * @return {boolean}       true if the geometry is supported, false otherwise\n */","meta":{"range":[6817,6901],"filename":"featuregrid.js","lineno":154,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100031861","name":"exports.getDockSize","type":"VariableDeclaration"}},"description":"<p>check if the feature geometry is supported for editing</p>","kind":"function","memberof":"selectors.featuregrid","params":[{"type":{"names":["object"]},"description":"<p>applications state</p>","name":"state"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>true if the geometry is supported, false otherwise</p>"}],"name":"exports.getDockSize","longname":"selectors.featuregrid.exports.getDockSize","scope":"static","$longname":"selectors.featuregrid.exports.getDockSize"},{"comment":"/**\n * Get's the title of the selected layer\n * @memberof selectors.featuregrid\n * @param  {object} state the application's state\n * @return {startDrawingFeature} the title of the current selected layer\n */","meta":{"range":[4487,4710],"filename":"featuregrid.js","lineno":106,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100031585","name":"exports.getTitleSelector","type":"VariableDeclaration"}},"description":"<p>Get's the title of the selected layer</p>","memberof":"selectors.featuregrid","params":[{"type":{"names":["object"]},"description":"<p>the application's state</p>","name":"state"}],"returns":[{"type":{"names":["startDrawingFeature"]},"description":"<p>the title of the current selected layer</p>"}],"name":"exports.getTitleSelector","longname":"selectors.featuregrid.exports.getTitleSelector","kind":"constant","scope":"static","$longname":"selectors.featuregrid.exports.getTitleSelector"},{"comment":"/**\n * selects the state of featuregrid open\n * @memberof selectors.featuregrid\n * @param  {object}  state applications state\n * @return {Boolean}       true if the featuregrid is open, false otherwise\n */","meta":{"range":[3864,3959],"filename":"featuregrid.js","lineno":90,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100031555","name":"exports.isFeatureGridOpen","type":"VariableDeclaration"}},"description":"<p>selects the state of featuregrid open</p>","memberof":"selectors.featuregrid","params":[{"type":{"names":["object"]},"description":"<p>applications state</p>","name":"state"}],"returns":[{"type":{"names":["Boolean"]},"description":"<p>true if the featuregrid is open, false otherwise</p>"}],"name":"exports.isFeatureGridOpen","longname":"selectors.featuregrid.exports.isFeatureGridOpen","kind":"constant","scope":"static","$longname":"selectors.featuregrid.exports.isFeatureGridOpen"},{"comment":"/**\n * get selected layer name\n * @function\n * @memberof selectors.featuregrid\n * @param  {object}  state applications state\n * @return {string}       name of selected layer\n */","meta":{"range":[7080,7244],"filename":"featuregrid.js","lineno":162,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100031876","name":"exports.selectedLayerNameSelector","type":"VariableDeclaration"}},"description":"<p>get selected layer name</p>","kind":"function","memberof":"selectors.featuregrid","params":[{"type":{"names":["object"]},"description":"<p>applications state</p>","name":"state"}],"returns":[{"type":{"names":["string"]},"description":"<p>name of selected layer</p>"}],"name":"exports.selectedLayerNameSelector","longname":"selectors.featuregrid.exports.selectedLayerNameSelector","scope":"static","$longname":"selectors.featuregrid.exports.selectedLayerNameSelector"}]},{"comment":"/**\n * selects floatinglegend state\n * @name floatinglegend\n * @memberof selectors\n * @static\n */","meta":{"filename":"floatinglegend.js","lineno":9,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{}},"description":"<p>selects floatinglegend state</p>","name":"floatinglegend","memberof":"selectors","scope":"static","longname":"selectors.floatinglegend","kind":"member","$longname":"selectors.floatinglegend","$members":[{"comment":"/**\n * Get expanded state of floatinglegend\n * @function\n * @memberof selectors.floatinglegend\n * @param  {object} state the state\n * @return {boolean}\n */","meta":{"range":[745,861],"filename":"floatinglegend.js","lineno":32,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032039","name":"exports.legendExpandedSelector","type":"VariableDeclaration"}},"description":"<p>Get expanded state of floatinglegend</p>","kind":"function","memberof":"selectors.floatinglegend","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["boolean"]}}],"name":"exports.legendExpandedSelector","longname":"selectors.floatinglegend.exports.legendExpandedSelector","scope":"static","$longname":"selectors.floatinglegend.exports.legendExpandedSelector"},{"comment":"/**\n * Get size of floatinglegend\n * @function\n * @memberof selectors.floatinglegend\n * @param  {object} state the state\n * @return {object} size {width: 0, height: 0}\n */","meta":{"range":[470,588],"filename":"floatinglegend.js","lineno":24,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032018","name":"exports.legendSizeSelector","type":"VariableDeclaration"}},"description":"<p>Get size of floatinglegend</p>","kind":"function","memberof":"selectors.floatinglegend","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>size {width: 0, height: 0}</p>"}],"name":"exports.legendSizeSelector","longname":"selectors.floatinglegend.exports.legendSizeSelector","scope":"static","$longname":"selectors.floatinglegend.exports.legendSizeSelector"}]},{"comment":"/**\n * selects map state\n * @name map\n * @memberof selectors\n * @static\n */","meta":{"filename":"map.js","lineno":15,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{}},"description":"<p>selects map state</p>","name":"map","memberof":"selectors","scope":"static","longname":"selectors.map","kind":"member","$longname":"selectors.map","$members":[{"comment":"/**\n * Get name/title of the map\n * @function\n * @memberof selectors.map\n * @param  {object} state the state\n * @return {string} name/title of the map\n */","meta":{"range":[4012,4148],"filename":"map.js","lineno":97,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032474","name":"exports.mapNameSelector","type":"VariableDeclaration"}},"description":"<p>Get name/title of the map</p>","kind":"function","memberof":"selectors.map","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["string"]},"description":"<p>name/title of the map</p>"}],"name":"exports.mapNameSelector","longname":"selectors.map.exports.mapNameSelector","scope":"static","$longname":"selectors.map.exports.mapNameSelector"},{"comment":"/**\n * get the current map configuration from state\n * @function\n * @memberof selectors.map\n * @param  {object} state the state\n * @return {object} the map configuration\n */","meta":{"range":[649,775],"filename":"map.js","lineno":29,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032077","name":"exports.mapSelector","type":"VariableDeclaration"}},"description":"<p>get the current map configuration from state</p>","kind":"function","memberof":"selectors.map","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>the map configuration</p>"}],"name":"exports.mapSelector","longname":"selectors.map.exports.mapSelector","scope":"static","$longname":"selectors.map.exports.mapSelector"},{"comment":"/**\n * Get version of the map\n * @function\n * @memberof selectors.map\n * @param  {object} state the state\n * @return {number} version of the map\n */","meta":{"range":[3746,3856],"filename":"map.js","lineno":89,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032449","name":"exports.mapVersionSelector","type":"VariableDeclaration"}},"description":"<p>Get version of the map</p>","kind":"function","memberof":"selectors.map","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["number"]},"description":"<p>version of the map</p>"}],"name":"exports.mapVersionSelector","longname":"selectors.map.exports.mapVersionSelector","scope":"static","$longname":"selectors.map.exports.mapVersionSelector"},{"comment":"/**\n * Get the scales of the current map\n * @function\n * @memberof selectors.map\n * @param  {object} state the state\n * @return {number[]} the scales of the map\n */","meta":{"range":[3163,3596],"filename":"map.js","lineno":71,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032396","name":"exports.scalesSelector","type":"VariableDeclaration"}},"description":"<p>Get the scales of the current map</p>","kind":"function","memberof":"selectors.map","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["Array.<number>"]},"description":"<p>the scales of the map</p>"}],"name":"exports.scalesSelector","longname":"selectors.map.exports.scalesSelector","scope":"static","$longname":"selectors.map.exports.scalesSelector"}]},{"comment":"/**\n * selects mapinfo state\n * @name mapinfo\n * @memberof selectors\n * @static\n */","meta":{"filename":"mapInfo.js","lineno":18,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{}},"description":"<p>selects mapinfo state</p>","name":"mapinfo","memberof":"selectors","scope":"static","longname":"selectors.mapinfo","kind":"member","$longname":"selectors.mapinfo","$members":[{"comment":"/**\n * selects generalInfoFormat from state\n * @memberof selectors.mapinfo\n * @param  {object} state the state\n * @return {string}       the maptype in the state\n */","meta":{"range":[1537,1650],"filename":"mapInfo.js","lineno":51,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032756","name":"exports.generalInfoFormatSelector","type":"VariableDeclaration"}},"description":"<p>selects generalInfoFormat from state</p>","memberof":"selectors.mapinfo","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["string"]},"description":"<p>the maptype in the state</p>"}],"name":"exports.generalInfoFormatSelector","longname":"selectors.mapinfo.exports.generalInfoFormatSelector","kind":"constant","scope":"static","$longname":"selectors.mapinfo.exports.generalInfoFormatSelector"},{"comment":"/**\n  * Get mapinfo requests from state\n  * @function\n  * @memberof selectors.mapinfo\n  * @param  {object} state the state\n  * @return {object} the mapinfo requests\n  */","meta":{"range":[1004,1089],"filename":"mapInfo.js","lineno":37,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032715","name":"exports.mapInfoRequestsSelector","type":"VariableDeclaration"}},"description":"<p>Get mapinfo requests from state</p>","kind":"function","memberof":"selectors.mapinfo","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>the mapinfo requests</p>"}],"name":"exports.mapInfoRequestsSelector","longname":"selectors.mapinfo.exports.mapInfoRequestsSelector","scope":"static","$longname":"selectors.mapinfo.exports.mapInfoRequestsSelector"},{"comment":"/**\n * selects stopGetFeatureInfo from state\n * @memberof selectors.mapinfo\n * @param  {object} state the state\n * @return {boolean} true if the get feature info has to stop the request\n */","meta":{"range":[3352,3820],"filename":"mapInfo.js","lineno":81,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100032954","name":"exports.stopGetFeatureInfoSelector","type":"VariableDeclaration"}},"description":"<p>selects stopGetFeatureInfo from state</p>","memberof":"selectors.mapinfo","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>true if the get feature info has to stop the request</p>"}],"name":"exports.stopGetFeatureInfoSelector","longname":"selectors.mapinfo.exports.stopGetFeatureInfoSelector","kind":"constant","scope":"static","$longname":"selectors.mapinfo.exports.stopGetFeatureInfoSelector"}]},{"comment":"/**\n * selects map layout state\n * @name mapLayout\n * @memberof selectors\n * @static\n */","meta":{"filename":"maplayout.js","lineno":14,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{}},"description":"<p>selects map layout state</p>","name":"mapLayout","memberof":"selectors","scope":"static","longname":"selectors.mapLayout","kind":"member","$longname":"selectors.mapLayout","$members":[{"comment":"/**\n * Check if bottom panel is open\n * @function\n * @memberof selectors.mapLayout\n * @param  {object} state the state\n * @return {boolean} returns true if bottom panel is open\n */","meta":{"range":[3899,4191],"filename":"maplayout.js","lineno":122,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033610","name":"exports.bottomPanelOpenSelector","type":"VariableDeclaration"}},"description":"<p>Check if bottom panel is open</p>","kind":"function","memberof":"selectors.mapLayout","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>returns true if bottom panel is open</p>"}],"name":"exports.bottomPanelOpenSelector","longname":"selectors.mapLayout.exports.bottomPanelOpenSelector","scope":"static","$longname":"selectors.mapLayout.exports.bottomPanelOpenSelector"},{"comment":"/**\n * Get map layout bounds left, top, bottom and right\n * @function\n * @memberof selectors.mapLayout\n * @param  {object} state the state\n * @return {object} boundingMapRect {left, top, bottom, right}\n */","meta":{"range":[952,1059],"filename":"maplayout.js","lineno":38,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033373","name":"exports.boundingMapRectSelector","type":"VariableDeclaration"}},"description":"<p>Get map layout bounds left, top, bottom and right</p>","kind":"function","memberof":"selectors.mapLayout","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>boundingMapRect {left, top, bottom, right}</p>"}],"name":"exports.boundingMapRectSelector","longname":"selectors.mapLayout.exports.boundingMapRectSelector","scope":"static","$longname":"selectors.mapLayout.exports.boundingMapRectSelector"},{"comment":"/**\n * Get map layout bounds left, top, bottom and right\n * @function\n * @memberof selectors.mapLayout\n * @param  {object} state the state\n * @return {object} boundingMapRect {left, top, bottom, right}\n */","meta":{"range":[1267,1382],"filename":"maplayout.js","lineno":47,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033390","name":"exports.boundingSidebarRectSelector","type":"VariableDeclaration"}},"description":"<p>Get map layout bounds left, top, bottom and right</p>","kind":"function","memberof":"selectors.mapLayout","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>boundingMapRect {left, top, bottom, right}</p>"}],"name":"exports.boundingSidebarRectSelector","longname":"selectors.mapLayout.exports.boundingSidebarRectSelector","scope":"static","$longname":"selectors.mapLayout.exports.boundingSidebarRectSelector"},{"comment":"/**\n * Check if conditions match with the current layout\n * @function\n * @memberof selectors.mapLayout\n * @param  {object} state the state\n * @param  {array} conditions array of object, [{ key: 'left', value: 300 }, { key: 'right', value: 0, type: 'not' }]\n * @return {boolean} returns true if the layout attributes match with the provided conditions\n */","meta":{"range":[2782,3146],"filename":"maplayout.js","lineno":82,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033513","name":"exports.checkConditionsSelector","type":"VariableDeclaration"}},"description":"<p>Check if conditions match with the current layout</p>","kind":"function","memberof":"selectors.mapLayout","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"},{"type":{"names":["array"]},"description":"<p>array of object, [{ key: 'left', value: 300 }, { key: 'right', value: 0, type: 'not' }]</p>","name":"conditions"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>returns true if the layout attributes match with the provided conditions</p>"}],"name":"exports.checkConditionsSelector","longname":"selectors.mapLayout.exports.checkConditionsSelector","scope":"static","$longname":"selectors.mapLayout.exports.checkConditionsSelector"},{"comment":"/**\n * Check if left panels are open\n * @function\n * @memberof selectors.mapLayout\n * @param  {object} state the state\n * @return {boolean} returns true if left panels are open\n */","meta":{"range":[3616,3716],"filename":"maplayout.js","lineno":111,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033599","name":"exports.leftPanelOpenSelector","type":"VariableDeclaration"}},"description":"<p>Check if left panels are open</p>","kind":"function","memberof":"selectors.mapLayout","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>returns true if left panels are open</p>"}],"name":"exports.leftPanelOpenSelector","longname":"selectors.mapLayout.exports.leftPanelOpenSelector","scope":"static","$longname":"selectors.mapLayout.exports.leftPanelOpenSelector"},{"comment":"/**\n * Get map layout bounds and style\n * @function\n * @memberof selectors.mapLayout\n * @param  {object} state the state\n * @return {object} the layout of the map\n */","meta":{"range":[652,744],"filename":"maplayout.js","lineno":29,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033356","name":"exports.mapLayoutSelector","type":"VariableDeclaration"}},"description":"<p>Get map layout bounds and style</p>","kind":"function","memberof":"selectors.mapLayout","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>the layout of the map</p>"}],"name":"exports.mapLayoutSelector","longname":"selectors.mapLayout.exports.mapLayoutSelector","scope":"static","$longname":"selectors.mapLayout.exports.mapLayoutSelector"},{"comment":"/**\n * Retrieve only specific attribute from map layout\n * @function\n * @memberof selectors.mapLayout\n * @param  {object} state the state\n * @param  {object} attributes attributes to retrieve, bool {left: true}\n * @param  {boolean} isDock flag to use dock paddings instead of toolbar paddings\n * @return {object} selected attributes of layout of the map\n */","meta":{"range":[1742,2425],"filename":"maplayout.js","lineno":58,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033407","name":"exports.mapLayoutValuesSelector","type":"VariableDeclaration"}},"description":"<p>Retrieve only specific attribute from map layout</p>","kind":"function","memberof":"selectors.mapLayout","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"},{"type":{"names":["object"]},"description":"<p>attributes to retrieve, bool {left: true}</p>","name":"attributes"},{"type":{"names":["boolean"]},"description":"<p>flag to use dock paddings instead of toolbar paddings</p>","name":"isDock"}],"returns":[{"type":{"names":["object"]},"description":"<p>selected attributes of layout of the map</p>"}],"name":"exports.mapLayoutValuesSelector","longname":"selectors.mapLayout.exports.mapLayoutValuesSelector","scope":"static","$longname":"selectors.mapLayout.exports.mapLayoutValuesSelector"},{"comment":"/**\n * Check if right panels are open\n * @function\n * @memberof selectors.mapLayout\n * @param  {object} state the state\n * @return {boolean} returns true if right panels are open\n */","meta":{"range":[3331,3433],"filename":"maplayout.js","lineno":100,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033588","name":"exports.rightPanelOpenSelector","type":"VariableDeclaration"}},"description":"<p>Check if right panels are open</p>","kind":"function","memberof":"selectors.mapLayout","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>returns true if right panels are open</p>"}],"name":"exports.rightPanelOpenSelector","longname":"selectors.mapLayout.exports.rightPanelOpenSelector","scope":"static","$longname":"selectors.mapLayout.exports.rightPanelOpenSelector"}]},{"comment":"/**\n * selects maptype state\n * @name maptype\n * @memberof selectors\n * @static\n */","meta":{"filename":"maptype.js","lineno":10,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{}},"description":"<p>selects maptype state</p>","name":"maptype","memberof":"selectors","scope":"static","longname":"selectors.maptype","kind":"member","$longname":"selectors.maptype","$members":[{"comment":"/**\n * Check if the mapType is cesium\n * @function\n * @memberof selectors.maptype\n * @param  {object} state the state\n * @return {boolean}\n */","meta":{"range":[813,882],"filename":"maptype.js","lineno":33,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033773","name":"exports.isCesium","type":"VariableDeclaration"}},"description":"<p>Check if the mapType is cesium</p>","kind":"function","memberof":"selectors.maptype","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["boolean"]}}],"name":"exports.isCesium","longname":"selectors.maptype.exports.isCesium","scope":"static","$longname":"selectors.maptype.exports.isCesium"},{"comment":"/**\n * selects maptype from state\n * @memberof selectors.maptype\n * @param  {object} state the state\n * @return {string}       the maptype in the state\n */","meta":{"range":[469,572],"filename":"maptype.js","lineno":23,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033737","name":"exports.mapTypeSelector","type":"VariableDeclaration"}},"description":"<p>selects maptype from state</p>","memberof":"selectors.maptype","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["string"]},"description":"<p>the maptype in the state</p>"}],"name":"exports.mapTypeSelector","longname":"selectors.maptype.exports.mapTypeSelector","kind":"constant","scope":"static","$longname":"selectors.maptype.exports.mapTypeSelector"}]},{"comment":"/**\n * selects tutorial state\n * @name tutorial\n * @memberof selectors\n * @static\n */","meta":{"filename":"tutorial.js","lineno":9,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{}},"description":"<p>selects tutorial state</p>","name":"tutorial","memberof":"selectors","scope":"static","longname":"selectors.tutorial","kind":"member","$longname":"selectors.tutorial","$members":[{"comment":"/**\n * selects tutorial from state\n * @memberof selectors.tutorial\n * @param  {object} state the state\n * @return {object}       the tutorial in the state\n */","meta":{"range":[444,511],"filename":"tutorial.js","lineno":22,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033820","name":"exports.tutorialSelector","type":"VariableDeclaration"}},"description":"<p>selects tutorial from state</p>","memberof":"selectors.tutorial","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>the tutorial in the state</p>"}],"name":"exports.tutorialSelector","longname":"selectors.tutorial.exports.tutorialSelector","kind":"constant","scope":"static","$longname":"selectors.tutorial.exports.tutorialSelector"}]}]},{"comment":"/**\n * server error notification\n*/","meta":{"range":[7816,7994],"filename":"search.js","lineno":305,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100031079","name":"exports.serverError","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>server error notification</p>","name":"serverError","longname":"serverError","kind":"function","scope":"global","$longname":"serverError"},{"comment":"/**\n * Triggers zoomToExtent and GFI panel for an item\n * @param {object} item target item\n */","meta":{"range":[5881,5961],"filename":"search.js","lineno":213,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100030984","name":"exports.showGFI","type":"VariableDeclaration"}},"description":"<p>Triggers zoomToExtent and GFI panel for an item</p>","params":[{"type":{"names":["object"]},"description":"<p>target item</p>","name":"item"}],"name":"showGFI","longname":"showGFI","kind":"constant","scope":"global","$longname":"showGFI"},{"comment":"/**\n * determines if the time sync button should be shown\n */","meta":{"range":[5524,5814],"filename":"featuregrid.js","lineno":130,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100031718","name":"exports.showTimeSync","type":"VariableDeclaration"}},"description":"<p>determines if the time sync button should be shown</p>","name":"showTimeSync","longname":"showTimeSync","kind":"constant","scope":"global","$longname":"showTimeSync"},{"comment":"/**\n     * It returns an object of the same structure of the initialState but replacing strings like \"{someExpression}\" with the result of the expression between brackets.\n     * @param {object} state the object to parse\n     * @param {object} context context for expression\n     * @return {object} the modified object\n    */","meta":{"range":[6782,7267],"filename":"StandardApp.jsx","lineno":185,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/app","code":{"id":"astnode100002923","name":"parseInitialState","type":"ClassProperty"}},"description":"<p>It returns an object of the same structure of the initialState but replacing strings like &quot;{someExpression}&quot; with the result of the expression between brackets.</p>","params":[{"type":{"names":["object"]},"description":"<p>the object to parse</p>","name":"state"},{"type":{"names":["object"]},"description":"<p>context for expression</p>","name":"context"}],"returns":[{"type":{"names":["object"]},"description":"<p>the modified object</p>"}],"name":"parseInitialState","longname":"StandardApp#parseInitialState","kind":"member","memberof":"StandardApp","scope":"instance","$longname":"StandardApp#parseInitialState"},{"comment":"/**\n * start sync filter with wms layer\n *\n * Since the CQL_FILTER must be projected in the native crs of the layer\n * if this info is missing and sync is active we need to perform a getCapabilites\n * to the single layer in order to fetch this data. see #2210 issue.\n */","meta":{"range":[47481,47660],"filename":"featuregrid.js","lineno":1085,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100046485","name":"exports.startSyncWmsFilter","type":"VariableDeclaration"}},"description":"<p>start sync filter with wms layer</p>\n<p>Since the CQL_FILTER must be projected in the native crs of the layer\nif this info is missing and sync is active we need to perform a getCapabilites\nto the single layer in order to fetch this data. see #2210 issue.</p>","name":"startSyncWmsFilter","longname":"startSyncWmsFilter","kind":"constant","scope":"global","$longname":"startSyncWmsFilter"},{"comment":"/**\n * stop sync filter with wms layer\n */","meta":{"range":[47704,47966],"filename":"featuregrid.js","lineno":1092,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100046512","name":"exports.stopSyncWmsFilter","type":"VariableDeclaration"}},"description":"<p>stop sync filter with wms layer</p>","name":"stopSyncWmsFilter","longname":"stopSyncWmsFilter","kind":"constant","scope":"global","$longname":"stopSyncWmsFilter"},{"comment":"/**\n * It changes the Geostory tutorial when changing mode only\n * when changing to edit the tutorial is shown if not disabled\n*/","meta":{"range":[5021,6016],"filename":"tutorial.js","lineno":106,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100051775","name":"exports.switchGeostoryTutorialEpic","type":"VariableDeclaration"}},"description":"<p>It changes the Geostory tutorial when changing mode only\nwhen changing to edit the tutorial is shown if not disabled</p>","name":"switchGeostoryTutorialEpic","longname":"switchGeostoryTutorialEpic","kind":"constant","scope":"global","$longname":"switchGeostoryTutorialEpic"},{"comment":"/**\n * Sync map with filter.\n *\n */","meta":{"range":[48350,49146],"filename":"featuregrid.js","lineno":1110,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100046591","name":"exports.syncMapWmsFilter","type":"VariableDeclaration"}},"description":"<p>Sync map with filter.</p>","name":"syncMapWmsFilter","longname":"syncMapWmsFilter","kind":"constant","scope":"global","$longname":"syncMapWmsFilter"},{"comment":"/**\n * Handles show GFI button click action.\n */","meta":{"range":[11168,14021],"filename":"search.js","lineno":208,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100050735","name":"exports.textSearchShowGFIEpic","type":"VariableDeclaration"}},"description":"<p>Handles show GFI button click action.</p>","name":"textSearchShowGFIEpic","longname":"textSearchShowGFIEpic","kind":"constant","scope":"global","$longname":"textSearchShowGFIEpic"},{"comment":"/**\n * From projected circle into leaflet circle.\n * @param  {number} radius                   Projected radius\n * @param  {object} center                   `{lng: {number}, lat: {number}}`\n * @param  {String} [projection=\"EPSG:4326\"] projection from where to convert\n * @return {object}                          center and radius of leaflet circle\n */","meta":{"range":[2931,3811],"filename":"DrawSupport.jsx","lineno":81,"columnno":6,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/map/leaflet","code":{"id":"astnode100009660","name":"toLeafletCircle","type":"ArrowFunctionExpression"},"vars":{"leafletCenter":"toLeafletCircle~leafletCenter","checkPoint":"toLeafletCircle~checkPoint","lonRadius":"toLeafletCircle~lonRadius","mRadius":"toLeafletCircle~mRadius"}},"description":"<p>From projected circle into leaflet circle.</p>","params":[{"type":{"names":["number"]},"description":"<p>Projected radius</p>","name":"radius"},{"type":{"names":["object"]},"description":"<p><code>{lng: {number}, lat: {number}}</code></p>","name":"center"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"EPSG:4326\"","description":"<p>projection from where to convert</p>","name":"projection"}],"returns":[{"type":{"names":["object"]},"description":"<p>center and radius of leaflet circle</p>"}],"name":"toLeafletCircle","longname":"toLeafletCircle","kind":"function","scope":"global","$longname":"toLeafletCircle"},{"comment":"/**\n * Converts the leaflet circle into the projected circle (usually in 3857)\n * @param  {number} mRadius leaflet radius of circle\n * @param  {array} center  The center point in EPSG:4326. Array [lng,lat]\n * @return {object}        center and radius of the projected circle\n */","meta":{"range":[1764,2569],"filename":"DrawSupport.jsx","lineno":46,"columnno":6,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/components/map/leaflet","code":{"id":"astnode100009550","name":"toProjectedCircle","type":"ArrowFunctionExpression"},"vars":{"lonRadius":"toProjectedCircle~lonRadius","projCenter":"toProjectedCircle~projCenter","checkPoint":"toProjectedCircle~checkPoint"}},"description":"<p>Converts the leaflet circle into the projected circle (usually in 3857)</p>","params":[{"type":{"names":["number"]},"description":"<p>leaflet radius of circle</p>","name":"mRadius"},{"type":{"names":["array"]},"description":"<p>The center point in EPSG:4326. Array [lng,lat]</p>","name":"center"}],"returns":[{"type":{"names":["object"]},"description":"<p>center and radius of the projected circle</p>"}],"name":"toProjectedCircle","longname":"toProjectedCircle","kind":"function","scope":"global","$longname":"toProjectedCircle"},{"comment":"/**\n * Generate arcs between a series of points\n * @param {number[]} coordinates of points of a LineString reprojected in 4326\n * @param {object} options of the great circle drawMethod\n * npoints: number of points\n * offset: offset controls the likelyhood that lines will be split which cross the dateline. The higher the number the more likely.\n * properties: line feature properties\n * @return {number[]} for each couple of points it creates an arc of 100 points by default\n*/","meta":{"range":[21196,21733],"filename":"CoordinatesUtils.js","lineno":629,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100058161","name":"exports.transformLineToArcs","type":"VariableDeclaration"}},"description":"<p>Generate arcs between a series of points</p>","params":[{"type":{"names":["Array.<number>"]},"description":"<p>of points of a LineString reprojected in 4326</p>","name":"coordinates"},{"type":{"names":["object"]},"description":"<p>of the great circle drawMethod\nnpoints: number of points\noffset: offset controls the likelyhood that lines will be split which cross the dateline. The higher the number the more likely.\nproperties: line feature properties</p>","name":"options"}],"returns":[{"type":{"names":["Array.<number>"]},"description":"<p>for each couple of points it creates an arc of 100 points by default</p>"}],"name":"transformLineToArcs","longname":"transformLineToArcs","kind":"constant","scope":"global","$longname":"transformLineToArcs"},{"comment":"/**\n * Transform a feature that is a circle with Polygon geometry in coordinateCrs to a feature with Circle geometry in mapCrs\n * @param {Feature} feature feature to transform\n * @param {string} mapCrs map's current crs\n * @param {string} [coordinateCrs=mapCrs] crs that feature's coordinates are in\n * @returns {Feature} the transformed feature\n */","meta":{"range":[1165,2355],"filename":"DrawSupportUtils.js","lineno":34,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils/openlayers","code":{"id":"astnode100067198","name":"exports.transformPolygonToCircle","type":"VariableDeclaration"}},"description":"<p>Transform a feature that is a circle with Polygon geometry in coordinateCrs to a feature with Circle geometry in mapCrs</p>","params":[{"type":{"names":["Feature"]},"description":"<p>feature to transform</p>","name":"feature"},{"type":{"names":["string"]},"description":"<p>map's current crs</p>","name":"mapCrs"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"mapCrs","description":"<p>crs that feature's coordinates are in</p>","name":"coordinateCrs"}],"returns":[{"type":{"names":["Feature"]},"description":"<p>the transformed feature</p>"}],"name":"transformPolygonToCircle","longname":"transformPolygonToCircle","kind":"constant","scope":"global","$longname":"transformPolygonToCircle"},{"comment":"/**\n * Remove the listeners added using `registerEventListener` .\n * @param {string} eventName the event name. One of ``pointermove`,\n * @param {string} toolName an identifier for the tool\n */","meta":{"range":[5862,5997],"filename":"map.js","lineno":221,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/actions","code":{"id":"astnode100029872","name":"exports.unRegisterEventListener","type":"VariableDeclaration"}},"description":"<p>Remove the listeners added using <code>registerEventListener</code> .</p>","params":[{"type":{"names":["string"]},"description":"<p>the event name. One of ``pointermove`,</p>","name":"eventName"},{"type":{"names":["string"]},"description":"<p>an identifier for the tool</p>","name":"toolName"}],"name":"unRegisterEventListener","longname":"unRegisterEventListener","kind":"constant","scope":"global","$longname":"unRegisterEventListener"},{"comment":"/**\n * Deactivates every other dock panel at specific location except the one that was open\n * @param action$\n * @param store\n * @returns {Observable<unknown>}\n */","meta":{"range":[7191,9114],"filename":"maplayout.js","lineno":171,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100049217","name":"exports.updateActiveDockEpic","type":"VariableDeclaration"}},"description":"<p>Deactivates every other dock panel at specific location except the one that was open</p>","params":[{"name":"action$"},{"name":"store"}],"returns":[{"type":{"names":["Observable.<unknown>"]}}],"name":"updateActiveDockEpic","longname":"updateActiveDockEpic","kind":"constant","scope":"global","$longname":"updateActiveDockEpic"},{"comment":"/**\n * Keep track of mapType changes and stores the last mapType used, in order to\n */","meta":{"range":[2763,3111],"filename":"maptype.js","lineno":59,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100049636","name":"exports.updateLast2dMapTypeOnChangeEvents","type":"VariableDeclaration"}},"description":"<p>Keep track of mapType changes and stores the last mapType used, in order to</p>","name":"updateLast2dMapTypeOnChangeEvents","longname":"updateLast2dMapTypeOnChangeEvents","kind":"constant","scope":"global","$longname":"updateLast2dMapTypeOnChangeEvents"},{"comment":"/**\n * When some changes has been saved the selected features have\n * to be cleaned up. This because the geometry may have been changed and so\n * the filter may not match with them anymore. Moreover they are highlighted\n * in edit mode, so the position may have been changed.\n * Also the feature grid close should reset selection, whatever events causes it (manual close, widget creation...).\n */","meta":{"range":[30013,30211],"filename":"featuregrid.js","lineno":704,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100044698","name":"exports.updateSelectedOnSaveOrCloseFeatureGrid","type":"VariableDeclaration"}},"description":"<p>When some changes has been saved the selected features have\nto be cleaned up. This because the geometry may have been changed and so\nthe filter may not match with them anymore. Moreover they are highlighted\nin edit mode, so the position may have been changed.\nAlso the feature grid close should reset selection, whatever events causes it (manual close, widget creation...).</p>","name":"updateSelectedOnSaveOrCloseFeatureGrid","longname":"updateSelectedOnSaveOrCloseFeatureGrid","kind":"constant","scope":"global","$longname":"updateSelectedOnSaveOrCloseFeatureGrid"},{"comment":"/**\n * User Session Persistence API.\n * Defines all the API endpoints, and delegates a configurable provider for the implementation.\n * All the endpoints return an Observable.\n *\n * You can register new providers in the Providers object (name -> implementation) and switch to a different\n * implementation setting the UserSession.provider property.\n *\n * Each session has a unique name that identifies it. The name is built from map and user information that allows to\n * identify different sessions for different scenarios (e.g. mapId + userName).\n *\n * When a new session is created, the provider generates a simple id that can be used to identify the session to be updated\n * or removed.\n */","meta":{"range":[1183,2316],"filename":"index.js","lineno":34,"columnno":6,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api/usersession","code":{"id":"astnode100002056","name":"UserSession","type":"ObjectExpression","value":"{\"getSession\":\"\",\"writeSession\":\"\",\"removeSession\":\"\"}"}},"description":"<p>User Session Persistence API.\nDefines all the API endpoints, and delegates a configurable provider for the implementation.\nAll the endpoints return an Observable.</p>\n<p>You can register new providers in the Providers object (name -&gt; implementation) and switch to a different\nimplementation setting the UserSession.provider property.</p>\n<p>Each session has a unique name that identifies it. The name is built from map and user information that allows to\nidentify different sessions for different scenarios (e.g. mapId + userName).</p>\n<p>When a new session is created, the provider generates a simple id that can be used to identify the session to be updated\nor removed.</p>","name":"UserSession","longname":"UserSession","kind":"constant","scope":"global","params":[],"$longname":"UserSession","$members":[{"comment":"/**\n     * Retrieves a session by name.\n     * @param {string} name unique name of the session to fetch.\n     * @returns {Observable} an array of the session id and the session object ([id, session])\n     */","meta":{"range":[1415,1476],"filename":"index.js","lineno":40,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api/usersession","code":{"id":"astnode100002059","name":"getSession","type":"ArrowFunctionExpression"}},"description":"<p>Retrieves a session by name.</p>","params":[{"type":{"names":["string"]},"description":"<p>unique name of the session to fetch.</p>","name":"name"}],"returns":[{"type":{"names":["Observable"]},"description":"<p>an array of the session id and the session object ([id, session])</p>"}],"name":"getSession","longname":"UserSession.getSession","kind":"function","memberof":"UserSession","scope":"static","$longname":"UserSession.getSession"},{"comment":"/**\n     * Removes a session, by id.\n     * @param {*} session identifier\n     * @returns {Observable} id of the removed session\n     */","meta":{"range":[2251,2314],"filename":"index.js","lineno":55,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api/usersession","code":{"id":"astnode100002087","name":"removeSession","type":"ArrowFunctionExpression"}},"description":"<p>Removes a session, by id.</p>","params":[{"type":{"names":["*"]},"description":"<p>identifier</p>","name":"session"}],"returns":[{"type":{"names":["Observable"]},"description":"<p>id of the removed session</p>"}],"name":"removeSession","longname":"UserSession.removeSession","kind":"function","memberof":"UserSession","scope":"static","$longname":"UserSession.removeSession"},{"comment":"/**\n     * Creates a new user session (by name) or updates an existing one (by id)\n     * @param {*} id identifier of the existing session, if undefined or null, a new session will be created\n     * @param {string} name name of the session, to be used to fetch the session with getSession, mandatory\n     * @param {string} user identifier of the current user (needed by some provider)\n     * @param {object} session session to be persisted\n     * @returns {Observable} identifier of the created / updated\n     */","meta":{"range":[1999,2104],"filename":"index.js","lineno":49,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/api/usersession","code":{"id":"astnode100002070","name":"writeSession","type":"ArrowFunctionExpression"}},"description":"<p>Creates a new user session (by name) or updates an existing one (by id)</p>","params":[{"type":{"names":["*"]},"description":"<p>identifier of the existing session, if undefined or null, a new session will be created</p>","name":"id"},{"type":{"names":["string"]},"description":"<p>name of the session, to be used to fetch the session with getSession, mandatory</p>","name":"name"},{"type":{"names":["string"]},"description":"<p>identifier of the current user (needed by some provider)</p>","name":"user"},{"type":{"names":["object"]},"description":"<p>session to be persisted</p>","name":"session"}],"returns":[{"type":{"names":["Observable"]},"description":"<p>identifier of the created / updated</p>"}],"name":"writeSession","longname":"UserSession.writeSession","kind":"function","memberof":"UserSession","scope":"static","$longname":"UserSession.writeSession"}]},{"comment":"/**\n * Misc utility objects and methods\n * @name utils\n *\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{}},"description":"<p>Misc utility objects and methods</p>","name":"utils","longname":"utils","kind":"member","scope":"global","$longname":"utils","$members":[{"comment":"/**\n * Utilities for Coordinates conversion.\n * @memberof utils\n */","meta":{"range":[8555,8646],"filename":"CoordinatesUtils.js","lineno":268,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100056411","name":"exports.setCrsLabels","type":"VariableDeclaration"}},"description":"<p>Utilities for Coordinates conversion.</p>","memberof":"utils","name":"exports.setCrsLabels","longname":"utils.exports.setCrsLabels","kind":"constant","scope":"static","$longname":"utils.exports.setCrsLabels"},{"comment":"/**\n * Utility functions for reducers and immutable objects in general\n * @memberof utils\n * @static\n * @name ImmutableUtils\n */","meta":{"filename":"ImmutableUtils.js","lineno":19,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{}},"description":"<p>Utility functions for reducers and immutable objects in general</p>","memberof":"utils","scope":"static","name":"ImmutableUtils","longname":"utils.ImmutableUtils","kind":"member","$longname":"utils.ImmutableUtils","$members":[{"comment":"/**\n * Deletes one element of the array\n * @param  {string} [path]  the path of the attribute to change. if path falsy, the passed object is the array to modify\n * @param  {object} condition the [condition](https://lodash.com/docs/4.17.4#findIndex) to match\n * @param  {object} obj   the object to clone and change\n * @return {object} the new object\n * @memberof utils.ImmutableUtils\n * @example arrayDelete('path.to.array', {id: id_of_the_item_to_delete}, object_to_modify)\n */","meta":{"range":[2708,3042],"filename":"ImmutableUtils.js","lineno":75,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100060956","name":"exports.arrayDelete","type":"VariableDeclaration"}},"description":"<p>Deletes one element of the array</p>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>the path of the attribute to change. if path falsy, the passed object is the array to modify</p>","name":"path"},{"type":{"names":["object"]},"description":"<p>the <a href=\"https://lodash.com/docs/4.17.4#findIndex\">condition</a> to match</p>","name":"condition"},{"type":{"names":["object"]},"description":"<p>the object to clone and change</p>","name":"obj"}],"returns":[{"type":{"names":["object"]},"description":"<p>the new object</p>"}],"memberof":"utils.ImmutableUtils","examples":["arrayDelete('path.to.array', {id: id_of_the_item_to_delete}, object_to_modify)"],"name":"exports.arrayDelete","longname":"utils.ImmutableUtils.exports.arrayDelete","kind":"constant","scope":"static","$longname":"utils.ImmutableUtils.exports.arrayDelete"},{"comment":"/**\n * immutable array update (update or insert)\n * @param  {string} path  the path of the attribute to change. if path falsy, the passed object is the array to modify\n * @param  {object} entry the entry to insert\n * @param  {object} condition the [condition](https://lodash.com/docs/4.17.4#findIndex) to match\n * @param  {object} obj   the object to clone and change\n * @return {object} the new object\n * @memberof utils.ImmutableUtils\n */","meta":{"range":[1884,2228],"filename":"ImmutableUtils.js","lineno":56,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100060896","name":"exports.arrayUpdate","type":"VariableDeclaration"}},"description":"<p>immutable array update (update or insert)</p>","params":[{"type":{"names":["string"]},"description":"<p>the path of the attribute to change. if path falsy, the passed object is the array to modify</p>","name":"path"},{"type":{"names":["object"]},"description":"<p>the entry to insert</p>","name":"entry"},{"type":{"names":["object"]},"description":"<p>the <a href=\"https://lodash.com/docs/4.17.4#findIndex\">condition</a> to match</p>","name":"condition"},{"type":{"names":["object"]},"description":"<p>the object to clone and change</p>","name":"obj"}],"returns":[{"type":{"names":["object"]},"description":"<p>the new object</p>"}],"memberof":"utils.ImmutableUtils","name":"exports.arrayUpdate","longname":"utils.ImmutableUtils.exports.arrayUpdate","kind":"constant","scope":"static","$longname":"utils.ImmutableUtils.exports.arrayUpdate"},{"comment":"/**\n * Immutable array upsert in a nested object (update or insert)\n * The element is inserted at the end of the array.\n * @param  {string} path  the path of the attribute to change\n * @param  {object} entry the entry to insert\n * @param  {object} condition the [condition](https://lodash.com/docs/4.17.4#findIndex) to match\n * @param  {object} obj   the object to clone and change\n * @return {object} the new object\n * @memberof utils.ImmutableUtils\n */","meta":{"range":[1040,1441],"filename":"ImmutableUtils.js","lineno":36,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100060821","name":"exports.arrayUpsert","type":"VariableDeclaration"}},"description":"<p>Immutable array upsert in a nested object (update or insert)\nThe element is inserted at the end of the array.</p>","params":[{"type":{"names":["string"]},"description":"<p>the path of the attribute to change</p>","name":"path"},{"type":{"names":["object"]},"description":"<p>the entry to insert</p>","name":"entry"},{"type":{"names":["object"]},"description":"<p>the <a href=\"https://lodash.com/docs/4.17.4#findIndex\">condition</a> to match</p>","name":"condition"},{"type":{"names":["object"]},"description":"<p>the object to clone and change</p>","name":"obj"}],"returns":[{"type":{"names":["object"]},"description":"<p>the new object</p>"}],"memberof":"utils.ImmutableUtils","name":"exports.arrayUpsert","longname":"utils.ImmutableUtils.exports.arrayUpsert","kind":"constant","scope":"static","$longname":"utils.ImmutableUtils.exports.arrayUpsert"}]},{"comment":"/**\n * Utilities for locales.\n * @memberof utils\n */","meta":{"range":[2598,2609],"filename":"LocaleUtils.js","lineno":104,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100061255","name":"LocaleUtils"}},"description":"<p>Utilities for locales.</p>","memberof":"utils","name":"LocaleUtils","longname":"utils.LocaleUtils","kind":"member","scope":"static","params":[],"$longname":"utils.LocaleUtils"},{"comment":"/**\n * Utilities to manage plugins\n * @memberof utils\n */","meta":{"range":[24422,24856],"filename":"PluginsUtils.js","lineno":611,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100063692","name":"module.exports","type":"ObjectExpression"}},"description":"<p>Utilities to manage plugins</p>","memberof":"utils","name":"module.exports","longname":"utils.module.exports","kind":"member","scope":"static","$longname":"utils.module.exports"},{"comment":"/**\n * Utility functions for thumbnails\n * @memberof utils\n * @static\n * @name PrintUtils\n */","meta":{"filename":"PrintUtils.js","lineno":50,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{}},"description":"<p>Utility functions for thumbnails</p>","memberof":"utils","scope":"static","name":"PrintUtils","longname":"utils.PrintUtils","kind":"member","$longname":"utils.PrintUtils","$members":[{"comment":"/**\n * Adds/Updates a user custom transformer for the default printing service spec transformer chain.\n *\n * Transformers are called by the default printing service to enrich / change the spec payload for mapfish-print\n * before calling the remote service.\n *\n * Adding a new transformer allows adding new variables for a custom config.yaml, or process the default\n * ones to implement custom behaviour.\n *\n * @param {string} name name of the transformer (allows replacing one of the default ones, by specifying its name).\n *      default transformers are: `localization`, `wfspreloader`, `mapfishSpecCreator`.\n * @param {function} transformer (state, spec) => Promise<spec>\n * @param {int} position position in the chain (0-indexed), allows inserting a transformer between existing ones\n * @memberof utils.PrintUtils\n *\n * @example\n * // add a transformer to append a new property to the spec\n * addTransformer(\"mytransform\", (state, spec) => ({...spec, newprop: state.print.myprop}))\n */","meta":{"range":[12960,13131],"filename":"PrintUtils.js","lineno":351,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064845","name":"exports.addTransformer","type":"FunctionDeclaration","paramnames":["name","transformer","position"]}},"description":"<p>Adds/Updates a user custom transformer for the default printing service spec transformer chain.</p>\n<p>Transformers are called by the default printing service to enrich / change the spec payload for mapfish-print\nbefore calling the remote service.</p>\n<p>Adding a new transformer allows adding new variables for a custom config.yaml, or process the default\nones to implement custom behaviour.</p>","params":[{"type":{"names":["string"]},"description":"<p>name of the transformer (allows replacing one of the default ones, by specifying its name).\ndefault transformers are: <code>localization</code>, <code>wfspreloader</code>, <code>mapfishSpecCreator</code>.</p>","name":"name"},{"type":{"names":["function"]},"description":"<p>(state, spec) =&gt; Promise<spec></p>","name":"transformer"},{"type":{"names":["int"]},"description":"<p>position in the chain (0-indexed), allows inserting a transformer between existing ones</p>","name":"position"}],"memberof":"utils.PrintUtils","examples":["// add a transformer to append a new property to the spec\naddTransformer(\"mytransform\", (state, spec) => ({...spec, newprop: state.print.myprop}))"],"name":"exports.addTransformer","longname":"utils.PrintUtils.exports.addTransformer","kind":"function","scope":"static","$longname":"utils.PrintUtils.exports.addTransformer"},{"comment":"/**\n * Default screen DPI (96) to Print DPI (72). Used to calculate correct resolution for\n * screen preview and printed map.\n * @memberof utils.PrintUtils\n */","meta":{"range":[18823,18870],"filename":"PrintUtils.js","lineno":484,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100065139","name":"exports.DEFAULT_PRINT_RATIO","type":"VariableDeclaration"}},"description":"<p>Default screen DPI (96) to Print DPI (72). Used to calculate correct resolution for\nscreen preview and printed map.</p>","memberof":"utils.PrintUtils","name":"exports.DEFAULT_PRINT_RATIO","longname":"utils.PrintUtils.exports.DEFAULT_PRINT_RATIO","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.DEFAULT_PRINT_RATIO"},{"comment":"/**\n * Returns the default printing service.\n *\n * A printing service implements all the basic functionalities of a printing engine.\n *\n *  - The print function, whose goal is to transform the Print plugin\n *    specification object into a specification for the chosen printing engine.\n *\n *    This service is compatible with the mapfish-2 printing engine and works by applying a chain of transformers,\n *    summing up the defaultPrintingServiceTransformerChain list, to eventual custom transformers,\n *    added with addTransformer.\n *\n *    Each transformer is a function reiceiving two parameters, the redux global state and the print\n *    specification object returned by the previous chain step, and returning a Promise of the transformed\n *    specification:\n *\n *     (state, spec) => Promise.resolve(<transformed spec>)\n *\n *    Project specific transformers can be added to the end of the chain using the addTransformer function.\n *\n *  - The validate function, that validates current user input in the printing dialog and outputs\n *    eventual validation error to be used by the UI items (to show errors, etc.).\n *\n *    It works by applying a chain of validators, that enrich the validation result object.\n *\n *    Each validator has a name, and a function reiceiving two parameters, the redux global state and the\n *    actual validation object for the name:\n *\n *     (state, validation) => {valid: true/false, errors: [\"message\", ...]}\n *\n *    Project specific validators can be added to the end of the chain using the addValidator function.\n *\n *  - The getMapConfiguration function, that returns a map configuration object for the UI items.\n *\n *    It works by applying a chain of map transformers, that transform the map configuration object.\n *\n *    Each transformer is a function reiceiving two parameters, the redux global state and the\n *    actual map configuration object:\n *\n *     (state, map) => <transformed map>\n *\n *    Project specific transformers can be added to the end of the chain using the addMapTransformer function.\n *\n * @returns {object} the default printint service.\n * @memberof utils.PrintUtils\n */","meta":{"range":[17202,18661],"filename":"PrintUtils.js","lineno":443,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064960","name":"exports.getDefaultPrintingService","type":"VariableDeclaration"}},"description":"<p>Returns the default printing service.</p>\n<p>A printing service implements all the basic functionalities of a printing engine.</p>\n<ul>\n<li>\n<p>The print function, whose goal is to transform the Print plugin\nspecification object into a specification for the chosen printing engine.</p>\n<p>This service is compatible with the mapfish-2 printing engine and works by applying a chain of transformers,\nsumming up the defaultPrintingServiceTransformerChain list, to eventual custom transformers,\nadded with addTransformer.</p>\n<p>Each transformer is a function reiceiving two parameters, the redux global state and the print\nspecification object returned by the previous chain step, and returning a Promise of the transformed\nspecification:</p>\n<p>(state, spec) =&gt; Promise.resolve(<transformed spec>)</p>\n<p>Project specific transformers can be added to the end of the chain using the addTransformer function.</p>\n</li>\n<li>\n<p>The validate function, that validates current user input in the printing dialog and outputs\neventual validation error to be used by the UI items (to show errors, etc.).</p>\n<p>It works by applying a chain of validators, that enrich the validation result object.</p>\n<p>Each validator has a name, and a function reiceiving two parameters, the redux global state and the\nactual validation object for the name:</p>\n<p>(state, validation) =&gt; {valid: true/false, errors: [&quot;message&quot;, ...]}</p>\n<p>Project specific validators can be added to the end of the chain using the addValidator function.</p>\n</li>\n<li>\n<p>The getMapConfiguration function, that returns a map configuration object for the UI items.</p>\n<p>It works by applying a chain of map transformers, that transform the map configuration object.</p>\n<p>Each transformer is a function reiceiving two parameters, the redux global state and the\nactual map configuration object:</p>\n<p>(state, map) =&gt; <transformed map></p>\n<p>Project specific transformers can be added to the end of the chain using the addMapTransformer function.</p>\n</li>\n</ul>","returns":[{"type":{"names":["object"]},"description":"<p>the default printint service.</p>"}],"memberof":"utils.PrintUtils","name":"exports.getDefaultPrintingService","longname":"utils.PrintUtils.exports.getDefaultPrintingService","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.getDefaultPrintingService"},{"comment":"/**\n * Generate the layers (or legend) specification for print.\n * @param  {array} layers  the layers configurations\n * @param  {spec} spec    the print configurations\n * @param  {string} purpose allowed values: `map|legend`. Tells which spec to generate.\n * @returns {array}         the configuration array for layers (or legend) to send to the print service.\n * @memberof utils.PrintUtils\n */","meta":{"range":[19817,20112],"filename":"PrintUtils.js","lineno":506,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100065161","name":"exports.getMapfishLayersSpecification","type":"VariableDeclaration"}},"description":"<p>Generate the layers (or legend) specification for print.</p>","params":[{"type":{"names":["array"]},"description":"<p>the layers configurations</p>","name":"layers"},{"type":{"names":["spec"]},"description":"<p>the print configurations</p>","name":"spec"},{"type":{"names":["string"]},"description":"<p>allowed values: <code>map|legend</code>. Tells which spec to generate.</p>","name":"purpose"}],"returns":[{"type":{"names":["array"]},"description":"<p>the configuration array for layers (or legend) to send to the print service.</p>"}],"memberof":"utils.PrintUtils","name":"exports.getMapfishLayersSpecification","longname":"utils.PrintUtils.exports.getMapfishLayersSpecification","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.getMapfishLayersSpecification"},{"comment":"/**\n * Creates the mapfish print specification from the current configuration\n * @param  {object} spec the current configuration\n * @returns {object}      the mapfish print configuration to send to the server\n * @memberof utils.PrintUtils\n */","meta":{"range":[8456,9976],"filename":"PrintUtils.js","lineno":234,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064444","name":"exports.getMapfishPrintSpecification","type":"VariableDeclaration"}},"description":"<p>Creates the mapfish print specification from the current configuration</p>","params":[{"type":{"names":["object"]},"description":"<p>the current configuration</p>","name":"spec"}],"returns":[{"type":{"names":["object"]},"description":"<p>the mapfish print configuration to send to the server</p>"}],"memberof":"utils.PrintUtils","name":"exports.getMapfishPrintSpecification","longname":"utils.PrintUtils.exports.getMapfishPrintSpecification","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.getMapfishPrintSpecification"},{"comment":"/**\n * Get the mapSize for print preview, parsing the layout and limiting the width.\n * @param  {object} layout   the layout object\n * @param  {number} maxWidth the max width for the mapSize\n * @returns {object}          width and height of a map limited by the maxWidth and with the same ratio of the layout\n * @memberof utils.PrintUtils\n */","meta":{"range":[7720,8116],"filename":"PrintUtils.js","lineno":211,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064374","name":"exports.getMapSize","type":"VariableDeclaration"}},"description":"<p>Get the mapSize for print preview, parsing the layout and limiting the width.</p>","params":[{"type":{"names":["object"]},"description":"<p>the layout object</p>","name":"layout"},{"type":{"names":["number"]},"description":"<p>the max width for the mapSize</p>","name":"maxWidth"}],"returns":[{"type":{"names":["object"]},"description":"<p>width and height of a map limited by the maxWidth and with the same ratio of the layout</p>"}],"memberof":"utils.PrintUtils","name":"exports.getMapSize","longname":"utils.PrintUtils.exports.getMapSize","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.getMapSize"},{"comment":"/**\n * Guess the nearest zoom level in the allowed scales\n * @param  {number} zoom                      the zoom level\n * @param  {array} scales                    the allowed scales\n * @param  {array} [mapScales=defaultScales] the map scales\n * @returns {number}                          the index that best approximates the current map scale\n * @memberof utils.PrintUtils\n */","meta":{"range":[6481,6732],"filename":"PrintUtils.js","lineno":183,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064294","name":"exports.getNearestZoom","type":"VariableDeclaration"}},"description":"<p>Guess the nearest zoom level in the allowed scales</p>","params":[{"type":{"names":["number"]},"description":"<p>the zoom level</p>","name":"zoom"},{"type":{"names":["array"]},"description":"<p>the allowed scales</p>","name":"scales"},{"type":{"names":["array"]},"optional":true,"defaultvalue":"defaultScales","description":"<p>the map scales</p>","name":"mapScales"}],"returns":[{"type":{"names":["number"]},"description":"<p>the index that best approximates the current map scale</p>"}],"memberof":"utils.PrintUtils","name":"exports.getNearestZoom","longname":"utils.PrintUtils.exports.getNearestZoom","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.getNearestZoom"},{"comment":"/**\n * Provides the default style for\n * each vector type.\n * @memberof utils.PrintUtils\n */","meta":{"range":[40033,42672],"filename":"PrintUtils.js","lineno":982,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100066898","name":"exports.getOlDefaultStyle","type":"VariableDeclaration"}},"description":"<p>Provides the default style for\neach vector type.</p>","memberof":"utils.PrintUtils","name":"exports.getOlDefaultStyle","longname":"utils.PrintUtils.exports.getOlDefaultStyle","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.getOlDefaultStyle"},{"comment":"/**\n * Gets the print scales allowed from the capabilities of the print service.\n * @param  {capabilities} capabilities the capabilities of the print service\n * @returns {array}              the scales array\n * @memberof utils.PrintUtils\n */","meta":{"range":[5953,6102],"filename":"PrintUtils.js","lineno":172,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064264","name":"exports.getPrintScales","type":"VariableDeclaration"}},"description":"<p>Gets the print scales allowed from the capabilities of the print service.</p>","params":[{"type":{"names":["capabilities"]},"description":"<p>the capabilities of the print service</p>","name":"capabilities"}],"returns":[{"type":{"names":["array"]},"description":"<p>the scales array</p>"}],"memberof":"utils.PrintUtils","name":"exports.getPrintScales","longname":"utils.PrintUtils.exports.getPrintScales","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.getPrintScales"},{"comment":"/**\n * Returns the correct multiplier to sync the screen resolution and the printed map resolution.\n * @param {number} printSize printed map size (in print points (1/72\"))\n * @param {number} screenSize screen preview size (in pixels)\n * @param {number} dpiRatio ratio screen_dpi / printed_dpi\n * @return {number} the resolution multiplier to apply to the screen preview\n * @memberof utils.PrintUtils\n */","meta":{"range":[19276,19420],"filename":"PrintUtils.js","lineno":494,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100065146","name":"exports.getResolutionMultiplier","type":"FunctionDeclaration","paramnames":["printSize","screenSize","dpiRatio"]}},"description":"<p>Returns the correct multiplier to sync the screen resolution and the printed map resolution.</p>","params":[{"type":{"names":["number"]},"description":"<p>printed map size (in print points (1/72&quot;))</p>","name":"printSize"},{"type":{"names":["number"]},"description":"<p>screen preview size (in pixels)</p>","name":"screenSize"},{"type":{"names":["number"]},"description":"<p>ratio screen_dpi / printed_dpi</p>","name":"dpiRatio"}],"returns":[{"type":{"names":["number"]},"description":"<p>the resolution multiplier to apply to the screen preview</p>"}],"memberof":"utils.PrintUtils","name":"exports.getResolutionMultiplier","longname":"utils.PrintUtils.exports.getResolutionMultiplier","kind":"function","scope":"static","$longname":"utils.PrintUtils.exports.getResolutionMultiplier"},{"comment":"/**\n * Tranform the original URL configuration of the layer into a URL\n * usable for the print service.\n * @param  {string|array} input Original URL\n * @returns {string}       the URL modified as GeoServer requires\n * @memberof utils.PrintUtils\n */","meta":{"range":[4863,5106],"filename":"PrintUtils.js","lineno":139,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064163","name":"exports.normalizeUrl","type":"VariableDeclaration"}},"description":"<p>Tranform the original URL configuration of the layer into a URL\nusable for the print service.</p>","params":[{"type":{"names":["string","array"]},"description":"<p>Original URL</p>","name":"input"}],"returns":[{"type":{"names":["string"]},"description":"<p>the URL modified as GeoServer requires</p>"}],"memberof":"utils.PrintUtils","name":"exports.normalizeUrl","longname":"utils.PrintUtils.exports.normalizeUrl","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.normalizeUrl"},{"comment":"/**\n * Preload data (e.g. WFS) before to sent it to the print tool.\n * @memberof utils.PrintUtils\n */","meta":{"range":[2565,3746],"filename":"PrintUtils.js","lineno":68,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100063976","name":"exports.preloadData","type":"VariableDeclaration"}},"description":"<p>Preload data (e.g. WFS) before to sent it to the print tool.</p>","memberof":"utils.PrintUtils","name":"exports.preloadData","longname":"utils.PrintUtils.exports.preloadData","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.preloadData"},{"comment":"/**\n * Resets the list of transformers and validators.\n * @memberof utils.PrintUtils\n */","meta":{"range":[11832,11968],"filename":"PrintUtils.js","lineno":326,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064829","name":"exports.resetDefaultPrintingService","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>Resets the list of transformers and validators.</p>","memberof":"utils.PrintUtils","name":"exports.resetDefaultPrintingService","longname":"utils.PrintUtils.exports.resetDefaultPrintingService","kind":"function","scope":"static","$longname":"utils.PrintUtils.exports.resetDefaultPrintingService"},{"comment":"/**\n * Given a static resource, returns the resource's absolute\n * URL. Supports file paths with or without origin/protocol.\n * @param {string} uri the uri to transform\n * @param {string} [origin=window.location.origin] the origin to use\n * @memberof utils.PrintUtils\n */","meta":{"range":[4019,4613],"filename":"PrintUtils.js","lineno":112,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100064103","name":"exports.toAbsoluteURL","type":"VariableDeclaration"}},"description":"<p>Given a static resource, returns the resource's absolute\nURL. Supports file paths with or without origin/protocol.</p>","params":[{"type":{"names":["string"]},"description":"<p>the uri to transform</p>","name":"uri"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"window.location.origin","description":"<p>the origin to use</p>","name":"origin"}],"memberof":"utils.PrintUtils","name":"exports.toAbsoluteURL","longname":"utils.PrintUtils.exports.toAbsoluteURL","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.toAbsoluteURL"},{"comment":"/**\n * Useful for print (Or generic Openlayers 2 conversion style)\n * http://dev.openlayers.org/docs/files/OpenLayers/Feature/Vector-js.html#OpenLayers.Feature.Vector.OpenLayers.Feature.Vector.style\n * @memberof utils.PrintUtils\n */","meta":{"range":[38633,39939],"filename":"PrintUtils.js","lineno":942,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100066823","name":"exports.toOpenLayers2Style","type":"VariableDeclaration"}},"description":"<p>Useful for print (Or generic Openlayers 2 conversion style)\nhttp://dev.openlayers.org/docs/files/OpenLayers/Feature/Vector-js.html#OpenLayers.Feature.Vector.OpenLayers.Feature.Vector.style</p>","memberof":"utils.PrintUtils","name":"exports.toOpenLayers2Style","longname":"utils.PrintUtils.exports.toOpenLayers2Style","kind":"constant","scope":"static","$longname":"utils.PrintUtils.exports.toOpenLayers2Style"}]},{"comment":"/**\n * State management utils.\n * @memberOf utils\n * @static\n * @name StateUtils\n */","meta":{"filename":"StateUtils.js","lineno":19,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{}},"description":"<p>State management utils.</p>","memberof":"utils","scope":"static","name":"StateUtils","longname":"utils.StateUtils","kind":"member","$longname":"utils.StateUtils","$members":[{"comment":"/**\n         * Adds a new epics set, that can be muted by the specified key\n         * @memberof utils.StateUtils\n         * @param {string} key\n         * @param {Object.<string, function>} epicsList\n         */","meta":{"range":[9535,10399],"filename":"StateUtils.js","lineno":254,"columnno":8,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069573","name":"addEpics","type":"ArrowFunctionExpression"},"vars":{"normalizedName":"utils.StateUtils.addEpics~normalizedName","epicsToAdd":"utils.StateUtils.addEpics~epicsToAdd","":null,"isolatedEpics":"utils.StateUtils.addEpics~isolatedEpics"}},"description":"<p>Adds a new epics set, that can be muted by the specified key</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["string"]},"name":"key"},{"type":{"names":["Object.<string, function()>"]},"name":"epicsList"}],"name":"addEpics","longname":"utils.StateUtils.addEpics","kind":"function","scope":"static","$longname":"utils.StateUtils.addEpics"},{"comment":"/**\n         * Registers new reducer\n         * @memberof utils.StateUtils\n         * @param {string} key - unique name of reducer\n         * @param {function} reducer - reducer function\n         */","meta":{"range":[8345,8662],"filename":"StateUtils.js","lineno":216,"columnno":8,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069516","name":"addReducer","type":"ArrowFunctionExpression"},"vars":{"reducers[undefined]":"createStoreManager~reducers.undefined]","combinedReducer":"utils.StateUtils.addReducer~combinedReducer"}},"description":"<p>Registers new reducer</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["string"]},"description":"<p>unique name of reducer</p>","name":"key"},{"type":{"names":["function"]},"description":"<p>reducer function</p>","name":"reducer"}],"name":"addReducer","longname":"utils.StateUtils.addReducer","kind":"function","scope":"static","$longname":"utils.StateUtils.addReducer"},{"comment":"/**\n * Updates a Redux store with new reducers and epics.\n * Needed by the dynamic plugins loading system, to update the application store with new reducers and epics exported by the plugins.\n *\n * If you want to add replace current reducers / epics with new ones, use updateStore instead.\n * @memberof utils.StateUtils\n * @param {object} options options to update\n * @param {object} options.reducers list of reducers to add.\n * @param {object} options.epics list of epics to add.\n * @param {object} store the store to update, if not specified, the persisted one will be used\n * @deprecated in favor of store.storeManager.addReducer & store.storeManager.addEpics\n */","meta":{"range":[16189,16566],"filename":"StateUtils.js","lineno":389,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069989","name":"exports.augmentStore","type":"VariableDeclaration"}},"description":"<p>Updates a Redux store with new reducers and epics.\nNeeded by the dynamic plugins loading system, to update the application store with new reducers and epics exported by the plugins.</p>\n<p>If you want to add replace current reducers / epics with new ones, use updateStore instead.</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["object"]},"description":"<p>options to update</p>","name":"options"},{"type":{"names":["object"]},"description":"<p>list of reducers to add.</p>","name":"options.reducers"},{"type":{"names":["object"]},"description":"<p>list of epics to add.</p>","name":"options.epics"},{"type":{"names":["object"]},"description":"<p>the store to update, if not specified, the persisted one will be used</p>","name":"store"}],"deprecated":"in favor of store.storeManager.addReducer & store.storeManager.addEpics","name":"exports.augmentStore","longname":"utils.StateUtils.exports.augmentStore","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.augmentStore"},{"comment":"/**\n * Creates and returns a Redux store, using the given options.\n * Includes the following functionalities by default: redux-thunk, redux-observables, debug mode.\n * @memberof utils.StateUtils\n * @param {object} options key-value pairs of options for the store.\n * @param {function} options.rootReducer optional root (combined) reducer for the store, if not specified it is built using the reducers.\n * @param {function} options.rootEpic optional root (combined) epic for the store, if not specified it is built using the epics.\n  * @param {object} options.reducers list of reducers.\n * @param {object} options.epics list of epics.\n * @param {object} options.state initial state of the store.\n * @param {array} options.middlewares custom middlewares to be added to the store.\n * @param {boolean} options.debug enables debug mode (console logger and redux dev tools enabled).\n * @param {function} enhancer optional store enhancer to be configured.\n */","meta":{"range":[13498,14281],"filename":"StateUtils.js","lineno":336,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069818","name":"exports.createStore","type":"VariableDeclaration"}},"description":"<p>Creates and returns a Redux store, using the given options.\nIncludes the following functionalities by default: redux-thunk, redux-observables, debug mode.</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["object"]},"description":"<p>key-value pairs of options for the store.</p>","name":"options"},{"type":{"names":["function"]},"description":"<p>optional root (combined) reducer for the store, if not specified it is built using the reducers.</p>","name":"options.rootReducer"},{"type":{"names":["function"]},"description":"<p>optional root (combined) epic for the store, if not specified it is built using the epics.</p>","name":"options.rootEpic"},{"type":{"names":["object"]},"description":"<p>list of reducers.</p>","name":"options.reducers"},{"type":{"names":["object"]},"description":"<p>list of epics.</p>","name":"options.epics"},{"type":{"names":["object"]},"description":"<p>initial state of the store.</p>","name":"options.state"},{"type":{"names":["array"]},"description":"<p>custom middlewares to be added to the store.</p>","name":"options.middlewares"},{"type":{"names":["boolean"]},"description":"<p>enables debug mode (console logger and redux dev tools enabled).</p>","name":"options.debug"},{"type":{"names":["function"]},"description":"<p>optional store enhancer to be configured.</p>","name":"enhancer"}],"name":"exports.createStore","longname":"utils.StateUtils.exports.createStore","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.createStore"},{"comment":"/**\n * Creates new instance of storeManager\n * @memberof utils.StateUtils\n * @param {Object} initialReducers list of reducers\n * @param {Object} initialEpics list of epics\n * @returns {{reduce: (function(*, *): any), rootEpic: (function(...[*]): Observable<Action>), removeReducer: removeReducer, unmuteEpics: unmuteEpics, getEpicsRegistry: (function(): {addedEpics: {}, muteState: {}, epicsListenedBy: {}, groupedByModule: {}}), addEpics: addEpics, muteEpics: muteEpics, addReducer: addReducer}}\n */","meta":{"range":[6078,12543],"filename":"StateUtils.js","lineno":155,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069357","name":"exports.createStoreManager","type":"VariableDeclaration"}},"description":"<p>Creates new instance of storeManager</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["Object"]},"description":"<p>list of reducers</p>","name":"initialReducers"},{"type":{"names":["Object"]},"description":"<p>list of epics</p>","name":"initialEpics"}],"returns":[{"type":{"names":["Object"]}}],"name":"exports.createStoreManager","longname":"utils.StateUtils.exports.createStoreManager","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.createStoreManager"},{"comment":"/**\n * Returns a list of standard ReduxJS middlewares, augmented with user ones.\n *\n * @memberof utils.StateUtils\n * @param {array} userMiddlewares user middlewares to add to standard ones\n * @param {bool} debug if true, middlewares needed to enable debug mode are returned also\n */","meta":{"range":[1098,1279],"filename":"StateUtils.js","lineno":33,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069064","name":"exports.getMiddlewares","type":"VariableDeclaration"}},"description":"<p>Returns a list of standard ReduxJS middlewares, augmented with user ones.</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["array"]},"description":"<p>user middlewares to add to standard ones</p>","name":"userMiddlewares"},{"type":{"names":["bool"]},"description":"<p>if true, middlewares needed to enable debug mode are returned also</p>","name":"debug"}],"name":"exports.getMiddlewares","longname":"utils.StateUtils.exports.getMiddlewares","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.getMiddlewares"},{"comment":"/**\n * Returns state from a persisted store.\n * @memberof utils.StateUtils\n * @param {string} name optional name (if you want to persist more than one store)\n */","meta":{"range":[4827,4938],"filename":"StateUtils.js","lineno":130,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069246","name":"exports.getState","type":"VariableDeclaration"}},"description":"<p>Returns state from a persisted store.</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["string"]},"description":"<p>optional name (if you want to persist more than one store)</p>","name":"name"}],"name":"exports.getState","longname":"utils.StateUtils.exports.getState","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.getState"},{"comment":"/**\n * Returns a persisted store.\n *\n * @memberof utils.StateUtils\n * @param {string} name optional name (if you want to restore more than one store)\n */","meta":{"range":[2060,2173],"filename":"StateUtils.js","lineno":63,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069110","name":"exports.getStore","type":"VariableDeclaration"}},"description":"<p>Returns a persisted store.</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["string"]},"description":"<p>optional name (if you want to restore more than one store)</p>","name":"name"}],"name":"exports.getStore","longname":"utils.StateUtils.exports.getStore","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.getStore"},{"comment":"/**\n * Persists a redux-observable root epic.\n * A redux-observable epic can be persisted so that it can be modified after creation.\n * For example it is used by the dynamic plugin loading mechanism to update epics\n * at runtime.\n * @memberof utils.StateUtils\n * @param {object} epic epic to be persisted\n * @param {string} storeName optional store name the epic is used by\n * @param {string} name optional name (if you want to persist more than one epic)\n */","meta":{"range":[4397,4663],"filename":"StateUtils.js","lineno":118,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069202","name":"exports.persistEpic","type":"VariableDeclaration"}},"description":"<p>Persists a redux-observable root epic.\nA redux-observable epic can be persisted so that it can be modified after creation.\nFor example it is used by the dynamic plugin loading mechanism to update epics\nat runtime.</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["object"]},"description":"<p>epic to be persisted</p>","name":"epic"},{"type":{"names":["string"]},"description":"<p>optional store name the epic is used by</p>","name":"storeName"},{"type":{"names":["string"]},"description":"<p>optional name (if you want to persist more than one epic)</p>","name":"name"}],"name":"exports.persistEpic","longname":"utils.StateUtils.exports.persistEpic","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.persistEpic"},{"comment":"/**\n * Persists the given middleware.\n * A Redux middleware can be persisted so that it can be modified after creation.\n * For example it is used by the dynamic plugin loading mechanism to add new epics to the redux-observable middleware\n * at runtime.\n *\n * @memberof utils.StateUtils\n * @param {object} middleware middleware to be persisted\n * @param {string} storeName optional store name the middleware is used by\n * @param {string} name optional name (if you want to persist more than one middleware)\n */","meta":{"range":[2685,2887],"filename":"StateUtils.js","lineno":78,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069127","name":"exports.persistMiddleware","type":"VariableDeclaration"}},"description":"<p>Persists the given middleware.\nA Redux middleware can be persisted so that it can be modified after creation.\nFor example it is used by the dynamic plugin loading mechanism to add new epics to the redux-observable middleware\nat runtime.</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["object"]},"description":"<p>middleware to be persisted</p>","name":"middleware"},{"type":{"names":["string"]},"description":"<p>optional store name the middleware is used by</p>","name":"storeName"},{"type":{"names":["string"]},"description":"<p>optional name (if you want to persist more than one middleware)</p>","name":"name"}],"name":"exports.persistMiddleware","longname":"utils.StateUtils.exports.persistMiddleware","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.persistMiddleware"},{"comment":"/**\n * Persists a Redux root reducer.\n * A Redux reducer can be persisted so that it can be modified after creation.\n * For example it is used by the dynamic plugin loading mechanism to update a store reducer\n * at runtime.\n * @memberof utils.StateUtils\n * @param {object} reducer reducer to be persisted\n * @param {string} storeName optional store name the reducer is used by\n * @param {string} name optional name (if you want to persist more than one reducer)\n */","meta":{"range":[3748,3935],"filename":"StateUtils.js","lineno":103,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069176","name":"exports.persistReducer","type":"VariableDeclaration"}},"description":"<p>Persists a Redux root reducer.\nA Redux reducer can be persisted so that it can be modified after creation.\nFor example it is used by the dynamic plugin loading mechanism to update a store reducer\nat runtime.</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["object"]},"description":"<p>reducer to be persisted</p>","name":"reducer"},{"type":{"names":["string"]},"description":"<p>optional store name the reducer is used by</p>","name":"storeName"},{"type":{"names":["string"]},"description":"<p>optional name (if you want to persist more than one reducer)</p>","name":"name"}],"name":"exports.persistReducer","longname":"utils.StateUtils.exports.persistReducer","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.persistReducer"},{"comment":"/**\n * Persists the given store.\n * A Redux Store can be persisted so that it can be used outside of the Redux Provider tree.\n * For example it is used by the dynamic plugin loading mechanism to add new reducers at runtime.\n *\n * @memberof utils.StateUtils\n * @param {object} store store to be persisted\n * @param {string} name optional name (if you want to persist more than one store)\n */","meta":{"range":[1774,1904],"filename":"StateUtils.js","lineno":52,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069091","name":"exports.setStore","type":"VariableDeclaration"}},"description":"<p>Persists the given store.\nA Redux Store can be persisted so that it can be used outside of the Redux Provider tree.\nFor example it is used by the dynamic plugin loading mechanism to add new reducers at runtime.</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["object"]},"description":"<p>store to be persisted</p>","name":"store"},{"type":{"names":["string"]},"description":"<p>optional name (if you want to persist more than one store)</p>","name":"name"}],"name":"exports.setStore","longname":"utils.StateUtils.exports.setStore","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.setStore"},{"comment":"/**\n * Updates a Redux store with new reducers and epics.\n *\n * This method needs a new COMPLETE set of reducers / epics. If you want to add reducers / epics to existing ones, use storeManager methods instead.\n * @memberof utils.StateUtils\n * @param {object} options options to update\n * @param {function} options.rootReducer optional root (combined) reducer for the store, if not specified it is built using the reducers.\n * @param {function} options.rootEpic optional root (combined) epic for the store, if not specified it is built using the epics.\n * @param {object} options.reducers list of reducers.\n * @param {object} options.epics list of epics.\n * @param {object} store the store to update, if not specified, the persisted one will be used\n * @param {object} epicMiddleware the epic middleware to update, if not specified the persisted one will be used\n */","meta":{"range":[15149,15520],"filename":"StateUtils.js","lineno":370,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069927","name":"exports.updateStore","type":"VariableDeclaration"}},"description":"<p>Updates a Redux store with new reducers and epics.</p>\n<p>This method needs a new COMPLETE set of reducers / epics. If you want to add reducers / epics to existing ones, use storeManager methods instead.</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["object"]},"description":"<p>options to update</p>","name":"options"},{"type":{"names":["function"]},"description":"<p>optional root (combined) reducer for the store, if not specified it is built using the reducers.</p>","name":"options.rootReducer"},{"type":{"names":["function"]},"description":"<p>optional root (combined) epic for the store, if not specified it is built using the epics.</p>","name":"options.rootEpic"},{"type":{"names":["object"]},"description":"<p>list of reducers.</p>","name":"options.reducers"},{"type":{"names":["object"]},"description":"<p>list of epics.</p>","name":"options.epics"},{"type":{"names":["object"]},"description":"<p>the store to update, if not specified, the persisted one will be used</p>","name":"store"},{"type":{"names":["object"]},"description":"<p>the epic middleware to update, if not specified the persisted one will be used</p>","name":"epicMiddleware"}],"name":"exports.updateStore","longname":"utils.StateUtils.exports.updateStore","kind":"constant","scope":"static","$longname":"utils.StateUtils.exports.updateStore"},{"comment":"/**\n * Returns a stored middleware\n * @memberof utils.StateUtils\n * @param {string} storeName optional store name the middleware is used by\n * @param {string} name optional name (if you want to persist more than one middleware)\n */","meta":{"range":[3127,3279],"filename":"StateUtils.js","lineno":89,"columnno":6,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069154","name":"fetchMiddleware","type":"ArrowFunctionExpression"}},"description":"<p>Returns a stored middleware</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["string"]},"description":"<p>optional store name the middleware is used by</p>","name":"storeName"},{"type":{"names":["string"]},"description":"<p>optional name (if you want to persist more than one middleware)</p>","name":"name","defaultvalue":"epicMiddleware"}],"name":"fetchMiddleware","longname":"utils.StateUtils.fetchMiddleware","kind":"function","scope":"static","$longname":"utils.StateUtils.fetchMiddleware"},{"comment":"/**\n         * Mutes set of epics with a specified key\n         * @memberof utils.StateUtils\n         * @param {string} key\n         */","meta":{"range":[10553,11351],"filename":"StateUtils.js","lineno":277,"columnno":8,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069671","name":"muteEpics","type":"ArrowFunctionExpression"},"vars":{"normalizedName":"utils.StateUtils.muteEpics~normalizedName","moduleEpicRegistrations":"utils.StateUtils.muteEpics~moduleEpicRegistrations","":null}},"description":"<p>Mutes set of epics with a specified key</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["string"]},"name":"key"}],"name":"muteEpics","longname":"utils.StateUtils.muteEpics","kind":"function","scope":"static","$longname":"utils.StateUtils.muteEpics"},{"comment":"/**\n         * Removes a reducer with the specified key\n         * @memberof utils.StateUtils\n         * @param {string} key - unique name of reducer\n         */","meta":{"range":[8843,9242],"filename":"StateUtils.js","lineno":233,"columnno":8,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069542","name":"removeReducer","type":"ArrowFunctionExpression"},"vars":{"combinedReducer":"utils.StateUtils.removeReducer~combinedReducer"}},"description":"<p>Removes a reducer with the specified key</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["string"]},"description":"<p>unique name of reducer</p>","name":"key"}],"name":"removeReducer","longname":"utils.StateUtils.removeReducer","kind":"function","scope":"static","$longname":"utils.StateUtils.removeReducer"},{"comment":"/**\n         * Root epic, is used upon middleware creation\n         * @memberof utils.StateUtils\n         * @param args\n         * @returns {Observable<Action>}\n         */","meta":{"range":[12479,12533],"filename":"StateUtils.js","lineno":318,"columnno":8,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069804","name":"rootEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Root epic, is used upon middleware creation</p>","memberof":"utils.StateUtils","params":[{"name":"args"}],"returns":[{"type":{"names":["Observable.<Action>"]}}],"name":"rootEpic","longname":"utils.StateUtils.rootEpic","kind":"function","scope":"static","$longname":"utils.StateUtils.rootEpic"},{"comment":"/**\n         * Unmutes set of epics with a specified key\n         * @memberof utils.StateUtils\n         * @param {string} key\n         */","meta":{"range":[11507,12288],"filename":"StateUtils.js","lineno":297,"columnno":8,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100069737","name":"unmuteEpics","type":"ArrowFunctionExpression"},"vars":{"normalizedName":"utils.StateUtils.unmuteEpics~normalizedName","moduleEpicRegistrations":"utils.StateUtils.unmuteEpics~moduleEpicRegistrations","":null}},"description":"<p>Unmutes set of epics with a specified key</p>","memberof":"utils.StateUtils","params":[{"type":{"names":["string"]},"name":"key"}],"name":"unmuteEpics","longname":"utils.StateUtils.unmuteEpics","kind":"function","scope":"static","$longname":"utils.StateUtils.unmuteEpics"}]},{"comment":"/**\n * Utility functions for thumbnails\n * @memberof utils\n * @static\n * @name ThumbnailUtils\n */","meta":{"filename":"ThumbnailUtils.js","lineno":8,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{}},"description":"<p>Utility functions for thumbnails</p>","memberof":"utils","scope":"static","name":"ThumbnailUtils","longname":"utils.ThumbnailUtils","kind":"member","$longname":"utils.ThumbnailUtils","$members":[{"comment":"/**\n * it returns a scaled image in base64 based on the provided options given a image source\n * @param  {string} src source image\n * @param  {object} options options for the generated thumbnail\n * @param  {number} options.width width of generated thumbnail\n * @param  {number} options.height height of generated thumbnail\n * @param  {boolean} options.contain position of image in the thumbnail\n * @param  {string} options.type mime type of generated thumbnail\n * @param  {object} options.quality quality of generated thumbnail (from 0.0 to 1.0)\n * @return {promise}\n * @memberof utils.ThumbnailUtils\n */","meta":{"range":[907,2605],"filename":"ThumbnailUtils.js","lineno":27,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100070058","name":"exports.createBase64Thumbnail","type":"VariableDeclaration"}},"description":"<p>it returns a scaled image in base64 based on the provided options given a image source</p>","params":[{"type":{"names":["string"]},"description":"<p>source image</p>","name":"src"},{"type":{"names":["object"]},"description":"<p>options for the generated thumbnail</p>","name":"options"},{"type":{"names":["number"]},"description":"<p>width of generated thumbnail</p>","name":"options.width"},{"type":{"names":["number"]},"description":"<p>height of generated thumbnail</p>","name":"options.height"},{"type":{"names":["boolean"]},"description":"<p>position of image in the thumbnail</p>","name":"options.contain"},{"type":{"names":["string"]},"description":"<p>mime type of generated thumbnail</p>","name":"options.type"},{"type":{"names":["object"]},"description":"<p>quality of generated thumbnail (from 0.0 to 1.0)</p>","name":"options.quality"}],"returns":[{"type":{"names":["promise"]}}],"memberof":"utils.ThumbnailUtils","name":"exports.createBase64Thumbnail","longname":"utils.ThumbnailUtils.exports.createBase64Thumbnail","kind":"constant","scope":"static","$longname":"utils.ThumbnailUtils.exports.createBase64Thumbnail"},{"comment":"/**\n * it returns the first frame as base64 image given a video source\n * @param  {string} src source video\n * @param  {object} options options for the generated thumbnail\n * @param  {string} options.type mime type of generated thumbnail\n * @param  {object} options.quality quality of generated thumbnail (from 0.0 to 1.0)\n * @return {promise}\n * @memberof utils.ThumbnailUtils\n */","meta":{"range":[2989,4473],"filename":"ThumbnailUtils.js","lineno":77,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100070295","name":"exports.getVideoFrame","type":"VariableDeclaration"}},"description":"<p>it returns the first frame as base64 image given a video source</p>","params":[{"type":{"names":["string"]},"description":"<p>source video</p>","name":"src"},{"type":{"names":["object"]},"description":"<p>options for the generated thumbnail</p>","name":"options"},{"type":{"names":["string"]},"description":"<p>mime type of generated thumbnail</p>","name":"options.type"},{"type":{"names":["object"]},"description":"<p>quality of generated thumbnail (from 0.0 to 1.0)</p>","name":"options.quality"}],"returns":[{"type":{"names":["promise"]}}],"memberof":"utils.ThumbnailUtils","name":"exports.getVideoFrame","longname":"utils.ThumbnailUtils.exports.getVideoFrame","kind":"constant","scope":"static","$longname":"utils.ThumbnailUtils.exports.getVideoFrame"},{"comment":"/**\n * it returns a thumbnail given a video source\n * @param  {string} src source video\n * @param  {object} options options for the generated thumbnail\n * @param  {number} options.width width of generated thumbnail\n * @param  {number} options.height height of generated thumbnail\n * @param  {boolean} options.contain position of image in the thumbnail\n * @param  {string} options.type mime type of generated thumbnail\n * @param  {object} options.quality quality of generated thumbnail (from 0.0 to 1.0)\n * @return {promise}\n * @memberof utils.ThumbnailUtils\n */","meta":{"range":[5037,5736],"filename":"ThumbnailUtils.js","lineno":132,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100070500","name":"exports.getVideoThumbnail","type":"VariableDeclaration"}},"description":"<p>it returns a thumbnail given a video source</p>","params":[{"type":{"names":["string"]},"description":"<p>source video</p>","name":"src"},{"type":{"names":["object"]},"description":"<p>options for the generated thumbnail</p>","name":"options"},{"type":{"names":["number"]},"description":"<p>width of generated thumbnail</p>","name":"options.width"},{"type":{"names":["number"]},"description":"<p>height of generated thumbnail</p>","name":"options.height"},{"type":{"names":["boolean"]},"description":"<p>position of image in the thumbnail</p>","name":"options.contain"},{"type":{"names":["string"]},"description":"<p>mime type of generated thumbnail</p>","name":"options.type"},{"type":{"names":["object"]},"description":"<p>quality of generated thumbnail (from 0.0 to 1.0)</p>","name":"options.quality"}],"returns":[{"type":{"names":["promise"]}}],"memberof":"utils.ThumbnailUtils","name":"exports.getVideoThumbnail","longname":"utils.ThumbnailUtils.exports.getVideoThumbnail","kind":"constant","scope":"static","$longname":"utils.ThumbnailUtils.exports.getVideoThumbnail"}]}]},{"comment":"/**\n * Returns OGC Filter Builder. The FilterBuilder returns the method to compose the filter.\n * The returned element are basically the `filter`, `and`, `or` and `not` functions, plus a `property` object that allows to build the conditions\n * for properties. Other special conditions can be passed as strings.\n * The property object have the methods listed as properies below.\n * The builder provides all the methods to compose the filter (filter, and, or, not, property) to compose the filter.\n * ```\n * const filterBuilder = require('.../FilterBuilder');\n * const {filter, property, and, or, not} = filterBuilder({gmlVersion: \"3.1.1\"});\n *      filter(\n *          and(\n *              property(\"P1\").equals(\"v1\"),\n *              proprety(\"the_geom\").intersects(geoJSONGeometry)\n *          )\n *      ),\n *      {srsName=\"EPSG:4326\"} // 3rd for query is optional\n *      )\n * {maxFeatures: 10, startIndex: 0, resultType: 'hits', outputFormat: 'application/json'} // 3rd  argument of getFeature is optional, and contains the options for the request.\n * );\n *\n * ```\n * @name FilterBuilder\n * @constructor\n * @memberof utils.ogc.WFS\n * @param {Object} [options] the options to create the request builder\n * @param  {String} [options.wfsVersion=\"1.1.0\"] the version of WFS\n * @param  {String} [options.gmlVersion]         gml Version ()\n * @param  {String} [options.filterNS]           NameSpace to use for filters\n * @return {Object}                      a filter builder.\n * @prop {function} filter creates a filter with the content Parameters can be passed as array or args list.\n * ```\n * filter(...content) //-> <ogc:Filter>...content<ogc:/Filter>\n * ```\n * @prop {function} fidFilter creates a fid condition\n * ```\n * fidFilter(\"id\")` // -> <ogc:FeatureId fid=\"sc_cities-6.1\"/>\n * ```\n * @prop {function} and Creates an and condition. Parameters can be passed as array or args list.\n * ```\n * and( property(\"a\").equalTo(\"1\"), property(\"b\").equalTo(\"2\"), ... )\n * and( [property(\"a\").equalTo(\"1\"), property(\"b\").equalTo(\"2\"), ...] )\n * ```\n * @prop {function} or Creates an or condition. Parameters can be passed as array or args list.\n * ```\n * or( property(\"a\").equalTo(\"1\"), property(\"b\").equalTo(\"2\"), ... )\n * or( [property(\"a\").equalTo(\"1\"), property(\"b\").equalTo(\"2\"), ...] )\n * ```\n * @prop {function} not creates a not condition.\n * ```\n * not( property(\"a\").equalTo(\"1\") )\n * ```\n * @prop {object} property is an utility object that allows to add a condition using the notation\n * ```\n * property(\"propname\").operator(...otherParams)\n * // examples\n * property(\"p\").equalTo(\"a\")\n * ```\n * @prop {function} property.equalTo `property(\"P1\").equals(\"v1\")`\n * @prop {function} property.greaterThen `property(\"P1\").greaterThen(1)`\n * @prop {function} property.greaterThenOrEqualTo `property(\"P1\").greaterThenOrEqualTo(1)`\n * @prop {function} property.lessThen `property(\"P1\").lessThen(1)`\n * @prop {function} property.lessThenOrEqualTo `property(\"P1\").lessThenOrEqualTo(1)`\n * @prop {function} property.between `property(\"P1\").between(1, 2)`\n * @prop {function} property.like `property(\"P1\").like(\"*test\", {options})`\n * @prop {function} property.ilike `property(\"P1\").ilike(\"*test\", {options})`\n * @prop {function} property.isNull `property(\"P1\").isNull()`\n * @prop {function} property.intersects `property(\"P1\").intersects(geoJSONGeometry)`\n * @prop {function} property.within `property(\"P1\").within(geoJSONGeometry)`\n * @prop {function} property.dwithin `property(\"P1\").dwithin(geoJSONGeometry, 10, \"m\")` 2nd and 3rd params are optional\n * @prop {function} property.contains `property(\"P1\").contains(geoJSONGeometry)`\n */","meta":{"filename":"FilterBuilder.js","lineno":12,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils/ogc/Filter","code":{}},"description":"<p>Returns OGC Filter Builder. The FilterBuilder returns the method to compose the filter.\nThe returned element are basically the <code>filter</code>, <code>and</code>, <code>or</code> and <code>not</code> functions, plus a <code>property</code> object that allows to build the conditions\nfor properties. Other special conditions can be passed as strings.\nThe property object have the methods listed as properies below.\nThe builder provides all the methods to compose the filter (filter, and, or, not, property) to compose the filter.</p>\n<pre class=\"prettyprint source\"><code>const filterBuilder = require('.../FilterBuilder');\nconst {filter, property, and, or, not} = filterBuilder({gmlVersion: &quot;3.1.1&quot;});\n     filter(\n         and(\n             property(&quot;P1&quot;).equals(&quot;v1&quot;),\n             proprety(&quot;the_geom&quot;).intersects(geoJSONGeometry)\n         )\n     ),\n     {srsName=&quot;EPSG:4326&quot;} // 3rd for query is optional\n     )\n{maxFeatures: 10, startIndex: 0, resultType: 'hits', outputFormat: 'application/json'} // 3rd  argument of getFeature is optional, and contains the options for the request.\n);\n\n</code></pre>","name":"FilterBuilder","kind":"class","memberof":"utils.ogc.WFS","params":[{"type":{"names":["Object"]},"optional":true,"description":"<p>the options to create the request builder</p>","name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"1.1.0\"","description":"<p>the version of WFS</p>","name":"options.wfsVersion"},{"type":{"names":["String"]},"optional":true,"description":"<p>gml Version ()</p>","name":"options.gmlVersion"},{"type":{"names":["String"]},"optional":true,"description":"<p>NameSpace to use for filters</p>","name":"options.filterNS"}],"returns":[{"type":{"names":["Object"]},"description":"<p>a filter builder.</p>"}],"properties":[{"type":{"names":["function"]},"description":"<p>Creates an and condition. Parameters can be passed as array or args list.</p>\n<pre class=\"prettyprint source\"><code>and( property(&quot;a&quot;).equalTo(&quot;1&quot;), property(&quot;b&quot;).equalTo(&quot;2&quot;), ... )\nand( [property(&quot;a&quot;).equalTo(&quot;1&quot;), property(&quot;b&quot;).equalTo(&quot;2&quot;), ...] )\n</code></pre>","name":"and"},{"type":{"names":["function"]},"description":"<p>creates a fid condition</p>\n<pre class=\"prettyprint source\"><code>fidFilter(&quot;id&quot;)` // -> &lt;ogc:FeatureId fid=&quot;sc_cities-6.1&quot;/>\n</code></pre>","name":"fidFilter"},{"type":{"names":["function"]},"description":"<p>creates a filter with the content Parameters can be passed as array or args list.</p>\n<pre class=\"prettyprint source\"><code>filter(...content) //-> &lt;ogc:Filter>...content&lt;ogc:/Filter>\n</code></pre>","name":"filter"},{"type":{"names":["function"]},"description":"<p>creates a not condition.</p>\n<pre class=\"prettyprint source\"><code>not( property(&quot;a&quot;).equalTo(&quot;1&quot;) )\n</code></pre>","name":"not"},{"type":{"names":["function"]},"description":"<p>Creates an or condition. Parameters can be passed as array or args list.</p>\n<pre class=\"prettyprint source\"><code>or( property(&quot;a&quot;).equalTo(&quot;1&quot;), property(&quot;b&quot;).equalTo(&quot;2&quot;), ... )\nor( [property(&quot;a&quot;).equalTo(&quot;1&quot;), property(&quot;b&quot;).equalTo(&quot;2&quot;), ...] )\n</code></pre>","name":"or"},{"type":{"names":["object"]},"description":"<p>is an utility object that allows to add a condition using the notation</p>\n<pre class=\"prettyprint source\"><code>property(&quot;propname&quot;).operator(...otherParams)\n// examples\nproperty(&quot;p&quot;).equalTo(&quot;a&quot;)\n</code></pre>","name":"property"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).between(1, 2)</code></p>","name":"property.between"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).contains(geoJSONGeometry)</code></p>","name":"property.contains"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).dwithin(geoJSONGeometry, 10, &quot;m&quot;)</code> 2nd and 3rd params are optional</p>","name":"property.dwithin"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).equals(&quot;v1&quot;)</code></p>","name":"property.equalTo"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).greaterThen(1)</code></p>","name":"property.greaterThen"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).greaterThenOrEqualTo(1)</code></p>","name":"property.greaterThenOrEqualTo"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).ilike(&quot;*test&quot;, {options})</code></p>","name":"property.ilike"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).intersects(geoJSONGeometry)</code></p>","name":"property.intersects"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).isNull()</code></p>","name":"property.isNull"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).lessThen(1)</code></p>","name":"property.lessThen"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).lessThenOrEqualTo(1)</code></p>","name":"property.lessThenOrEqualTo"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).like(&quot;*test&quot;, {options})</code></p>","name":"property.like"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).within(geoJSONGeometry)</code></p>","name":"property.within"}],"scope":"static","longname":"utils.ogc.WFS.FilterBuilder","$longname":"utils.ogc.WFS.FilterBuilder"},{"comment":"/**\n * Returns WFS Request Builder to allow the creation of WFS requests.\n * It gets all the functionalities of `FilterBuilder`, plus adds `getFeature`, `query` ...\n * @see utils.ogc.Filter.FilterBuilder\n * @name RequestBuilder\n * @augments utils.ogc.Filter.FilterBuilder\n * @memberof utils.ogc.WFS\n * @constuctor\n * @param {Object} [options] the options to create the request builder\n * @param  {String} [options.wfsVersion=\"1.1.0\"] the version of WFS\n * @param  {String} [options.gmlVersion]         gml Version ()\n * @param  {String} [options.filterNS]           NameSpace to use for filters\n*  @param  {String} [options.wfsNS=\"wfs\"]        namespace to use for WFS tags\n * @return {Object} A request builder. it contains all the `FilterBuilder` methods, plus the getFeature, query... methods\n * The request builder provides all the methods to compose the request (query, filter...).\n * @example\n * const requestBuilder = require('.../RequestBuilder');\n * const {getFeature, query, filter, property} = requestBuilder({wfsVersion: \"1.0.0\"});\n * const reqBody = getFeature(query(\n *      \"workspace:layer\",\n *      filter(\n *          and(\n *              property(\"P1\").equals(\"v1\"),\n *              proprety(\"the_geom\").intersects(geoJSONGeometry)\n *          )\n *      ),\n *      {srsName=\"EPSG:4326\"} // 3rd for query is optional\n *      )\n * {maxFeatures: 10, startIndex: 0, resultType: 'hits', outputFormat: 'application/json'} // 3rd  argument of getFeature is optional, and contains the options for the request.\n * );\n * @prop {function} getFeature generates the getFeatureRequest, with the contained query\n * ```\n * getFeature(query(\"topp:states', filter(...)))\n * ```\n * @prop {function} query returns the query element\n * ```\n * query(\"layerName\", filter..., {options})\n * ```\n */","meta":{"filename":"RequestBuilder.js","lineno":29,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils/ogc/WFS","code":{}},"description":"<p>Returns WFS Request Builder to allow the creation of WFS requests.\nIt gets all the functionalities of <code>FilterBuilder</code>, plus adds <code>getFeature</code>, <code>query</code> ...</p>","see":["utils.ogc.Filter.FilterBuilder"],"name":"RequestBuilder","augments":["utils.ogc.Filter.FilterBuilder"],"memberof":"utils.ogc.WFS","tags":[{"originalTitle":"constuctor","title":"constuctor","text":""}],"params":[{"type":{"names":["Object"]},"optional":true,"description":"<p>the options to create the request builder</p>","name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"1.1.0\"","description":"<p>the version of WFS</p>","name":"options.wfsVersion"},{"type":{"names":["String"]},"optional":true,"description":"<p>gml Version ()</p>","name":"options.gmlVersion"},{"type":{"names":["String"]},"optional":true,"description":"<p>NameSpace to use for filters</p>","name":"options.filterNS"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"wfs\"","description":"<p>namespace to use for WFS tags</p>","name":"options.wfsNS"}],"returns":[{"type":{"names":["Object"]},"description":"<p>A request builder. it contains all the <code>FilterBuilder</code> methods, plus the getFeature, query... methods\nThe request builder provides all the methods to compose the request (query, filter...).</p>"}],"examples":["const requestBuilder = require('.../RequestBuilder');\nconst {getFeature, query, filter, property} = requestBuilder({wfsVersion: \"1.0.0\"});\nconst reqBody = getFeature(query(\n     \"workspace:layer\",\n     filter(\n         and(\n             property(\"P1\").equals(\"v1\"),\n             proprety(\"the_geom\").intersects(geoJSONGeometry)\n         )\n     ),\n     {srsName=\"EPSG:4326\"} // 3rd for query is optional\n     )\n{maxFeatures: 10, startIndex: 0, resultType: 'hits', outputFormat: 'application/json'} // 3rd  argument of getFeature is optional, and contains the options for the request.\n);"],"properties":[{"type":{"names":["function"]},"description":"<p>generates the getFeatureRequest, with the contained query</p>\n<pre class=\"prettyprint source\"><code>getFeature(query(&quot;topp:states', filter(...)))\n</code></pre>","name":"getFeature"},{"type":{"names":["function"]},"description":"<p>returns the query element</p>\n<pre class=\"prettyprint source\"><code>query(&quot;layerName&quot;, filter..., {options})\n</code></pre>","name":"query"}],"scope":"static","longname":"utils.ogc.WFS.RequestBuilder","kind":"member","$longname":"utils.ogc.WFS.RequestBuilder"},{"comment":"/**\n * RequestBuilder for WFS-T. Returns the proper method to create request bodies\n * @memberof utils.ogc.WFST\n * @name RequestBuilder\n * @augments utils.ogc.WFS.RequestBuilder\n * @param  {object} describe  the describeFeatureType object, json format\n * @param  {object} [options] by default wfsVersion=\"1.1.0\" wfsNS=\"wfs\"\n * @return {object}           the RequestBuilder for WFS-T\n * @example\n * const {transaction, update, insert, filter, property, propertyChange} = requestBuilder(myDescribeFT);\n * transaction(\n *  update([\n *      propertyChange(\"p1\", \"v1_new\"),\n *      filter(property(\"p1\").equalTo(\"v1_old\"))\n *  ])\n * )\n * @prop {function} insert return the insert operation\n * ```\n * insert(features) // can get both array or FeatureCollection as parameter.\n * insert(f1, f2) // also listing arguments is allowed\n * ```\n * @prop {function} update return the property update. can contain propertyChange or filter (1 only).\n * ```\n * update(propertyChange(\"a\",\"b\"), filter(property(\"a\").equalTo(\"a\"))\n * ```\n * @prop {function} deleteByFilter returns the delete with filter.\n * ```\n * deleteByFilter(filter(property(\"a\").equalTo(\"a\")))\n * ```\n * @prop {function} propertyChange create a propertyChange entry\n * ```\n * propertyChange(\"p\", 2) // <Property><Name>p</Name><Value>2</Value></Property>\n * ```\n */","meta":{"filename":"RequestBuilder.js","lineno":25,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils/ogc/WFST","code":{}},"description":"<p>RequestBuilder for WFS-T. Returns the proper method to create request bodies</p>","memberof":"utils.ogc.WFST","name":"RequestBuilder","augments":["utils.ogc.WFS.RequestBuilder"],"params":[{"type":{"names":["object"]},"description":"<p>the describeFeatureType object, json format</p>","name":"describe"},{"type":{"names":["object"]},"optional":true,"description":"<p>by default wfsVersion=&quot;1.1.0&quot; wfsNS=&quot;wfs&quot;</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>the RequestBuilder for WFS-T</p>"}],"examples":["const {transaction, update, insert, filter, property, propertyChange} = requestBuilder(myDescribeFT);\ntransaction(\n update([\n     propertyChange(\"p1\", \"v1_new\"),\n     filter(property(\"p1\").equalTo(\"v1_old\"))\n ])\n)"],"properties":[{"type":{"names":["function"]},"description":"<p>returns the delete with filter.</p>\n<pre class=\"prettyprint source\"><code>deleteByFilter(filter(property(&quot;a&quot;).equalTo(&quot;a&quot;)))\n</code></pre>","name":"deleteByFilter"},{"type":{"names":["function"]},"description":"<p>return the insert operation</p>\n<pre class=\"prettyprint source\"><code>insert(features) // can get both array or FeatureCollection as parameter.\ninsert(f1, f2) // also listing arguments is allowed\n</code></pre>","name":"insert"},{"type":{"names":["function"]},"description":"<p>create a propertyChange entry</p>\n<pre class=\"prettyprint source\"><code>propertyChange(&quot;p&quot;, 2) // &lt;Property>&lt;Name>p&lt;/Name>&lt;Value>2&lt;/Value>&lt;/Property>\n</code></pre>","name":"propertyChange"},{"type":{"names":["function"]},"description":"<p>return the property update. can contain propertyChange or filter (1 only).</p>\n<pre class=\"prettyprint source\"><code>update(propertyChange(&quot;a&quot;,&quot;b&quot;), filter(property(&quot;a&quot;).equalTo(&quot;a&quot;))\n</code></pre>","name":"update"}],"scope":"static","longname":"utils.ogc.WFST.RequestBuilder","kind":"member","$longname":"utils.ogc.WFST.RequestBuilder"},{"comment":"/**\n * filters the plugins passed evaluating the disablePluginIf expression with the given context\n * @memberof utils.PluginsUtils\n * @param  {Object} item         the plugins\n * @param  {function} [state={}]   The state to evaluate\n * @param  {Object} [plugins={}] the plugins object to get requires\n * @return {Boolean}             the result of the expression evaluation in the given context.\n */","meta":{"range":[7595,8045],"filename":"PluginsUtils.js","lineno":197,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100062328","name":"exports.filterDisabledPlugins","type":"VariableDeclaration"}},"description":"<p>filters the plugins passed evaluating the disablePluginIf expression with the given context</p>","memberof":"utils.PluginsUtils","params":[{"type":{"names":["Object"]},"description":"<p>the plugins</p>","name":"item"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"{}","description":"<p>The state to evaluate</p>","name":"state"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"<p>the plugins object to get requires</p>","name":"plugins"}],"returns":[{"type":{"names":["Boolean"]},"description":"<p>the result of the expression evaluation in the given context.</p>"}],"name":"exports.filterDisabledPlugins","longname":"utils.PluginsUtils.exports.filterDisabledPlugins","kind":"constant","scope":"static","$longname":"utils.PluginsUtils.exports.filterDisabledPlugins"},{"comment":"/**\n * Gives a reduced version of the status to check.\n * It cached the last state to prevent re-evaluations if the input didn't change.\n * @memberof utils.PluginsUtils\n * @function\n * @param {Object} state the state\n * @param {Object[]} monitor an array of objects in the form `{name: \"a\", path: \"b\"}` used to produce the monitoredState\n * @return {Object} the state filtered using the monitor rules\n * @example\n * const monitor =[{name: \"a\", path: \"b\"}`];\n * const state = {b: \"test\"}\n * filterState(state, monitor); // returns {a: \"test\"}\n */","meta":{"range":[4897,5275],"filename":"PluginsUtils.js","lineno":128,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100062064","name":"exports.filterState","type":"VariableDeclaration"}},"description":"<p>Gives a reduced version of the status to check.\nIt cached the last state to prevent re-evaluations if the input didn't change.</p>","memberof":"utils.PluginsUtils","kind":"function","params":[{"type":{"names":["Object"]},"description":"<p>the state</p>","name":"state"},{"type":{"names":["Array.<Object>"]},"description":"<p>an array of objects in the form <code>{name: &quot;a&quot;, path: &quot;b&quot;}</code> used to produce the monitoredState</p>","name":"monitor"}],"returns":[{"type":{"names":["Object"]},"description":"<p>the state filtered using the monitor rules</p>"}],"examples":["const monitor =[{name: \"a\", path: \"b\"}`];\nconst state = {b: \"test\"}\nfilterState(state, monitor); // returns {a: \"test\"}"],"name":"exports.filterState","longname":"utils.PluginsUtils.exports.filterState","scope":"static","$longname":"utils.PluginsUtils.exports.filterState"},{"comment":"/**\n * Parses a expression string \"{some javascript}\" and evaluate it.\n * The expression will be evaluated getting as parameters the state and the context and the request.\n * @memberof utils.PluginsUtils\n * @param  {object} state      the state context\n * @param  {object} context    the context element\n * @param  {string} expression the expression to parse, it's a string\n * @return {object}            the result of the expression\n * @example \"{1===0 && request.query.queryParam1=paramValue1}\"\n * @example \"{1===0 && context.el1 === 'checked'}\"\n */","meta":{"range":[6972,7194],"filename":"PluginsUtils.js","lineno":183,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/utils","code":{"id":"astnode100062298","name":"exports.handleExpression","type":"VariableDeclaration"}},"description":"<p>Parses a expression string &quot;{some javascript}&quot; and evaluate it.\nThe expression will be evaluated getting as parameters the state and the context and the request.</p>","memberof":"utils.PluginsUtils","params":[{"type":{"names":["object"]},"description":"<p>the state context</p>","name":"state"},{"type":{"names":["object"]},"description":"<p>the context element</p>","name":"context"},{"type":{"names":["string"]},"description":"<p>the expression to parse, it's a string</p>","name":"expression"}],"returns":[{"type":{"names":["object"]},"description":"<p>the result of the expression</p>"}],"examples":["\"{1===0 && request.query.queryParam1=paramValue1}\"","\"{1===0 && context.el1 === 'checked'}\""],"name":"exports.handleExpression","longname":"utils.PluginsUtils.exports.handleExpression","kind":"constant","scope":"static","$longname":"utils.PluginsUtils.exports.handleExpression"},{"comment":"/**\n * Gets only the valid responses\n */","meta":{"range":[4651,4982],"filename":"mapInfo.js","lineno":119,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/selectors","code":{"id":"astnode100033076","name":"exports.validResponsesSelector","type":"VariableDeclaration"}},"description":"<p>Gets only the valid responses</p>","name":"validResponsesSelector","longname":"validResponsesSelector","kind":"constant","scope":"global","$longname":"validResponsesSelector"},{"comment":"","meta":{"range":[591,725],"filename":"execute.js","lineno":23,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/observables/wps","code":{"id":"astnode100053811","name":"WPSExecuteError","type":"MethodDefinition","paramnames":["message","code"]},"vars":{"":null}},"undocumented":true,"name":"WPSExecuteError","longname":"WPSExecuteError","kind":"class","scope":"global","params":[],"$longname":"WPSExecuteError"},{"comment":"/**\n * Gets every `ZOOM_ADD_POINT` event.\n * it creates/updates an additional layer for showing a marker for a given point\n *\n*/","meta":{"range":[14152,15041],"filename":"search.js","lineno":262,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/epics","code":{"id":"astnode100050987","name":"exports.zoomAndAddPointEpic","type":"VariableDeclaration"}},"description":"<p>Gets every <code>ZOOM_ADD_POINT</code> event.\nit creates/updates an additional layer for showing a marker for a given point</p>","name":"zoomAndAddPointEpic","longname":"zoomAndAddPointEpic","kind":"constant","scope":"global","$longname":"zoomAndAddPointEpic"}],"symbols":["actions","actions.controls","actions.controls.exports.resetControls","actions.controls.exports.setControlProperties","actions.controls.exports.setControlProperty","actions.controls.exports.toggleControl","actions.floatinglegend","actions.floatinglegend.exports.expandLegend","actions.floatinglegend.exports.resizeLegend","actions.fullscreen","actions.fullscreen.exports.toggleFullscreen","actions.globeswitcher","actions.globeswitcher.exports.toggle3d","actions.globeswitcher.exports.updateLast2dMapType","actions.map","actions.map.exports.panTo","actions.map.exports.zoomToExtent","actions.map.exports.zoomToPoint","actions.mapLayout","actions.mapLayout.exports.updateDockPanelsList","actions.mapLayout.exports.updateMapLayout","actions.maps","actions.maps.exports.attributeUpdated","actions.maps.exports.deleteMap","actions.maps.exports.doNothing","actions.maps.exports.getMapResourcesByCategory","actions.maps.exports.invalidateFeaturedMaps","actions.maps.exports.loadError","actions.maps.exports.loadMaps","actions.maps.exports.mapCreated","actions.maps.exports.mapDeleted","actions.maps.exports.mapDeleting","actions.maps.exports.mapError","actions.maps.exports.mapsLoaded","actions.maps.exports.mapsLoading","actions.maps.exports.mapsSearchTextChanged","actions.maps.exports.mapUpdating","actions.maps.exports.metadataChanged","actions.maps.exports.reloadMaps","actions.maps.exports.saveMapResource","actions.maps.exports.savingMap","actions.maps.exports.setFeaturedMapsEnabled","actions.maps.exports.setUnsavedChanged","actions.maps.exports.thumbnailError","actions.maps.exports.updateAttribute","actions.maptype","actions.maptype.exports.changeMapType","actions.notifications","actions.notifications.exports.clear","actions.notifications.exports.dispatchAction","actions.notifications.exports.error","actions.notifications.exports.hide","actions.notifications.exports.info","actions.notifications.exports.show","actions.notifications.exports.success","actions.notifications.exports.warning","actions.search","actions.search.exports.addMarker","actions.search.exports.cancelSelectedItem","actions.search.exports.changeActiveSearchTool","actions.search.exports.changeCoord","actions.search.exports.changeFormat","actions.search.exports.hideMarker","actions.search.exports.resetSearch","actions.search.exports.resultsPurge","actions.search.exports.searchLayerWithFilter","actions.search.exports.searchResultError","actions.search.exports.searchResultLoaded","actions.search.exports.searchTextChanged","actions.search.exports.searchTextLoading","actions.search.exports.selectNestedService","actions.search.exports.selectSearchItem","actions.search.exports.setHighlightedFeature","actions.search.exports.textSearch","actions.search.exports.updateResultsStyle","actions.search.exports.zoomAndAddPoint","addLayersFromCatalogsEpic","addMapTransformer","addValidator","api.module:ThreeDTiles","api.module:ThreeDTiles.getCapabilities","API.SLDService","API.SLDService.getColors","API.SLDService.getFieldsService","API.SLDService.getMetadataParameters","API.SLDService.getStyleMetadataService","API.SLDService.getStyleParameters","API.SLDService.getStyleService","API.SLDService.getThematicParameters","API.SLDService.hasThematicStyle","API.SLDService.methods","API.SLDService.readClassification","API.SLDService.readFields","API.SLDService.readRasterClassification","API.SLDService.removeThematicStyle","API.SLDService.standardParams","applyMapInfoStyle","autoReopenFeatureGridOnFeatureInfoClose","autoSearchEpic","calculateDistance","centerToVisibleArea","changePresetEpic","checkIfLayerFitsExtentForProjection","clickPointSelector","closeFeatureGridOnDrawingToolOpen","closeRightPanelOnFeatureGridOpen","combineEpics","combineReducers","components","components.app.main","components.app.StandardApp","components.buttons.FullScreenButton","components.buttons.GlobeViewSwitcherButton","components.buttons.GoFullButton","components.buttons.ToggleButton","components.data.featuregrid.editors","components.data.featuregrid.editors.customEditors","components.data.featuregrid.editors.DropDownEditor","components.data.featuregrid.editors.FormatEditor","components.data.featuregrid.editors.NumberEditor","components.data.featuregrid.FeatureGrid","components.data.identify.GeocodeViewer","components.data.identify.IdentifyContainer","components.map.DrawSupport","components.map.DrawSupport.UNSAFE_componentWillReceiveProps","components.mapControls.annotations.Annotations","components.mapControls.annotations.AnnotationsConfig","components.mapControls.annotations.AnnotationsEditor","components.misc.cardgrids.SideCard","components.misc.cardgrids.SideGrid","components.misc.EmptyView","components.misc.enhancers.emptyState","components.misc.enhancers.security.accessRuleParser","components.misc.enhancers.tooltip","components.misc.panels.Accordion","components.misc.panels.DockablePanel","components.misc.panels.DockPanel","components.misc.panels.PanelHeader","components.misc.sidebar.Sidebar","components.misc.Slider","components.misc.toolbar.Toolbar","components.misc.transfer.Transfer","components.mousePosition.MousePosition","components.notifications.NotificationContainer","components.plugins.PluginsContainer","components.query.AutocompleteField","components.ResizableModal.ResizableModalComp","components.resources.enhancers.withShareTool","components.ResourceUnavailable.ResourceUnavailable","components.TOC.FloatingLegend","components.TOC.fragments.settings.FeatureInfo","components.TOC.fragments.settings.FeatureInfoEditor","components.TOC.ThematicLayer","components.TOC.TOCItemsSettings","connect","convertDegreesToRadian","convertRadianToDegrees","createBBox","createPlugin","deactivateSyncWmsFilterOnFeatureGridClose","DropDownEditor","epics","epics.automapupdate","epics.automapupdate.exports.manageAutoMapUpdate","epics.catalog","epics.catalog.getSupportedFormatsEpic","epics.catalog.newCatalogServiceAdded","epics.cookies","epics.cookies.exports.cookiePolicyChecker","epics.featuregrid","epics.featuregrid.exports.autoCloseFeatureGridEpicOnDrowerOpen","epics.featuregrid.exports.deleteGeometryFeature","epics.featuregrid.exports.deleteSelectedFeatureGridFeatures","epics.featuregrid.exports.enableGeometryFilterOnEditMode","epics.featuregrid.exports.featureGridChangePage","epics.featuregrid.exports.featureGridLayerSelectionInitialization","epics.featuregrid.exports.featureGridReloadPageOnSaveSuccess","epics.featuregrid.exports.featureGridSort","epics.featuregrid.exports.featureGridStartupQuery","epics.featuregrid.exports.featureGridUpdateGeometryFilter","epics.featuregrid.exports.featureGridUpdateTextFilters","epics.featuregrid.exports.handleDrawFeature","epics.featuregrid.exports.handleEditFeature","epics.featuregrid.exports.onFeatureGridGeometryEditing","epics.featuregrid.exports.setHighlightFeaturesPath","epics.featuregrid.exports.triggerDrawSupportOnSelectionChange","epics.feedbackMask","epics.feedbackMask.exports.detectNewPage","epics.feedbackMask.exports.updateContextCreatorFeedbackMaskVisibility","epics.feedbackMask.exports.updateContextFeedbackMaskVisibility","epics.feedbackMask.exports.updateDashboardVisibility","epics.feedbackMask.exports.updateGeoStoryFeedbackMaskVisibility","epics.feedbackMask.exports.updateMapVisibility","epics.feedbackMask.exports.updateVisibility","epics.fullscreen","epics.fullscreen.exports.toggleFullscreenEpic","epics.globeswitcher","epics.globeswitcher.exports.updateRouteOn3dSwitch","epics.layers.updateGroupSelectedMetadataExplorerEpic","epics.mapLayout","epics.mapLayout.exports.updateMapLayoutEpic","epics.maptype","epics.maptype.exports.syncMapType","epics.notifications","epics.notifications.exports.clearNotificationOnLocationChange","epics.search.exports.searchEpic","epics.search.exports.searchItemSelected","epics.tutorial","epics.tutorial.exports.closeTutorialEpic","epics.tutorial.exports.getActionsFromStepEpic","epics.tutorial.exports.switchTutorialEpic","epics.wfsquery","epics.wfsquery.exports.featureTypeSelectedEpic","epics.wfsquery.exports.viewportSelectedEpic","epics.wfsquery.exports.wfsQueryEpic","extendExtent","external:Observable","external:selector","FeatureGrid","feedbackMaskPromptLogin","getAbsoluteURL","getApiUrl","getConfigUrl","getErrorMessage","getExtentForProjection","getExtentFromNormalized","getGeoJSONExtent","getLayoutName","getLocalizedProp","getLonLatFromPoint","getMonitoredState","getNormalizedLatLon","getPluginDescriptor","getPolygonFromCircle","getProjectedBBox","getProjections","getPropertyName","getStyleForFeature","getViewportGeometry","highlightStyleSelector","identifyOptionsSelector","importPlugin","isIndexValid","isInsideVisibleArea","isValidExtent","loadPlugin","loadScript","mapPaddingSelector","mapPluginLoad","mapPluginsPosition","module.exports.fields","module.exports.getGlyphClassName","module.exports.getMarkerFromStyle","module.exports.glyphs","module.exports.markerIcon","module.exports.markers","module.exports.markersConfig","module.exports#module.exports","module.exports#module.exports","module.exports.multiGeometry","module.exports#supportedInfoFormats","mouseMove","mouseOut","nonQueriableLayerError","normalizeExtent","observables","observables.wps","observables.wps.common","observables.wps.common.exports.cdata","observables.wps.common.exports.complexData","observables.wps.common.exports.downloadParameter","observables.wps.common.exports.getWPSURL","observables.wps.common.exports.literalData","observables.wps.common.exports.processData","observables.wps.common.exports.processOutput","observables.wps.common.exports.processParameter","observables.wps.common.exports.processReference","observables.wps.common.exports.rawDataOutput","observables.wps.common.exports.responseDocument","observables.wps.common.exports.responseForm","observables.wps.common.exports.writingParametersData","observables.wps.download","observables.wps.download.exports.download","observables.wps.download.exports.downloadEstimatorXML","observables.wps.download.exports.downloadWithAttributesFilter","observables.wps.download.exports.downloadXML","observables.wps.download.exports.queryXML","observables.wps.execute","observables.wps.execute.exports.executeProcess","observables.wps.execute.exports.executeProcessRequest","observables.wps.execute.exports.executeProcessXML","observables.wps.execute.exports.getExecutionStatus","observables.wps.execute.exports.identifierOutputExtractor","observables.wps.execute.exports.literalDataOutputExtractor","observables.wps.execute.exports.makeOutputsExtractor","observables.wps.execute.exports.referenceOutputExtractor","onFeatureGridCreateNewFeature","openCatalogEpic","orientateMap","parseURN","PERSISTED_STORE_NAME","queryOptionsSelector","receiveResponse","recordSearchEpic","reducers","reducers.controls","reducers.featuregrid","reducers.floatinglegend","reducers.mapInfo","reducers.maps","reducers.maptype","reducers.notifications","reducers.search","reducers.timeline","registerErrorParser","registerEventListener","removeQueryFromUrl","removeWmsFilterOnGridClose","replayOnTimeDimensionChange","reprojectBbox","reprojectExtent","reprojectGeoJson","resetControlsOnEnterInEditMode","resetGridOnLocationChange","restore2DMapTypeOnLocationChange","roundCoord","savePendingFeatureGridChanges","searchOnStartEpic","selectors","selectors.featuregrid","selectors.featuregrid.exports.getAttributeFilter","selectors.featuregrid.exports.getDockSize","selectors.featuregrid.exports.getTitleSelector","selectors.featuregrid.exports.isFeatureGridOpen","selectors.featuregrid.exports.selectedLayerNameSelector","selectors.floatinglegend","selectors.floatinglegend.exports.legendExpandedSelector","selectors.floatinglegend.exports.legendSizeSelector","selectors.map","selectors.map.exports.mapNameSelector","selectors.map.exports.mapSelector","selectors.map.exports.mapVersionSelector","selectors.map.exports.scalesSelector","selectors.mapinfo","selectors.mapinfo.exports.generalInfoFormatSelector","selectors.mapinfo.exports.mapInfoRequestsSelector","selectors.mapinfo.exports.stopGetFeatureInfoSelector","selectors.mapLayout","selectors.mapLayout.exports.bottomPanelOpenSelector","selectors.mapLayout.exports.boundingMapRectSelector","selectors.mapLayout.exports.boundingSidebarRectSelector","selectors.mapLayout.exports.checkConditionsSelector","selectors.mapLayout.exports.leftPanelOpenSelector","selectors.mapLayout.exports.mapLayoutSelector","selectors.mapLayout.exports.mapLayoutValuesSelector","selectors.mapLayout.exports.rightPanelOpenSelector","selectors.maptype","selectors.maptype.exports.isCesium","selectors.maptype.exports.mapTypeSelector","selectors.tutorial","selectors.tutorial.exports.tutorialSelector","serverError","showGFI","showTimeSync","StandardApp#parseInitialState","startSyncWmsFilter","stopSyncWmsFilter","switchGeostoryTutorialEpic","syncMapWmsFilter","textSearchShowGFIEpic","toLeafletCircle","toProjectedCircle","transformLineToArcs","transformPolygonToCircle","unRegisterEventListener","updateActiveDockEpic","updateLast2dMapTypeOnChangeEvents","updateSelectedOnSaveOrCloseFeatureGrid","UserSession","UserSession.getSession","UserSession.removeSession","UserSession.writeSession","utils","utils.exports.setCrsLabels","utils.ImmutableUtils","utils.ImmutableUtils.exports.arrayDelete","utils.ImmutableUtils.exports.arrayUpdate","utils.ImmutableUtils.exports.arrayUpsert","utils.LocaleUtils","utils.module.exports","utils.ogc.WFS.FilterBuilder","utils.ogc.WFS.RequestBuilder","utils.ogc.WFST.RequestBuilder","utils.PluginsUtils.exports.filterDisabledPlugins","utils.PluginsUtils.exports.filterState","utils.PluginsUtils.exports.handleExpression","utils.PrintUtils","utils.PrintUtils.exports.addTransformer","utils.PrintUtils.exports.DEFAULT_PRINT_RATIO","utils.PrintUtils.exports.getDefaultPrintingService","utils.PrintUtils.exports.getMapfishLayersSpecification","utils.PrintUtils.exports.getMapfishPrintSpecification","utils.PrintUtils.exports.getMapSize","utils.PrintUtils.exports.getNearestZoom","utils.PrintUtils.exports.getOlDefaultStyle","utils.PrintUtils.exports.getPrintScales","utils.PrintUtils.exports.getResolutionMultiplier","utils.PrintUtils.exports.normalizeUrl","utils.PrintUtils.exports.preloadData","utils.PrintUtils.exports.resetDefaultPrintingService","utils.PrintUtils.exports.toAbsoluteURL","utils.PrintUtils.exports.toOpenLayers2Style","utils.StateUtils","utils.StateUtils.addEpics","utils.StateUtils.addReducer","utils.StateUtils.exports.augmentStore","utils.StateUtils.exports.createStore","utils.StateUtils.exports.createStoreManager","utils.StateUtils.exports.getMiddlewares","utils.StateUtils.exports.getState","utils.StateUtils.exports.getStore","utils.StateUtils.exports.persistEpic","utils.StateUtils.exports.persistMiddleware","utils.StateUtils.exports.persistReducer","utils.StateUtils.exports.setStore","utils.StateUtils.exports.updateStore","utils.StateUtils.fetchMiddleware","utils.StateUtils.muteEpics","utils.StateUtils.removeReducer","utils.StateUtils.rootEpic","utils.StateUtils.unmuteEpics","utils.ThumbnailUtils","utils.ThumbnailUtils.exports.createBase64Thumbnail","utils.ThumbnailUtils.exports.getVideoFrame","utils.ThumbnailUtils.exports.getVideoThumbnail","validResponsesSelector","WPSExecuteError","zoomAndAddPointEpic"]},"jsapi":{"documentation":[{"comment":"/**\n * MapStore2 JavaScript API. Allows embedding MapStore2 functionalities into\n * a standard HTML page.\n *\n * ATTENTION: As of July 2020 a number of MapStore2 plugins (i.e. TOC layer settings, Identify) use react-dock for providing\n * Dock panel functionality, that assumes that we use the whole window, so the panels won't show up at all or will\n * not be constrained within the container.\n * @class\n */","meta":{"range":[3637,13522],"filename":"MapStore2.js","lineno":118,"columnno":6,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/jsapi","code":{"id":"astnode100000386","name":"MapStore2","type":"ObjectExpression","value":"{\"create\":\"\",\"buildPluginsCfg\":\"\",\"getParamFromRequest\":\"\",\"loadConfigFromStorage\":\"\",\"onAction\":\"\",\"offAction\":\"\",\"onStateChange\":\"\",\"offStateChange\":\"\",\"withPlugins\":\"\",\"triggerAction\":\"\"}"}},"description":"<p>MapStore2 JavaScript API. Allows embedding MapStore2 functionalities into\na standard HTML page.</p>\n<p>ATTENTION: As of July 2020 a number of MapStore2 plugins (i.e. TOC layer settings, Identify) use react-dock for providing\nDock panel functionality, that assumes that we use the whole window, so the panels won't show up at all or will\nnot be constrained within the container.</p>","kind":"class","name":"MapStore2","longname":"MapStore2","scope":"global","params":[],"$longname":"MapStore2","$members":[{"comment":"/**\n     * Instantiates an embedded MapStore2 application in the given container.\n     * MapStore2 api doesn't use StandardRouter but It relies on StandardContainer\n     * @memberof MapStore2\n     * @static\n     * @param {string} container id of the DOM element that should contain the embedded MapStore2\n     * @param {object} options set of options of the embedded app\n     *  * The options object can contain the following properties, to configure the app UI and state:\n     *  * **plugins**: list of plugins (and the related configuration) to be included in the app\n     *    look at [Plugins documentation](https://mapstore.readthedocs.io/en/latest/developer-guide/plugins-documentation/) for further details\n     *  * **config**: map configuration object for the application (look at [Map Configuration](https://mapstore.readthedocs.io/en/latest/developer-guide/maps-configuration/) for details)\n     *  * **configUrl**: map configuration url for the application (look at [Map Configuration](https://mapstore.readthedocs.io/en/latest/developer-guide/maps-configuration/) for details)\n     *  * **originalUrl**: url of the original instance of MapStore. If present it will be linked inside the map using the \"GoFull\" plugin, present by default.\n     *  * **initialState**: allows setting the initial application state (look at [State Configuration](https://mapstore.readthedocs.io/en/latest/developer-guide/local-config/) for details)\n     *\n     * Styling can be configured either using a **theme**, or a complete custom **less stylesheet**, using the\n     * following options properties:\n     *  * **style**: less style to be applied\n     *  * **startAction**: the actionType to wait before start triggering actions. By default CHANGE_MAP_VIEW\n     *  * **theme**: theme configuration options:\n     *    * path: path/url of the themes folder related to the current page\n     *    * theme: theme name to be used\n     *\n     * ```javascript\n     * {\n     *      plugins: ['Map', 'ZoomIn', 'ZoomOut'],\n     *      config: {\n     *          map: {\n     *              ...\n     *          }\n     *      },\n     *      configUrl: '...',\n     *      initialState: {\n     *          defaultState: {\n     *              ...\n     *          }\n     *      },\n     *      style: '<custom style>',\n     *      theme: {\n     *          theme: 'mytheme',\n     *          path: 'dist/themes'\n     *      }\n     * }\n     * ```\n     * @param {object} [plugins] optional plugins definition (defaults to local plugins list)\n     * @param {object} [component] optional page component (defaults to MapStore2 Embedded Page)\n     * @example\n     * MapStore2.create('container', {\n     *      plugins: ['Map']\n     * });\n     */","meta":{"range":[6370,10179],"filename":"MapStore2.js","lineno":170,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/jsapi","code":{"id":"astnode100000389","name":"create","type":"FunctionExpression"},"vars":{"embedded":"MapStore2.create~embedded","options":"MapStore2.create~options","undefined":null,"componentConfig":"MapStore2.create~componentConfig","StandardContainer":"MapStore2.create~StandardContainer","":null,"actionTrigger":"MapStore2.create~actionTrigger","triggerAction":"MapStore2.create~triggerAction","appStore":"MapStore2.create~appStore","initialActions":"MapStore2.create~initialActions","appConfig":"MapStore2.create~appConfig","dom":"MapStore2.create~dom","dom.id":"MapStore2.create~dom.id","defaultThemeCfg":"MapStore2.create~defaultThemeCfg","themeCfg":"MapStore2.create~themeCfg","onStoreInit":"MapStore2.create~onStoreInit"}},"description":"<p>Instantiates an embedded MapStore2 application in the given container.\nMapStore2 api doesn't use StandardRouter but It relies on StandardContainer</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["string"]},"description":"<p>id of the DOM element that should contain the embedded MapStore2</p>","name":"container"},{"type":{"names":["object"]},"description":"<p>set of options of the embedded app</p>\n<ul>\n<li>The options object can contain the following properties, to configure the app UI and state:</li>\n<li><strong>plugins</strong>: list of plugins (and the related configuration) to be included in the app\nlook at <a href=\"https://mapstore.readthedocs.io/en/latest/developer-guide/plugins-documentation/\">Plugins documentation</a> for further details</li>\n<li><strong>config</strong>: map configuration object for the application (look at <a href=\"https://mapstore.readthedocs.io/en/latest/developer-guide/maps-configuration/\">Map Configuration</a> for details)</li>\n<li><strong>configUrl</strong>: map configuration url for the application (look at <a href=\"https://mapstore.readthedocs.io/en/latest/developer-guide/maps-configuration/\">Map Configuration</a> for details)</li>\n<li><strong>originalUrl</strong>: url of the original instance of MapStore. If present it will be linked inside the map using the &quot;GoFull&quot; plugin, present by default.</li>\n<li><strong>initialState</strong>: allows setting the initial application state (look at <a href=\"https://mapstore.readthedocs.io/en/latest/developer-guide/local-config/\">State Configuration</a> for details)</li>\n</ul>\n<p>Styling can be configured either using a <strong>theme</strong>, or a complete custom <strong>less stylesheet</strong>, using the\nfollowing options properties:</p>\n<ul>\n<li><strong>style</strong>: less style to be applied</li>\n<li><strong>startAction</strong>: the actionType to wait before start triggering actions. By default CHANGE_MAP_VIEW</li>\n<li><strong>theme</strong>: theme configuration options:\n<ul>\n<li>path: path/url of the themes folder related to the current page</li>\n<li>theme: theme name to be used</li>\n</ul>\n</li>\n</ul>\n<pre class=\"prettyprint source lang-javascript\"><code>{\n     plugins: ['Map', 'ZoomIn', 'ZoomOut'],\n     config: {\n         map: {\n             ...\n         }\n     },\n     configUrl: '...',\n     initialState: {\n         defaultState: {\n             ...\n         }\n     },\n     style: '&lt;custom style>',\n     theme: {\n         theme: 'mytheme',\n         path: 'dist/themes'\n     }\n}\n</code></pre>","name":"options"},{"type":{"names":["object"]},"optional":true,"description":"<p>optional plugins definition (defaults to local plugins list)</p>","name":"plugins"},{"type":{"names":["object"]},"optional":true,"description":"<p>optional page component (defaults to MapStore2 Embedded Page)</p>","name":"component"}],"examples":["MapStore2.create('container', {\n     plugins: ['Map']\n});"],"name":"create","longname":"MapStore2.create","kind":"function","$longname":"MapStore2.create"},{"comment":"/**\n     * Removes an action listener.\n     *\n     * @memberof MapStore2\n     * @static\n     * @param {string} type type of actions that is captured by the listener (* for all)\n     * @param {function} listener listener to be removed\n     * @example\n     * MapStore2.offAction('CHANGE_MAP_VIEW', listener);\n     */","meta":{"range":[11265,11433],"filename":"MapStore2.js","lineno":286,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/jsapi","code":{"id":"astnode100000869","name":"offAction","type":"ArrowFunctionExpression"},"vars":{"listeners":"MapStore2.offAction~listeners","":null,"actionListeners[undefined]":null}},"description":"<p>Removes an action listener.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["string"]},"description":"<p>type of actions that is captured by the listener (* for all)</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>listener to be removed</p>","name":"listener"}],"examples":["MapStore2.offAction('CHANGE_MAP_VIEW', listener);"],"name":"offAction","longname":"MapStore2.offAction","kind":"function","$longname":"MapStore2.offAction"},{"comment":"/**\n     * Removes a state listener.\n     *\n     * @memberof MapStore2\n     * @static\n     * @param {function} listener listener to be removed\n     * @example\n     * MapStore2.offStateChange(listener);\n     */","meta":{"range":[12414,12534],"filename":"MapStore2.js","lineno":318,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/jsapi","code":{"id":"astnode100000915","name":"offStateChange","type":"ArrowFunctionExpression"},"vars":{"stateChangeListeners":"MapStore2.offStateChange~stateChangeListeners","":null}},"description":"<p>Removes a state listener.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["function"]},"description":"<p>listener to be removed</p>","name":"listener"}],"examples":["MapStore2.offStateChange(listener);"],"name":"offStateChange","longname":"MapStore2.offStateChange","kind":"function","$longname":"MapStore2.offStateChange"},{"comment":"/**\n     * Adds a listener that will be notified of all the MapStore2 events (**actions**), or only some of them.\n     *\n     * @memberof MapStore2\n     * @static\n     * @param {string} type type of actions to be captured (* for all)\n     * @param {function} listener function to be called for each launched action; it will receive\n     *  the action as the only argument\n     * @example\n     * MapStore2.onAction('CHANGE_MAP_VIEW', function(action) {\n     *      console.log(action.zoom);\n     * });\n     */","meta":{"range":[10771,10940],"filename":"MapStore2.js","lineno":271,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/jsapi","code":{"id":"astnode100000844","name":"onAction","type":"ArrowFunctionExpression"},"vars":{"listeners":"MapStore2.onAction~listeners","actionListeners[undefined]":null}},"description":"<p>Adds a listener that will be notified of all the MapStore2 events (<strong>actions</strong>), or only some of them.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["string"]},"description":"<p>type of actions to be captured (* for all)</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>function to be called for each launched action; it will receive\nthe action as the only argument</p>","name":"listener"}],"examples":["MapStore2.onAction('CHANGE_MAP_VIEW', function(action) {\n     console.log(action.zoom);\n});"],"name":"onAction","longname":"MapStore2.onAction","kind":"function","$longname":"MapStore2.onAction"},{"comment":"/**\n     * Adds a listener that will be notified of each state update.\n     *\n     * @memberof MapStore2\n     * @static\n     * @param {function} listener function to be called for each state udpate; it will receive\n     *  the new state as the only argument\n     * @param {function} [selector] optional function that will produce a partial/derived state\n     * from the global state before calling the listeners\n     * @example\n     * MapStore2.onStateChange(function(map) {\n     *      console.log(map.zoom);\n     * }, function(state) {\n     *      return (state.map && state.map.present) || state.map || {};\n     * });\n     */","meta":{"range":[12072,12194],"filename":"MapStore2.js","lineno":306,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/jsapi","code":{"id":"astnode100000896","name":"onStateChange","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Adds a listener that will be notified of each state update.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["function"]},"description":"<p>function to be called for each state udpate; it will receive\nthe new state as the only argument</p>","name":"listener"},{"type":{"names":["function"]},"optional":true,"description":"<p>optional function that will produce a partial/derived state\nfrom the global state before calling the listeners</p>","name":"selector"}],"examples":["MapStore2.onStateChange(function(map) {\n     console.log(map.zoom);\n}, function(state) {\n     return (state.map && state.map.present) || state.map || {};\n});"],"name":"onStateChange","longname":"MapStore2.onStateChange","kind":"function","$longname":"MapStore2.onStateChange"},{"comment":"/**\n     * Triggers an action\n     * @param  {object} action The action to trigger.\n     * @example\n     * triggerAction({\n     *       type: 'ZOOM_TO_EXTENT',\n     *       extent: {\n     *         minx: '-124.731422',\n     *         miny: '24.955967',\n     *         maxx: '-66.969849',\n     *         maxy: '49.371735'\n     *       },\n     *       crs: 'EPSG:4326'\n     *   })\n     */","meta":{"range":[13472,13520],"filename":"MapStore2.js","lineno":349,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/jsapi","code":{"id":"astnode100000959","name":"triggerAction","type":"ArrowFunctionExpression"}},"description":"<p>Triggers an action</p>","params":[{"type":{"names":["object"]},"description":"<p>The action to trigger.</p>","name":"action"}],"examples":["triggerAction({\n      type: 'ZOOM_TO_EXTENT',\n      extent: {\n        minx: '-124.731422',\n        miny: '24.955967',\n        maxx: '-66.969849',\n        maxy: '49.371735'\n      },\n      crs: 'EPSG:4326'\n  })"],"name":"triggerAction","longname":"MapStore2.triggerAction","kind":"function","memberof":"MapStore2","scope":"static","$longname":"MapStore2.triggerAction"},{"comment":"/**\n     * Returns a new custom API object using the given plugins list.\n     *\n     * @memberof MapStore2\n     * @static\n     * @param {object} plugins list of included plugins\n     * @param {object} [options] default options (to be overridden on create)\n     * @example\n     * MapStore2.withPlugins({...});\n     */","meta":{"range":[12861,13075],"filename":"MapStore2.js","lineno":331,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/jsapi","code":{"id":"astnode100000931","name":"withPlugins","type":"ArrowFunctionExpression"}},"description":"<p>Returns a new custom API object using the given plugins list.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["object"]},"description":"<p>list of included plugins</p>","name":"plugins"},{"type":{"names":["object"]},"optional":true,"description":"<p>default options (to be overridden on create)</p>","name":"options"}],"examples":["MapStore2.withPlugins({...});"],"name":"withPlugins","longname":"MapStore2.withPlugins","kind":"function","$longname":"MapStore2.withPlugins"}]}],"symbols":["MapStore2","MapStore2.create","MapStore2.offAction","MapStore2.offStateChange","MapStore2.onAction","MapStore2.onStateChange","MapStore2.triggerAction","MapStore2.withPlugins"]},"plugins":{"documentation":[{"comment":"/**\n * The React Components listed as *pages* can be included from the `appConfig.js` file to be used in by `react-router`.\n * They typically handle the `match` property to initialize the page and load the needed contents basing of parameters received by the router (`#` part of the URL, in the standard configuration).\n * Usually pages are also wrappers for `Page` that is a wrapper for {@link ../docs/api/framework#components.plugins.PluginsContainer|PluginsContainer},\n * This means that they also render MapStore {@link #plugins|plugins} configured for the page.\n * MapStore has several pages, and every page *can* contain one or more {@link #plugins|plugins}.\n *\n * @name pages\n * @see {@link https://mapstore.readthedocs.io/en/latest/developer-guide/plugins-architecture/}\n *\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"description":"<p>The React Components listed as <em>pages</em> can be included from the <code>appConfig.js</code> file to be used in by <code>react-router</code>.\nThey typically handle the <code>match</code> property to initialize the page and load the needed contents basing of parameters received by the router (<code>#</code> part of the URL, in the standard configuration).\nUsually pages are also wrappers for <code>Page</code> that is a wrapper for {@link ../docs/api/framework#components.plugins.PluginsContainer|PluginsContainer},\nThis means that they also render MapStore {@link #plugins|plugins} configured for the page.\nMapStore has several pages, and every page <em>can</em> contain one or more {@link #plugins|plugins}.</p>","name":"pages","see":["{@link https://mapstore.readthedocs.io/en/latest/developer-guide/plugins-architecture/}"],"longname":"pages","kind":"member","scope":"global","$longname":"pages","$members":[{"comment":"/**\n  * @name Context\n  * @memberof pages\n  * @class\n  * @classdesc\n  * Context page allow to load a map viewer with a configuration stored at a specific id.\n  * `pluginsConfig` property will be downloaded using the provided `contextId` with the map.\n  * If `default` map is used, the standard configuration from `localConfig.plugins` will be used.\n  *\n  * Requirements:\n  *\n  * - This page have to be configured in appConfig `pages`. this way\n  * ```javascript\n  *    pages: [\n  *    //...\n  *    {\n  *      name: \"context\",\n  *      path: \"/context/id/{contextId}/{mapId}\",\n  *      component: require('path_to_/pages/Context')\n  *    }]\n  * ```\n  * - `localConfig.json` must include an 'Context' entry in the plugins\n  *\n  * Then this page will be available, for example, at http://localhos:8081/#/context/id/1234/5678\n  *\n  * @example\n  * // localConfig configuration example\n  * \"plugins\": {\n  *  \"importer\": [\n  *   import { customVariablesEnabledSelector } from './../../selectors/contextcreator';\n      // ...\n  *         {\n  *             \"name\": \"Importer\",\n  *            \"cfg\": {} // see plugin configuration\n  *         }\n  *     ]\n  * }\n*/","meta":{"filename":"Context.jsx","lineno":28,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"name":"Context","memberof":"pages","kind":"class","classdesc":"<p>Context page allow to load a map viewer with a configuration stored at a specific id.\n<code>pluginsConfig</code> property will be downloaded using the provided <code>contextId</code> with the map.\nIf <code>default</code> map is used, the standard configuration from <code>localConfig.plugins</code> will be used.</p>\n<p>Requirements:</p>\n<ul>\n<li>This page have to be configured in appConfig <code>pages</code>. this way</li>\n</ul>\n<pre class=\"prettyprint source lang-javascript\"><code>   pages: [\n   //...\n   {\n     name: &quot;context&quot;,\n     path: &quot;/context/id/{contextId}/{mapId}&quot;,\n     component: require('path_to_/pages/Context')\n   }]\n</code></pre>\n<ul>\n<li><code>localConfig.json</code> must include an 'Context' entry in the plugins</li>\n</ul>\n<p>Then this page will be available, for example, at http://localhos:8081/#/context/id/1234/5678</p>","examples":["// localConfig configuration example\n\"plugins\": {\n \"importer\": [\n  import { customVariablesEnabledSelector } from './../../selectors/contextcreator';\n      // ...\n        {\n            \"name\": \"Importer\",\n           \"cfg\": {} // see plugin configuration\n        }\n    ]\n}"],"scope":"static","longname":"pages.Context","$longname":"pages.Context"},{"comment":"/**\n  * @name ContextCreator\n  * @memberof pages\n  * @class\n  * @classdesc\n  * This is the main container page for ContextCreator.\n  * It handles all the initial of context and\n  * it is a container for the ContextCreator plugins.\n  *\n  */","meta":{"filename":"ContextCreator.jsx","lineno":19,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"name":"ContextCreator","memberof":"pages","kind":"class","classdesc":"<p>This is the main container page for ContextCreator.\nIt handles all the initial of context and\nit is a container for the ContextCreator plugins.</p>","scope":"static","longname":"pages.ContextCreator","$longname":"pages.ContextCreator"},{"comment":"/**\n  * @name ContextManager\n  * @memberof pages\n  * @class\n  * @classdesc\n  * This is the main container page for ContextManager.\n  * it is a container for the ContextManager plugins.\n  */","meta":{"filename":"ContextManager.jsx","lineno":17,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"name":"ContextManager","memberof":"pages","kind":"class","classdesc":"<p>This is the main container page for ContextManager.\nit is a container for the ContextManager plugins.</p>","scope":"static","longname":"pages.ContextManager","$longname":"pages.ContextManager"},{"comment":"/**\n  * @name Dashboard\n  * @memberof pages\n  * @class\n  * @classdesc\n  * This is the main container page for Dashboard.\n  * It handles all the routing and initial loading functionalities dedicated to Dashboard contents and\n  * it is a container for the Dashboard plugins.\n  *\n  */","meta":{"filename":"Dashboard.jsx","lineno":22,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"name":"Dashboard","memberof":"pages","kind":"class","classdesc":"<p>This is the main container page for Dashboard.\nIt handles all the routing and initial loading functionalities dedicated to Dashboard contents and\nit is a container for the Dashboard plugins.</p>","scope":"static","longname":"pages.Dashboard","$longname":"pages.Dashboard"},{"comment":"/**\n  * @name GeoStory\n  * @memberof pages\n  * @class\n  * @classdesc\n  * This is the main container page for GeoStory.\n  * It handles all the routing and initial loading functionalities dedicated to GeoStory contents and\n  * it is a container for the GeoStory plugins.\n  *\n  */","meta":{"filename":"GeoStory.jsx","lineno":25,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"name":"GeoStory","memberof":"pages","kind":"class","classdesc":"<p>This is the main container page for GeoStory.\nIt handles all the routing and initial loading functionalities dedicated to GeoStory contents and\nit is a container for the GeoStory plugins.</p>","scope":"static","longname":"pages.GeoStory","$longname":"pages.GeoStory"},{"comment":"/**\n  * @name Importer\n  * @memberof pages\n  * @class\n  * @classdesc\n  * Importer allow a user with admin permissions to import data in GeoServer.\n  *\n  * Requirements:\n  *\n  * - This page have to be configured in appConfig `pages`. this way\n  * ```javascript\n  *    pages: [\n  *    //...\n  *    {\n  *      name: \"importer\",\n  *      path: \"/importer\",\n  *      component: require('path_to_/pages/Importer')\n  *    }]\n  * ```\n  * - `localConfig.json` must include an 'importer' entry in the plugins\n  *\n  * Then this page will be available at http://localhos:8081/#/importer\n  *\n  * @example\n  * // localConfig configuration example\n  * \"plugins\": {\n  *  \"importer\": [\n  *         // ...\n  *         {\n  *             \"name\": \"Importer\",\n  *            \"cfg\": {} // see plugin configuration\n  *         }\n  *     ]\n  * }\n*/","meta":{"filename":"Importer.jsx","lineno":20,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"name":"Importer","memberof":"pages","kind":"class","classdesc":"<p>Importer allow a user with admin permissions to import data in GeoServer.</p>\n<p>Requirements:</p>\n<ul>\n<li>This page have to be configured in appConfig <code>pages</code>. this way</li>\n</ul>\n<pre class=\"prettyprint source lang-javascript\"><code>   pages: [\n   //...\n   {\n     name: &quot;importer&quot;,\n     path: &quot;/importer&quot;,\n     component: require('path_to_/pages/Importer')\n   }]\n</code></pre>\n<ul>\n<li><code>localConfig.json</code> must include an 'importer' entry in the plugins</li>\n</ul>\n<p>Then this page will be available at http://localhos:8081/#/importer</p>","examples":["// localConfig configuration example\n\"plugins\": {\n \"importer\": [\n        // ...\n        {\n            \"name\": \"Importer\",\n           \"cfg\": {} // see plugin configuration\n        }\n    ]\n}"],"scope":"static","longname":"pages.Importer","$longname":"pages.Importer"},{"comment":"/**\n  * @name Manager\n  * @memberof pages\n  * @class\n  * @classdesc\n  * This is the main container page for user administration page.\n  * it is a container for the Manager plugins.\n  *\n  */","meta":{"filename":"Manager.jsx","lineno":18,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"name":"Manager","memberof":"pages","kind":"class","classdesc":"<p>This is the main container page for user administration page.\nit is a container for the Manager plugins.</p>","scope":"static","longname":"pages.Manager","$longname":"pages.Manager"},{"comment":"/**\n  * @name Maps\n  * @memberof pages\n  * @class\n  * @classdesc\n  * This is the home page of MapStore.\n  * Renders plugins and triggers the initial load action for loading contents in the page.\n  */","meta":{"filename":"Maps.jsx","lineno":24,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"name":"Maps","memberof":"pages","kind":"class","classdesc":"<p>This is the home page of MapStore.\nRenders plugins and triggers the initial load action for loading contents in the page.</p>","scope":"static","longname":"pages.Maps","$longname":"pages.Maps"},{"comment":"/**\n * Main page for the Map. It is used to render the main page (or context)\n * It renders the plugins dedicated to the map (depending on mobile/desktop/embedded... mode),\n * and it triggers the initial actions to load the map config (using the parameter received in `match` property).\n * @name MapViewer\n * @class\n * @memberof pages\n */","meta":{"filename":"MapViewer.jsx","lineno":22,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"description":"<p>Main page for the Map. It is used to render the main page (or context)\nIt renders the plugins dedicated to the map (depending on mobile/desktop/embedded... mode),\nand it triggers the initial actions to load the map config (using the parameter received in <code>match</code> property).</p>","name":"MapViewer","kind":"class","memberof":"pages","scope":"static","longname":"pages.MapViewer","$longname":"pages.MapViewer"},{"comment":"/**\n  * @name RulesManager\n  * @memberof pages\n  * @class\n  * @classdesc\n  * Rules Manager is a page that allow the user to interact with GeoFence REST API and set-up GeoFence Rules.\n  * It works with both stand-alone and GeoServer integrated version of GeoFence (integrated version do not actually support layerDetails).\n  *\n  * To Configure this tool you have to:\n  *\n  * 1. *add this page to the appConfig.js `pages` (if not present):*\n  *\n  * ```\n  * {\n  *      name: \"rulesmanager\",\n  *      path: \"/rules-manager\",\n  *      component: require('./pages/RulesManager')\n  *  }\n  *  ```\n  * 2. *Setup of this page in localConfig.json* adding the plugins (note `disableDetails` option):\n  *\n  * ```\n  * \"plugins\": {\n  *  \"rulesmanager\": [\n  *         \"Redirect\" ,\n  *         {\n  *             \"name\": \"OmniBar\",\n  *                 \"cfg\": {\n  *                      \"containerPosition\": \"header\",\n  *                    \"className\": \"navbar shadow navbar-home\"\n  *                 }\n  *         }, \"ManagerMenu\", \"Login\", \"Language\", \"NavMenu\",\n  *         \"Attribution\", \"RulesDataGrid\", \"Notifications\"\n  *         ,{\n  *              \"name\": \"RulesEditor\",\n  *            \"cfg\": {\n  *                 \"containerPosition\": \"columns\",\n*                   \"disableDetails\": true // Optional - NEEDED for GeoServer Integrated version\n  *             }\n  *         }\n  *     ]\n  * }\n  * ```\n  * The app is available at http://localhost:8081/#/rules-manager.\n  *\n  * 3. *Setup Base URLs configurations in the localConfig.json root* accordingly to the version of GeoFence you are using (stand-alone or integrated).\n  *\n  * *GeoFence Stand-Alone*\n  *\n  * ```\n  * \"geoFencePath\": \"geofence/rest\",\n  * \"geoFenceUrl\": \"https://my-domain.org/\",\n  * \"geoFenceServiceType\": \"geofence\",\n  * \"geoFenceGeoServerInstance\": {\n  *   \"url\": \"https://my-domain.org/geoserver/\",\n  *   \"id\": 1\n  * },\n  * ```\n  *\n  * *GeoServer Integrated*\n  *\n  * ```\n  * \"geoFenceUrl\": \"/geoserver/\",\n  * \"geoFencePath\": \"rest/geofence\",\n  * \"geoFenceServiceType\": \"geoserver\",\n  * \"geoFenceLayerServiceType\": \"rest\",\n  * \"geoserverUserServiceName\": \"geostore\" // optional, if you want to use a specific user service for autocomplete, instead of GeoServer's default one\n  * \"geoFenceGeoServerInstance\": {\n  *   \"url\": \"/geoserver/\",\n  *   \"id\": 1\n  * },\n  * ```\n  *\n  * 4. *Setup of initialState in localConfig.json for rulemanager* to specify services that can be selected in rules manager.\n  *\n  * ```\n  * \"initialState\": {\n  *    \"defaultState\": {\n  *       \"rulesmanager\": {\n  *          \"services\": {\n  *              \"WFS\": [\n  *                 \"DescribeFeatureType\",\n  *                   \"GetCapabilities\",\n  *                   \"GetFeature\",\n  *                   \"GetFeatureWithLock\",\n  *                   \"LockFeature\",\n  *                   \"Transaction\"\n  *               ],\n  *              \"WMS\": [\n  *                   \"DescribeLayer\",\n  *                   \"GetCapabilities\",\n  *                   \"GetFeatureInfo\",\n  *                   \"GetLegendGraphic\",\n  *                   \"GetMap\",\n  *                   \"GetStyles\"\n  *               ]\n  *           }\n  *       }\n  *     }\n  *   }\n  * ```\n  *\n  * For more information about how to configure plugins ( {@link api/plugins#plugins.RulesEditor} and  {@link api/plugins#plugins.RulesDataGrid}) see the documentation of the specific plugins\n*/","meta":{"filename":"RulesManager.jsx","lineno":25,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/pages","code":{}},"name":"RulesManager","memberof":"pages","kind":"class","classdesc":"<p>Rules Manager is a page that allow the user to interact with GeoFence REST API and set-up GeoFence Rules.\nIt works with both stand-alone and GeoServer integrated version of GeoFence (integrated version do not actually support layerDetails).</p>\n<p>To Configure this tool you have to:</p>\n<ol>\n<li><em>add this page to the appConfig.js <code>pages</code> (if not present):</em></li>\n</ol>\n<pre class=\"prettyprint source\"><code>{\n     name: &quot;rulesmanager&quot;,\n     path: &quot;/rules-manager&quot;,\n     component: require('./pages/RulesManager')\n }\n</code></pre>\n<ol start=\"2\">\n<li><em>Setup of this page in localConfig.json</em> adding the plugins (note <code>disableDetails</code> option):</li>\n</ol>\n<pre class=\"prettyprint source\"><code>&quot;plugins&quot;: {\n &quot;rulesmanager&quot;: [\n        &quot;Redirect&quot; ,\n        {\n            &quot;name&quot;: &quot;OmniBar&quot;,\n                &quot;cfg&quot;: {\n                     &quot;containerPosition&quot;: &quot;header&quot;,\n                   &quot;className&quot;: &quot;navbar shadow navbar-home&quot;\n                }\n        }, &quot;ManagerMenu&quot;, &quot;Login&quot;, &quot;Language&quot;, &quot;NavMenu&quot;,\n        &quot;Attribution&quot;, &quot;RulesDataGrid&quot;, &quot;Notifications&quot;\n        ,{\n             &quot;name&quot;: &quot;RulesEditor&quot;,\n           &quot;cfg&quot;: {\n                &quot;containerPosition&quot;: &quot;columns&quot;,\n                  &quot;disableDetails&quot;: true // Optional - NEEDED for GeoServer Integrated version\n            }\n        }\n    ]\n}\n</code></pre>\n<p>The app is available at http://localhost:8081/#/rules-manager.</p>\n<ol start=\"3\">\n<li><em>Setup Base URLs configurations in the localConfig.json root</em> accordingly to the version of GeoFence you are using (stand-alone or integrated).</li>\n</ol>\n<p><em>GeoFence Stand-Alone</em></p>\n<pre class=\"prettyprint source\"><code>&quot;geoFencePath&quot;: &quot;geofence/rest&quot;,\n&quot;geoFenceUrl&quot;: &quot;https://my-domain.org/&quot;,\n&quot;geoFenceServiceType&quot;: &quot;geofence&quot;,\n&quot;geoFenceGeoServerInstance&quot;: {\n  &quot;url&quot;: &quot;https://my-domain.org/geoserver/&quot;,\n  &quot;id&quot;: 1\n},\n</code></pre>\n<p><em>GeoServer Integrated</em></p>\n<pre class=\"prettyprint source\"><code>&quot;geoFenceUrl&quot;: &quot;/geoserver/&quot;,\n&quot;geoFencePath&quot;: &quot;rest/geofence&quot;,\n&quot;geoFenceServiceType&quot;: &quot;geoserver&quot;,\n&quot;geoFenceLayerServiceType&quot;: &quot;rest&quot;,\n&quot;geoserverUserServiceName&quot;: &quot;geostore&quot; // optional, if you want to use a specific user service for autocomplete, instead of GeoServer's default one\n&quot;geoFenceGeoServerInstance&quot;: {\n  &quot;url&quot;: &quot;/geoserver/&quot;,\n  &quot;id&quot;: 1\n},\n</code></pre>\n<ol start=\"4\">\n<li><em>Setup of initialState in localConfig.json for rulemanager</em> to specify services that can be selected in rules manager.</li>\n</ol>\n<pre class=\"prettyprint source\"><code>&quot;initialState&quot;: {\n   &quot;defaultState&quot;: {\n      &quot;rulesmanager&quot;: {\n         &quot;services&quot;: {\n             &quot;WFS&quot;: [\n                &quot;DescribeFeatureType&quot;,\n                  &quot;GetCapabilities&quot;,\n                  &quot;GetFeature&quot;,\n                  &quot;GetFeatureWithLock&quot;,\n                  &quot;LockFeature&quot;,\n                  &quot;Transaction&quot;\n              ],\n             &quot;WMS&quot;: [\n                  &quot;DescribeLayer&quot;,\n                  &quot;GetCapabilities&quot;,\n                  &quot;GetFeatureInfo&quot;,\n                  &quot;GetLegendGraphic&quot;,\n                  &quot;GetMap&quot;,\n                  &quot;GetStyles&quot;\n              ]\n          }\n      }\n    }\n  }\n</code></pre>\n<p>For more information about how to configure plugins ( {@link api/plugins#plugins.RulesEditor} and  {@link api/plugins#plugins.RulesDataGrid}) see the documentation of the specific plugins</p>","scope":"static","longname":"pages.RulesManager","$longname":"pages.RulesManager"}]},{"comment":"/**\n * MapStore2 plugins.\n * In this documentation you can find the list of all the plugins available in MapStore, their main purpose and configuration.\n * @name plugins\n * @see {@link https://mapstore.readthedocs.io/en/latest/developer-guide/plugins-architecture/}\n *\n */","meta":{"filename":"index.jsdoc","lineno":1,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>MapStore2 plugins.\nIn this documentation you can find the list of all the plugins available in MapStore, their main purpose and configuration.</p>","name":"plugins","see":["{@link https://mapstore.readthedocs.io/en/latest/developer-guide/plugins-architecture/}"],"longname":"plugins","kind":"member","scope":"global","$longname":"plugins","$members":[{"comment":"/**\n * Plugin for the \"About\" window in mapstore.\n * @name About\n * @class\n * @memberof plugins\n */","meta":{"filename":"About.jsx","lineno":40,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/plugins","code":{}},"description":"<p>Plugin for the &quot;About&quot; window in mapstore.</p>","name":"About","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.About","$longname":"plugins.About"},{"comment":"/**\n * Adds to the {@link #plugins.TOC|TOC} plugin a button for creating new layer groups.\n * @name AddGroup\n * @class\n * @memberof plugins\n * @requires plugins.TOC\n */","meta":{"filename":"AddGroup.jsx","lineno":99,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Adds to the {@link #plugins.TOC|TOC} plugin a button for creating new layer groups.</p>","name":"AddGroup","kind":"class","memberof":"plugins","requires":["module:plugins.TOC"],"scope":"static","longname":"plugins.AddGroup","$longname":"plugins.AddGroup"},{"comment":"/**\n  * Annotations Plugin. Implements annotations handling on maps.\n  * Adds:\n  *  - a new vector layer, with id 'annotations', to show user created annotations on the map\n  *  - a new menu in the BurgerMenu to handle current annotations\n  *  - a custom template for Identify applied to annotations geometries that also allows editing {@link #components.mapControls.annotations.AnnotationsEditor}\n  *  - styling of the annotation\n  * Annotations are geometries (currently only markers are supported) with a set of properties. By default a title and\n  * a description are managed, but you can configure a different set of fields, and other stuff in localConfig.json.\n  * Look at {@link #components.mapControls.annotations.AnnotationsConfig} for more documentation on configuration options\n  * @prop {object[]} lineDashOptions [{value: [line1 gap1 line2 gap2 line3...]}, {...}] defines how dashed lines are displayed.\n  * Use values without unit identifier.\n  * If an odd number of values is inserted then they are added again to reach an even number of values\n  * for more information see [this page](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n  * @prop {string} defaultShape the default symbol used when switching for the symbol styler\n  * @prop {string} defaultShapeStrokeColor default symbol stroke color\n  * @prop {string} defaultShapeFillColor default symbol fill color\n  * @prop {string} defaultShapeSize default symbol shape size in px\n  * @prop {string} symbolsPath the relative path to the symbols folder where symbols.json and SVGs are located (starting from the index.html folder, i.e. the root) symbols.json can be structured like [this](https://github.com/geosolutions-it/MapStore2/blob/90fb33465fd3ff56c4bbaafb5ab0ed492826622c/web/client/product/assets/symbols/symbols.json)\n  * @prop {boolean} measurementAnnotationEdit flag for measurement specific annotation features. Enabling this will allow user to edit measurements saved as annotation\n  * @prop {boolean} geodesic draw geodesic annotation. By default geodesic is true (Currently applicable only for Circle annotation)\n  * @class Annotations\n  * @memberof plugins\n  * @static\n  * @example\n  * symbols.json present in symbolsPath folder is mandatory and it contains the list of symbols to be used in the Annotations Plugin\n  * - width and height of SVGs should be 64px\n  * - the name is related to the filename of the s symbol\n  * - the label is used in the symbol dropdown menu\n  * [\n  *   {\"name\": \"filename\", \"label\": \"label\"},\n  *   {\"name\": \"square\", \"label\": \"Square\"}\n  * ]\n  *\n  * Typical configuration of the plugin\n  *\n  * {\n  *   \"name\": \"Annotations\",\n  *    \"cfg\": {\n  *        measurementAnnotationEdit: false,\n  *        geodesic: true\n  *    }\n  * }\n  */","meta":{"filename":"Annotations.jsx","lineno":258,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Annotations Plugin. Implements annotations handling on maps.\nAdds:</p>\n<ul>\n<li>a new vector layer, with id 'annotations', to show user created annotations on the map</li>\n<li>a new menu in the BurgerMenu to handle current annotations</li>\n<li>a custom template for Identify applied to annotations geometries that also allows editing {@link #components.mapControls.annotations.AnnotationsEditor}</li>\n<li>styling of the annotation\nAnnotations are geometries (currently only markers are supported) with a set of properties. By default a title and\na description are managed, but you can configure a different set of fields, and other stuff in localConfig.json.\nLook at {@link #components.mapControls.annotations.AnnotationsConfig} for more documentation on configuration options</li>\n</ul>","properties":[{"type":{"names":["string"]},"description":"<p>the default symbol used when switching for the symbol styler</p>","name":"defaultShape"},{"type":{"names":["string"]},"description":"<p>default symbol fill color</p>","name":"defaultShapeFillColor"},{"type":{"names":["string"]},"description":"<p>default symbol shape size in px</p>","name":"defaultShapeSize"},{"type":{"names":["string"]},"description":"<p>default symbol stroke color</p>","name":"defaultShapeStrokeColor"},{"type":{"names":["boolean"]},"description":"<p>draw geodesic annotation. By default geodesic is true (Currently applicable only for Circle annotation)</p>","name":"geodesic"},{"type":{"names":["Array.<object>"]},"description":"<p>[{value: [line1 gap1 line2 gap2 line3...]}, {...}] defines how dashed lines are displayed.\nUse values without unit identifier.\nIf an odd number of values is inserted then they are added again to reach an even number of values\nfor more information see <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\">this page</a></p>","name":"lineDashOptions"},{"type":{"names":["boolean"]},"description":"<p>flag for measurement specific annotation features. Enabling this will allow user to edit measurements saved as annotation</p>","name":"measurementAnnotationEdit"},{"type":{"names":["string"]},"description":"<p>the relative path to the symbols folder where symbols.json and SVGs are located (starting from the index.html folder, i.e. the root) symbols.json can be structured like <a href=\"https://github.com/geosolutions-it/MapStore2/blob/90fb33465fd3ff56c4bbaafb5ab0ed492826622c/web/client/product/assets/symbols/symbols.json\">this</a></p>","name":"symbolsPath"}],"kind":"class","name":"Annotations","memberof":"plugins","scope":"static","examples":["symbols.json present in symbolsPath folder is mandatory and it contains the list of symbols to be used in the Annotations Plugin\n- width and height of SVGs should be 64px\n- the name is related to the filename of the s symbol\n- the label is used in the symbol dropdown menu\n[\n  {\"name\": \"filename\", \"label\": \"label\"},\n  {\"name\": \"square\", \"label\": \"Square\"}\n]\n\nTypical configuration of the plugin\n\n{\n  \"name\": \"Annotations\",\n   \"cfg\": {\n       measurementAnnotationEdit: false,\n       geodesic: true\n   }\n}"],"longname":"plugins.Annotations","$longname":"plugins.Annotations"},{"comment":"/**\n * Renders the logo of GeoSolutions in the {@link #plugins.NavMenu|NavMenu}\n * @name Attribution\n * @class\n * @memberof plugins\n * @prop {string} [label='GeoSolutions'] the tooltip for the logo\n * @prop {string} [href='https://www.geosolutionsgroup.com/'] the URL to redirect on click\n * @prop {string} [src] URL of the logo image. By default the GeoSolutions logo.\n */","meta":{"filename":"Attribution.jsx","lineno":35,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/plugins","code":{}},"description":"<p>Renders the logo of GeoSolutions in the {@link #plugins.NavMenu|NavMenu}</p>","name":"Attribution","kind":"class","memberof":"plugins","properties":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"'https://www.geosolutionsgroup.com/'","description":"<p>the URL to redirect on click</p>","name":"href"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'GeoSolutions'","description":"<p>the tooltip for the logo</p>","name":"label"},{"type":{"names":["string"]},"optional":true,"description":"<p>URL of the logo image. By default the GeoSolutions logo.</p>","name":"src"}],"scope":"static","longname":"plugins.Attribution","$longname":"plugins.Attribution"},{"comment":"/**\n  * AutoMapUpdate Plugin.\n  * It sends a notification to update old maps (version < 2).\n  * The notification is sent only if the user has \"canEdit\" permission on the map.\n  * The notification will disappear after 12 seconds (See https://github.com/igorprado/react-notification-system for details)\n  * The updated map is not automatically saved but the user will be prompted to do it.\n  * @class AutoMapUpdate\n  * @memberof plugins\n  * @static\n  */","meta":{"filename":"AutoMapUpdate.jsx","lineno":19,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>AutoMapUpdate Plugin.\nIt sends a notification to update old maps (version &lt; 2).\nThe notification is sent only if the user has &quot;canEdit&quot; permission on the map.\nThe notification will disappear after 12 seconds (See https://github.com/igorprado/react-notification-system for details)\nThe updated map is not automatically saved but the user will be prompted to do it.</p>","kind":"class","name":"AutoMapUpdate","memberof":"plugins","scope":"static","longname":"plugins.AutoMapUpdate","$longname":"plugins.AutoMapUpdate"},{"comment":"/**\n  * BackgroundSelector Plugin.\n  * @class BackgroundSelector\n  * @memberof plugins\n  * @static\n  *\n  * @prop {number} cfg.left plugin position from left of the map\n  * @prop {number} cfg.bottom plugin position from bottom of the map\n  * @prop {object} cfg.dimensions dimensions of buttons\n  * @class\n  * @example\n  * {\n  *   \"name\": \"BackgroundSelector\",\n  *   \"cfg\": {\n  *     \"dimensions\": {\n  *       \"side\": 65,\n  *       \"sidePreview\": 65,\n  *       \"frame\": 3,\n  *       \"margin\": 5,\n  *       \"label\": false,\n  *       \"vertical\": true\n  *     }\n  *   }\n  * }\n  */","meta":{"filename":"BackgroundSelector.jsx","lineno":94,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>BackgroundSelector Plugin.</p>","kind":"class","name":"BackgroundSelector","memberof":"plugins","scope":"static","properties":[{"type":{"names":["number"]},"description":"<p>plugin position from bottom of the map</p>","name":"cfg.bottom"},{"type":{"names":["object"]},"description":"<p>dimensions of buttons</p>","name":"cfg.dimensions"},{"type":{"names":["number"]},"description":"<p>plugin position from left of the map</p>","name":"cfg.left"}],"examples":["{\n  \"name\": \"BackgroundSelector\",\n  \"cfg\": {\n    \"dimensions\": {\n      \"side\": 65,\n      \"sidePreview\": 65,\n      \"frame\": 3,\n      \"margin\": 5,\n      \"label\": false,\n      \"vertical\": true\n    }\n  }\n}"],"longname":"plugins.BackgroundSelector","$longname":"plugins.BackgroundSelector"},{"comment":"/**\n * Menu button that can contain other plugins entries.\n * Usually rendered inside {@link #plugins.OmniBar|plugins.OmniBar}\n * You can render an item inside burger menu by adding the following to the `containers` entry of your plugin.\n * It is a wrapper for `ToolsContainer` so all the properties of the tools of {@link #plugins.containers.ToolContainer|ToolContainer} can be used here (action, selector ...).\n * ```\n * BurgerMenu: {\n *      name: 'my_entry', // name of your entry\n *      position: 1000, // the position you want\n *      text: <Message msgId=\"details.title\"/>, // the text to show in the menu entry\n *      icon: <Glyphicon glyph=\"sheet\"/>, // the icon to use\n *      // the following are some examples from ToolContainer property\n *      action: openDetailsPanel, // the function to call when the menu entry is clicked\n *      selector: a function that can return some additional properties for the menu entry. Is used typically to hide the menu returning, under certain contdition `{ style: {display: \"none\"} }`\n *  },\n * ```\n * @name BurgerMenu\n * @class\n * @memberof plugins\n */","meta":{"filename":"BurgerMenu.jsx","lineno":178,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Menu button that can contain other plugins entries.\nUsually rendered inside {@link #plugins.OmniBar|plugins.OmniBar}\nYou can render an item inside burger menu by adding the following to the <code>containers</code> entry of your plugin.\nIt is a wrapper for <code>ToolsContainer</code> so all the properties of the tools of {@link #plugins.containers.ToolContainer|ToolContainer} can be used here (action, selector ...).</p>\n<pre class=\"prettyprint source\"><code>BurgerMenu: {\n     name: 'my_entry', // name of your entry\n     position: 1000, // the position you want\n     text: &lt;Message msgId=&quot;details.title&quot;/>, // the text to show in the menu entry\n     icon: &lt;Glyphicon glyph=&quot;sheet&quot;/>, // the icon to use\n     // the following are some examples from ToolContainer property\n     action: openDetailsPanel, // the function to call when the menu entry is clicked\n     selector: a function that can return some additional properties for the menu entry. Is used typically to hide the menu returning, under certain contdition `{ style: {display: &quot;none&quot;} }`\n },\n</code></pre>","name":"BurgerMenu","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.BurgerMenu","$longname":"plugins.BurgerMenu"},{"comment":"/**\n * @name ContentTabs\n * @memberof plugins\n * @class\n * @classdesc\n * ContentTabs plugin is used in {@link #pages.Maps|home page} allowing to switch between contained plugins (i.e. Maps and Dashboards plugins).\n * <br/>Each contained plugin must have the contenttabs configuration property in its plugin configuration.\n * The key property is mandatory and position property is used to order give tabs order.\n * An example of the contenttabs config in Maps plugin\n * @example\n *   ContentTabs: {\n *       name: 'maps',\n *       key: 'maps',\n *       TitleComponent:\n *       connect(mapsCountSelector)(({ count = \"\" }) => <Message msgId=\"resources.maps.title\" msgParams={{ count: count + \"\" }} />),\n *       position: 1,\n *       tool: true\n *   }\n */","meta":{"filename":"ContentTabs.jsx","lineno":30,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"name":"ContentTabs","memberof":"plugins","kind":"class","classdesc":"<p>ContentTabs plugin is used in {@link #pages.Maps|home page} allowing to switch between contained plugins (i.e. Maps and Dashboards plugins).\n<br/>Each contained plugin must have the contenttabs configuration property in its plugin configuration.\nThe key property is mandatory and position property is used to order give tabs order.\nAn example of the contenttabs config in Maps plugin</p>","examples":["ContentTabs: {\n      name: 'maps',\n      key: 'maps',\n      TitleComponent:\n      connect(mapsCountSelector)(({ count = \"\" }) => <Message msgId=\"resources.maps.title\" msgParams={{ count: count + \"\" }} />),\n      position: 1,\n      tool: true\n  }"],"scope":"static","longname":"plugins.ContentTabs","$longname":"plugins.ContentTabs"},{"comment":"/**\n * Plugin for Context support.\n * Adds state handlers to the application (reducer and epics).\n * @name Context\n * @class\n * @memberof plugins\n */","meta":{"filename":"Context.jsx","lineno":13,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for Context support.\nAdds state handlers to the application (reducer and epics).</p>","name":"Context","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Context","$longname":"plugins.Context"},{"comment":"/**\n * Plugin for creation of Contexts. Implements the wizard for creation of a context.\n * @memberof plugins\n * @name ContextCreator\n * @class\n * @prop {string} cfg.saveDestLocation router path when the application is redirected when a context is saved\n * @prop {object[]} cfg.themes list of themes with default configuration that will appear in the context creation process\n * @prop {object} cfg.themes[index].defaultVariables variables of the theme used to initialize the pickers\n * @prop {object} cfg.basicVariables variables used as default values if a theme is not selected\n *\n * @example\n * \"cfg\": {\n * \"themes\": [{\n *    \"id\": \"dark\",\n *    \"type\": \"link\",\n *    \"href\": \"dist/themes/dark.css\"\n *    \"defaultVariables\": {\n *      \"ms-main-color\": \"#000000\",\n *      \"ms-main-bg\": \"#FFFFFF\",\n *      \"ms-primary-contrast\": \"#FFFFFF\",\n *      \"ms-primary\": \"#078aa3\"\n *      \"ms-success-contrast\": \"#FFFFFF\",\n *      \"ms-success\": \"#398439\"\n *    }\n *  }],\n * \"basicVariables\": {\n *      \"ms-main-color\": \"#000000\",\n *      \"ms-main-bg\": \"#FFFFFF\",\n *      \"ms-primary-contrast\": \"#FFFFFF\",\n *      \"ms-primary\": \"#078aa3\"\n *      \"ms-success-contrast\": \"#FFFFFF\",\n *      \"ms-success\": \"#398439\"\n *    }\n *}\n */","meta":{"filename":"ContextCreator.jsx","lineno":95,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for creation of Contexts. Implements the wizard for creation of a context.</p>","memberof":"plugins","name":"ContextCreator","kind":"class","properties":[{"type":{"names":["object"]},"description":"<p>variables used as default values if a theme is not selected</p>","name":"cfg.basicVariables"},{"type":{"names":["string"]},"description":"<p>router path when the application is redirected when a context is saved</p>","name":"cfg.saveDestLocation"},{"type":{"names":["Array.<object>"]},"description":"<p>list of themes with default configuration that will appear in the context creation process</p>","name":"cfg.themes"},{"type":{"names":["object"]},"description":"<p>variables of the theme used to initialize the pickers</p>","name":"cfg.themes[index].defaultVariables"}],"examples":["\"cfg\": {\n\"themes\": [{\n   \"id\": \"dark\",\n   \"type\": \"link\",\n   \"href\": \"dist/themes/dark.css\"\n   \"defaultVariables\": {\n     \"ms-main-color\": \"#000000\",\n     \"ms-main-bg\": \"#FFFFFF\",\n     \"ms-primary-contrast\": \"#FFFFFF\",\n     \"ms-primary\": \"#078aa3\"\n     \"ms-success-contrast\": \"#FFFFFF\",\n     \"ms-success\": \"#398439\"\n   }\n }],\n\"basicVariables\": {\n     \"ms-main-color\": \"#000000\",\n     \"ms-main-bg\": \"#FFFFFF\",\n     \"ms-primary-contrast\": \"#FFFFFF\",\n     \"ms-primary\": \"#078aa3\"\n     \"ms-success-contrast\": \"#FFFFFF\",\n     \"ms-success\": \"#398439\"\n   }\n}"],"scope":"static","longname":"plugins.ContextCreator","$longname":"plugins.ContextCreator"},{"comment":"/**\n  * Plugin for ContextManager. It implements the context Manager UI,\n  * for contexts browsing and search.\n  * @name ContextManager\n  * @memberof plugins\n  * @class\n  * @classdesc\n  */","meta":{"filename":"ContextManager.jsx","lineno":148,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins/contextmanager","code":{}},"description":"<p>Plugin for ContextManager. It implements the context Manager UI,\nfor contexts browsing and search.</p>","name":"ContextManager","memberof":"plugins","kind":"class","classdesc":null,"scope":"static","longname":"plugins.ContextManager","$longname":"plugins.ContextManager"},{"comment":"/**\n  * Plugin for cookie policy.\n  * By default it links to MapStore's cookie information page, but you can customize the\n  * links to point to your own cookie information page.\n  * @name Cookie\n  * @memberof plugins\n  * @class\n  * @classdesc\n  * @prop {string} externalCookieUrl if provided then it link to that url otherwise it will opens a section with more details.\n  * @prop {string} declineUrl The url associated with the leave button\n  */","meta":{"filename":"Cookie.jsx","lineno":16,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for cookie policy.\nBy default it links to MapStore's cookie information page, but you can customize the\nlinks to point to your own cookie information page.</p>","name":"Cookie","memberof":"plugins","kind":"class","classdesc":null,"properties":[{"type":{"names":["string"]},"description":"<p>The url associated with the leave button</p>","name":"declineUrl"},{"type":{"names":["string"]},"description":"<p>if provided then it link to that url otherwise it will opens a section with more details.</p>","name":"externalCookieUrl"}],"scope":"static","longname":"plugins.Cookie","$longname":"plugins.Cookie"},{"comment":"/**\n * Button bar to create a new contents.\n * @memberof plugins\n * @class CreateNewMap\n * @static\n * @prop {boolean} cfg.showNewDashboard show/hide th create new dashboard button.\n * @prop {boolean} cfg.showNewGeostory show/hide th create new geostory button.\n * @prop {boolean} cfg.showNewContext show/hide the create new context button.\n * @prop {string[]} cfg.allowedRoles array of users roles allowed to create maps and/or dashboards. default: `[\"ADMIN\", \"USER\"]`. Users that don't have these roles will never see the buttons.\n */","meta":{"filename":"CreateNewMap.jsx","lineno":138,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Button bar to create a new contents.</p>","memberof":"plugins","kind":"class","name":"CreateNewMap","scope":"static","properties":[{"type":{"names":["Array.<string>"]},"description":"<p>array of users roles allowed to create maps and/or dashboards. default: <code>[&quot;ADMIN&quot;, &quot;USER&quot;]</code>. Users that don't have these roles will never see the buttons.</p>","name":"cfg.allowedRoles"},{"type":{"names":["boolean"]},"description":"<p>show/hide the create new context button.</p>","name":"cfg.showNewContext"},{"type":{"names":["boolean"]},"description":"<p>show/hide th create new dashboard button.</p>","name":"cfg.showNewDashboard"},{"type":{"names":["boolean"]},"description":"<p>show/hide th create new geostory button.</p>","name":"cfg.showNewGeostory"}],"longname":"plugins.CreateNewMap","$longname":"plugins.CreateNewMap"},{"comment":"/**\n  * CRSSelector Plugin is a plugin that switches from to the pre-configured projections.\n  * it gets displayed into the mapFooter plugin\n  * @name CRSSelector\n  * @memberof plugins\n  * @class\n  * @prop {object[]} projectionDefs list of additional project definitions\n  * @prop {string[]} cfg.filterAllowedCRS list of allowed crs in the combobox list to used as filter for the one of retrieved proj4.defs()\n  * @prop {object} cfg.additionalCRS additional crs added to the list. The label param is used after in the combobox.\n  * @prop {array} cfg.allowedRoles list of the authorized roles that can use the plugin, if you want all users to access the plugin, add a \"ALL\" element to the array.\n  * @example\n  * // If you want to add some crs you need to provide a definition and adding it in the additionalCRS property\n  * // Put the following lines at the first level of the localconfig\n  * {\n  *   \"projectionDefs\": [{\n  *     \"code\": \"EPSG:3003\",\n  *     \"def\": \"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=1500000 +y_0=0 +ellps=intl+towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +units=m +no_defs\",\n  *     \"extent\": [1241482.0019, 973563.1609, 1830078.9331, 5215189.0853],\n  *     \"worldExtent\": [6.6500, 8.8000, 12.0000, 47.0500]\n  *   }]\n  * }\n  * @example\n  * // And configure the new projection for the plugin as below:\n  * { \"name\": \"CRSSelector\",\n  *   \"cfg\": {\n  *     \"additionalCRS\": {\n  *       \"EPSG:3003\": { \"label\": \"EPSG:3003\" }\n  *     },\n  *     \"filterAllowedCRS\": [\"EPSG:4326\", \"EPSG:3857\"],\n  *     \"allowedRoles\" : [\"ADMIN\", \"USER\", \"ALL\"]\n  *   }\n  * }\n*/","meta":{"filename":"CRSSelector.jsx","lineno":159,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>CRSSelector Plugin is a plugin that switches from to the pre-configured projections.\nit gets displayed into the mapFooter plugin</p>","name":"CRSSelector","memberof":"plugins","kind":"class","properties":[{"type":{"names":["object"]},"description":"<p>additional crs added to the list. The label param is used after in the combobox.</p>","name":"cfg.additionalCRS"},{"type":{"names":["array"]},"description":"<p>list of the authorized roles that can use the plugin, if you want all users to access the plugin, add a &quot;ALL&quot; element to the array.</p>","name":"cfg.allowedRoles"},{"type":{"names":["Array.<string>"]},"description":"<p>list of allowed crs in the combobox list to used as filter for the one of retrieved proj4.defs()</p>","name":"cfg.filterAllowedCRS"},{"type":{"names":["Array.<object>"]},"description":"<p>list of additional project definitions</p>","name":"projectionDefs"}],"examples":["// If you want to add some crs you need to provide a definition and adding it in the additionalCRS property\n// Put the following lines at the first level of the localconfig\n{\n  \"projectionDefs\": [{\n    \"code\": \"EPSG:3003\",\n    \"def\": \"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=1500000 +y_0=0 +ellps=intl+towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +units=m +no_defs\",\n    \"extent\": [1241482.0019, 973563.1609, 1830078.9331, 5215189.0853],\n    \"worldExtent\": [6.6500, 8.8000, 12.0000, 47.0500]\n  }]\n}","// And configure the new projection for the plugin as below:\n{ \"name\": \"CRSSelector\",\n  \"cfg\": {\n    \"additionalCRS\": {\n      \"EPSG:3003\": { \"label\": \"EPSG:3003\" }\n    },\n    \"filterAllowedCRS\": [\"EPSG:4326\", \"EPSG:3857\"],\n    \"allowedRoles\" : [\"ADMIN\", \"USER\", \"ALL\"]\n  }\n}"],"scope":"static","longname":"plugins.CRSSelector","$longname":"plugins.CRSSelector"},{"comment":"/**\n * Dashboard Plugin. Renders the main dashboard UI.\n * @static\n * @memberof plugins\n * @name Dashboard\n * @class Dashboard\n * @prop {boolean} cfg.enabled if true, render the plugin\n * @prop {number} cfg.rowHeight Rows have a static height\n * @prop {object} cfg.cols Number of columns in this layout. default { lg: 6, md: 6, sm: 4, xs: 2, xxs: 1 }\n * @prop {object} cfg.minLayoutWidth minimum size of the layout, below this size the widgets are listed in a single column\n * for more info about rowHeight and cols, see https://github.com/STRML/react-grid-layout#grid-layout-props\n */","meta":{"filename":"Dashboard.jsx","lineno":117,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Dashboard Plugin. Renders the main dashboard UI.</p>","scope":"static","memberof":"plugins","name":"Dashboard","kind":"class","properties":[{"type":{"names":["object"]},"description":"<p>Number of columns in this layout. default { lg: 6, md: 6, sm: 4, xs: 2, xxs: 1 }</p>","name":"cfg.cols"},{"type":{"names":["boolean"]},"description":"<p>if true, render the plugin</p>","name":"cfg.enabled"},{"type":{"names":["object"]},"description":"<p>minimum size of the layout, below this size the widgets are listed in a single column\nfor more info about rowHeight and cols, see https://github.com/STRML/react-grid-layout#grid-layout-props</p>","name":"cfg.minLayoutWidth"},{"type":{"names":["number"]},"description":"<p>Rows have a static height</p>","name":"cfg.rowHeight"}],"longname":"plugins.Dashboard","$longname":"plugins.Dashboard"},{"comment":"/**\n * Side toolbar that allows to edit dashboard widgets.\n * @name DashboardEditor\n * @class\n * @memberof plugins\n * @prop {object} cfg.catalog **Deprecated** in favor of `cfg.services`. Can contain a catalog configuration\n * @prop {object} cfg.services Object with the catalogs available to select layers for maps, charts and tables. The format is the same of the `Catalog` plugin.\n * @prop {string} cfg.selectedService the key of service selected by default from the list of `cfg.services`\n * @prop {boolean} cfg.disableEmptyMap disable empty map entry from the available maps of map widget\n */","meta":{"filename":"DashboardEditor.jsx","lineno":87,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Side toolbar that allows to edit dashboard widgets.</p>","name":"DashboardEditor","kind":"class","memberof":"plugins","properties":[{"type":{"names":["object"]},"description":"<p><strong>Deprecated</strong> in favor of <code>cfg.services</code>. Can contain a catalog configuration</p>","name":"cfg.catalog"},{"type":{"names":["boolean"]},"description":"<p>disable empty map entry from the available maps of map widget</p>","name":"cfg.disableEmptyMap"},{"type":{"names":["string"]},"description":"<p>the key of service selected by default from the list of <code>cfg.services</code></p>","name":"cfg.selectedService"},{"type":{"names":["object"]},"description":"<p>Object with the catalogs available to select layers for maps, charts and tables. The format is the same of the <code>Catalog</code> plugin.</p>","name":"cfg.services"}],"scope":"static","longname":"plugins.DashboardEditor","$longname":"plugins.DashboardEditor"},{"comment":"/**\n * Plugin for Dashboards resources browsing.\n * Can be rendered inside {@link #plugins.ContentTabs|ContentTabs} plugin\n * and adds an entry to the {@link #plugins.NavMenu|NavMenu}\n * @name Dashboards\n * @memberof plugins\n * @class\n * @prop {boolean} cfg.showCreateButton default true. Flag to show/hide the button \"create a new one\" when there is no dashboard yet.\n * @prop {object} cfg.shareOptions configuration applied to share panel\n * @prop {boolean} cfg.shareToolEnabled default true. Flag to show/hide the \"share\" button on the item.\n * @prop {boolean} cfg.emptyView.iconHeight default \"200px\". Value to override default icon maximum height.\n */","meta":{"filename":"Dashboards.jsx","lineno":35,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for Dashboards resources browsing.\nCan be rendered inside {@link #plugins.ContentTabs|ContentTabs} plugin\nand adds an entry to the {@link #plugins.NavMenu|NavMenu}</p>","name":"Dashboards","memberof":"plugins","kind":"class","properties":[{"type":{"names":["boolean"]},"description":"<p>default &quot;200px&quot;. Value to override default icon maximum height.</p>","name":"cfg.emptyView.iconHeight"},{"type":{"names":["object"]},"description":"<p>configuration applied to share panel</p>","name":"cfg.shareOptions"},{"type":{"names":["boolean"]},"description":"<p>default true. Flag to show/hide the &quot;share&quot; button on the item.</p>","name":"cfg.shareToolEnabled"},{"type":{"names":["boolean"]},"description":"<p>default true. Flag to show/hide the button &quot;create a new one&quot; when there is no dashboard yet.</p>","name":"cfg.showCreateButton"}],"scope":"static","longname":"plugins.Dashboards","$longname":"plugins.Dashboards"},{"comment":"/**\n * Implements \"save\" button for dashboards, to render in the {@link #plugins.BurgerMenu|BurgerMenu}}\n * @class\n * @name DashboardSave\n * @memberof plugins\n */","meta":{"filename":"DashboardSave.jsx","lineno":45,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Implements &quot;save&quot; button for dashboards, to render in the {@link #plugins.BurgerMenu|BurgerMenu}}</p>","kind":"class","name":"DashboardSave","memberof":"plugins","scope":"static","longname":"plugins.DashboardSave","$longname":"plugins.DashboardSave"},{"comment":"/**\n * Implements \"save as\" button for dashboards, to render in the {@link #plugins.BurgerMenu|BurgerMenu}}\n * @class\n * @name DashboardSaveAs\n * @memberof plugins\n */","meta":{"filename":"DashboardSave.jsx","lineno":83,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Implements &quot;save as&quot; button for dashboards, to render in the {@link #plugins.BurgerMenu|BurgerMenu}}</p>","kind":"class","name":"DashboardSaveAs","memberof":"plugins","scope":"static","longname":"plugins.DashboardSaveAs","$longname":"plugins.DashboardSaveAs"},{"comment":"/**\n * Allow to show details for the map.\n * \"Details for a map\" is a window with some HTML, editable from {@link #plugins.Save|Save}\n * or {@link #plugins.SaveAs|SaveAs} plugins.\n * If details for the current map are present, the plugin\n * renders an entry in {@link #plugins.BurgerMenu|BurgerMenu} to show it.\n * It supports as an alternative to render the entry as a\n * button in the {@link #plugins.Toolbar|Toolbar}\n * @class\n * @name Details\n * @memberof plugins\n */","meta":{"filename":"Details.jsx","lineno":36,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Allow to show details for the map.\n&quot;Details for a map&quot; is a window with some HTML, editable from {@link #plugins.Save|Save}\nor {@link #plugins.SaveAs|SaveAs} plugins.\nIf details for the current map are present, the plugin\nrenders an entry in {@link #plugins.BurgerMenu|BurgerMenu} to show it.\nIt supports as an alternative to render the entry as a\nbutton in the {@link #plugins.Toolbar|Toolbar}</p>","kind":"class","name":"Details","memberof":"plugins","scope":"static","longname":"plugins.Details","$longname":"plugins.Details"},{"comment":"/**\n * DrawerMenu plugin. It is a container for other plugins.\n * It shows a collapsible panel on the left with some plugins rendered inside it (typically the {@link #plugins.TOC|TOC})\n * and a button on the top-left corner to open this panel.\n * @prop {string} cfg.glyph glyph icon to use for the button\n * @prop {object} cfg.menuButtonStyle Css inline style for the button. Display property will be overridden by the hideButton/forceDrawer options.\n * @prop {string} cfg.buttonClassName class for the toggle button\n * @prop {object} cfg.menuOptions options for the drawer menu\n * @prop {boolean} cfg.menuOptions.docked\n * @prop {number} cfg.menuOptions.width\n * @prop {boolean} cfg.menuOptions.resizable enables horizontal resizing\n * @memberof plugins\n * @class\n * @example\n * {\n *   \"name\": \"DrawerMenu\",\n *   \"cfg\": {\n *     \"hideButton\": true\n *   }\n * }\n */","meta":{"range":[3486,6057],"filename":"DrawerMenu.jsx","lineno":100,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{"id":"astnode100007818","name":"DrawerMenu","type":"ClassDeclaration","paramnames":[]},"vars":{"":null}},"classdesc":"<p>DrawerMenu plugin. It is a container for other plugins.\nIt shows a collapsible panel on the left with some plugins rendered inside it (typically the {@link #plugins.TOC|TOC})\nand a button on the top-left corner to open this panel.</p>","properties":[{"type":{"names":["string"]},"description":"<p>class for the toggle button</p>","name":"cfg.buttonClassName"},{"type":{"names":["string"]},"description":"<p>glyph icon to use for the button</p>","name":"cfg.glyph"},{"type":{"names":["object"]},"description":"<p>Css inline style for the button. Display property will be overridden by the hideButton/forceDrawer options.</p>","name":"cfg.menuButtonStyle"},{"type":{"names":["object"]},"description":"<p>options for the drawer menu</p>","name":"cfg.menuOptions"},{"type":{"names":["boolean"]},"name":"cfg.menuOptions.docked"},{"type":{"names":["boolean"]},"description":"<p>enables horizontal resizing</p>","name":"cfg.menuOptions.resizable"},{"type":{"names":["number"]},"name":"cfg.menuOptions.width"}],"memberof":"plugins","kind":"class","examples":["{\n  \"name\": \"DrawerMenu\",\n  \"cfg\": {\n    \"hideButton\": true\n  }\n}"],"name":"DrawerMenu","longname":"plugins.DrawerMenu","scope":"static","$longname":"plugins.DrawerMenu"},{"comment":"/**\n * Expander plugin. Adds the '...' button to the Toolbar plugin to hide some buttons.\n * @name Expander\n * @class\n * @memberof plugins\n */","meta":{"filename":"Expander.jsx","lineno":14,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Expander plugin. Adds the '...' button to the Toolbar plugin to hide some buttons.</p>","name":"Expander","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Expander","$longname":"plugins.Expander"},{"comment":"/**\n * FeaturedMaps plugin. Shows featured resources in a grid.\n * Typically used in the {@link #pages.Maps|home page}.\n * @name FeaturedMaps\n * @prop {string} cfg.pageSize change the page size (only desktop)\n * @prop {object} cfg.shareOptions configuration applied to share panel grouped by category name\n * @prop {boolean} cfg.shareToolEnabled default true. Flag to show/hide the \"share\" button on the item.\n * @memberof plugins\n * @class\n * @example\n * {\n *   \"name\": \"FeaturedMaps\",\n *   \"cfg\": {\n *     \"shareOptions\": {\n *       \"pageSize\": 6,\n *       \"dashboard\": {\n *         \"embedPanel\": false\n *       }\n *     }\n *   }\n * }\n */","meta":{"filename":"FeaturedMaps.jsx","lineno":189,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>FeaturedMaps plugin. Shows featured resources in a grid.\nTypically used in the {@link #pages.Maps|home page}.</p>","name":"FeaturedMaps","properties":[{"type":{"names":["string"]},"description":"<p>change the page size (only desktop)</p>","name":"cfg.pageSize"},{"type":{"names":["object"]},"description":"<p>configuration applied to share panel grouped by category name</p>","name":"cfg.shareOptions"},{"type":{"names":["boolean"]},"description":"<p>default true. Flag to show/hide the &quot;share&quot; button on the item.</p>","name":"cfg.shareToolEnabled"}],"memberof":"plugins","kind":"class","examples":["{\n  \"name\": \"FeaturedMaps\",\n  \"cfg\": {\n    \"shareOptions\": {\n      \"pageSize\": 6,\n      \"dashboard\": {\n        \"embedPanel\": false\n      }\n    }\n  }\n}"],"scope":"static","longname":"plugins.FeaturedMaps","$longname":"plugins.FeaturedMaps"},{"comment":"/**\n  * @name FeatureEditor\n  * @memberof plugins\n  * @class\n  * @prop {object} cfg.customEditorsOptions Set of options used to connect the custom editors to the featuregrid. It contains a set of\n  * `rules`.\n  * Each rule in the `rules` array contains:\n  * - `editor`: the string name of the editor. For more information about custom editors and their specific props (`editorProps`), see {@link api/framework#components.data.featuregrid.editors.customEditors}\n  * - `regex`: An object with 2 regular expression, `attribute` and `typeName` that have to match with the specific attribute name and feature type name.\n  * - `editorProps`: the properties to pass to the specific editor.\n  * Example:\n  * ```json\n  * \"customEditorsOptions\": {\n  *    \"rules\": [{\n  *        \"regex\": {\n  *            \"attribute\": \"^NUMERIC_ATTRIBUTE_NAME$\",\n  *            \"typeName\": \"^workspace:layer_name$\"\n  *        },\n  *        \"editor\": \"NumberEditor\"\n  *    }, {\n  *        \"regex\": {\n  *            \"attribute\": \"^att_varchar_constr$\",\n  *            \"typeName\": \"^test:mapstore_test$\"\n  *        },\n  *        \"editor\": \"DropDownEditor\",\n  *        \"editorProps\": {\n  *            \"values\": [\"Option1\", \"Option2\", \"Option3\", \"Option4\"]\n  *        }\n  *    }\n  *    }]\n  *}\n  * ```\n  * @prop {object} cfg.editingAllowedRoles array of user roles allowed to enter in edit mode\n  * @prop {boolean} cfg.virtualScroll default true. Activates virtualScroll. When false the grid uses normal pagination\n  * @prop {number} cfg.maxStoredPages default 5. In virtual Scroll mode determines the size of the loaded pages cache\n  * @prop {number} cfg.vsOverScan default 20. Number of rows to load above/below the visible slice of the grid\n  * @prop {number} cfg.scrollDebounce default 50. milliseconds of debounce interval between two scroll event\n  * @prop {boolean} cfg.showFilteredObject default false. Displays spatial filter selection area when true\n  * @prop {boolean} cfg.showTimeSync default false. Shows the button to enable time sync\n  * @prop {boolean} cfg.timeSync default false. If true, the timeSync is active by default.\n  * @prop {boolean} cfg.enableMapFilterSync default false. If true, the wms sync tool will be active by default.\n  * @prop {number} cfg.maxZoom the maximum zoom level for the \"zoom to feature\" functionality\n  * @prop {boolean} cfg.hideCloseButton hide the close button from the header\n  * @prop {boolean} cfg.hideLayerTitle hide the layer title from the header\n  * @prop {boolean} cfg.snapTool default true. Shows the button to enable snap tool.\n  * @prop {object} cfg.snapConfig object containing settings for snap tool.\n  * @prop {boolean} cfg.snapConfig.vertex activates or deactivates snapping to the vertices of vector shapes.\n  * @prop {boolean} cfg.snapConfig.edge activates or deactivates snapping to the edges of vector shapes.\n  * @prop {number} cfg.snapConfig.pixelTolerance Pixel tolerance for considering the pointer close enough to a segment or vertex for snapping.\n  * @prop {string} cfg.snapConfig.strategy defines strategy function for loading features. Supported values are \"bbox\" and \"all\".\n  * @prop {number} cfg.snapConfig.maxFeatures defines features limit for request that loads vector data of WMS layer.\n  * @prop {array} cfg.snapConfig.additionalLayers Array of additional layers to include into snapping layers list. Provides a way to include layers from \"state.additionallayers\"\n  *\n  * @classdesc\n  * `FeatureEditor` Plugin, also called *FeatureGrid*, provides functionalities to browse/edit data via WFS. The grid can be configured to use paging or\n  * <br/>virtual scroll mechanisms. By default virtual scroll is enabled. When on virtual scroll mode, the maxStoredPages param\n  * sets the size of loaded pages cache, while vsOverscan and scrollDebounce params determine the behavior of grid scrolling\n  * and of row loading.\n  * <br/>Furthermore it can be configured to use custom editor cells for certain layers/columns, specifying the rules to recognize them. If no rule matches, then it will be used the default editor based on the dataType of that column.\n  * <br/>Example:\n  * ```json\n  * {\n  *   \"name\": \"FeatureEditor\",\n  *   \"cfg\": {\n  *     \"maxZoom\": 21,\n  *     \"customEditorsOptions\": {\n  *       \"rules\": [{\n  *         \"regex\": {\n  *           \"attribute\": \"NAME_OF_THE_ATTRIBUTE\",\n  *           \"url\": \"regex to match a specific url\",\n  *           \"typeName\": \"layerName\"\n  *         },\n  *         \"editor\": \"DropDownEditor\",\n  *         \"editorProps\": {\n  *           \"values\": [\"Opt1\", \"Opt2\"]\n  *         }\n  *       }]\n  *     },\n  *   \"editingAllowedRoles\": [\"ADMIN\"],\n  *   \"snapTool\": true,\n  *   \"snapConfig\": {\n  *     \"vertex\": true,\n  *     \"edge\": true,\n  *     \"pixelTolerance\": 10,\n *      \"additionalLayers\": [\n *         \"ADDITIONAL_LAYER_ID\"\n *      ],\n *      \"strategy\": \"bbox\",\n *      \"maxFeatures\": 4000\n  *   },\n  *   }\n  * }\n  * ```\n  *\n  * As plugin container, it can render additional components coming from other plugins.\n  * You can render additional buttons to the Toolbar by configuring a container with your component and `\"target\": 'toolbar'`.\n  * The component will receive as props all the properties passed to the featuregrid Toolbar. Some of them are  :\n  * - `disabled`: tells when the toolbar is completely disabled.\n  * - `mode`: \"EDIT\" or \"VIEW\". Tells if the feature grid is in edit mode or in view mode.\n  * - `results`: the results in the table (with virtual scrolling, only the available ones).\n  * - `\n  * Example:\n  * ```javascript\n  * createPlugin('MyPlugin',{\n  *     containers: {\n  *         FeatureEditor: {\n  *            doNotHide: true,\n  *            // position 20 to 99, to put buttons before \"settings\" and \"sync\" buttons (that should be at the end).\n  *            // <1 to put them on top. > 1000 to but at the end (not suggested because of #7271)\n  *            position: 20,\n  *            name: \"MyPlugin\",\n  *            target: \"toolbar\",\n  *            Component: MyComponent\n  *        },\n  *     }\n  * })\n  * ```\n  *\n*/","meta":{"filename":"FeatureEditor.jsx","lineno":16,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"name":"FeatureEditor","memberof":"plugins","kind":"class","properties":[{"type":{"names":["object"]},"description":"<p>Set of options used to connect the custom editors to the featuregrid. It contains a set of\n<code>rules</code>.\nEach rule in the <code>rules</code> array contains:</p>\n<ul>\n<li><code>editor</code>: the string name of the editor. For more information about custom editors and their specific props (<code>editorProps</code>), see {@link api/framework#components.data.featuregrid.editors.customEditors}</li>\n<li><code>regex</code>: An object with 2 regular expression, <code>attribute</code> and <code>typeName</code> that have to match with the specific attribute name and feature type name.</li>\n<li><code>editorProps</code>: the properties to pass to the specific editor.\nExample:</li>\n</ul>\n<pre class=\"prettyprint source lang-json\"><code>&quot;customEditorsOptions&quot;: {\n   &quot;rules&quot;: [{\n       &quot;regex&quot;: {\n           &quot;attribute&quot;: &quot;^NUMERIC_ATTRIBUTE_NAME$&quot;,\n           &quot;typeName&quot;: &quot;^workspace:layer_name$&quot;\n       },\n       &quot;editor&quot;: &quot;NumberEditor&quot;\n   }, {\n       &quot;regex&quot;: {\n           &quot;attribute&quot;: &quot;^att_varchar_constr$&quot;,\n           &quot;typeName&quot;: &quot;^test:mapstore_test$&quot;\n       },\n       &quot;editor&quot;: &quot;DropDownEditor&quot;,\n       &quot;editorProps&quot;: {\n           &quot;values&quot;: [&quot;Option1&quot;, &quot;Option2&quot;, &quot;Option3&quot;, &quot;Option4&quot;]\n       }\n   }\n   }]\n}\n</code></pre>","name":"cfg.customEditorsOptions"},{"type":{"names":["object"]},"description":"<p>array of user roles allowed to enter in edit mode</p>","name":"cfg.editingAllowedRoles"},{"type":{"names":["boolean"]},"description":"<p>default false. If true, the wms sync tool will be active by default.</p>","name":"cfg.enableMapFilterSync"},{"type":{"names":["boolean"]},"description":"<p>hide the close button from the header</p>","name":"cfg.hideCloseButton"},{"type":{"names":["boolean"]},"description":"<p>hide the layer title from the header</p>","name":"cfg.hideLayerTitle"},{"type":{"names":["number"]},"description":"<p>default 5. In virtual Scroll mode determines the size of the loaded pages cache</p>","name":"cfg.maxStoredPages"},{"type":{"names":["number"]},"description":"<p>the maximum zoom level for the &quot;zoom to feature&quot; functionality</p>","name":"cfg.maxZoom"},{"type":{"names":["number"]},"description":"<p>default 50. milliseconds of debounce interval between two scroll event</p>","name":"cfg.scrollDebounce"},{"type":{"names":["boolean"]},"description":"<p>default false. Displays spatial filter selection area when true</p>","name":"cfg.showFilteredObject"},{"type":{"names":["boolean"]},"description":"<p>default false. Shows the button to enable time sync</p>","name":"cfg.showTimeSync"},{"type":{"names":["object"]},"description":"<p>object containing settings for snap tool.</p>","name":"cfg.snapConfig"},{"type":{"names":["array"]},"description":"<p>Array of additional layers to include into snapping layers list. Provides a way to include layers from &quot;state.additionallayers&quot;</p>","name":"cfg.snapConfig.additionalLayers"},{"type":{"names":["boolean"]},"description":"<p>activates or deactivates snapping to the edges of vector shapes.</p>","name":"cfg.snapConfig.edge"},{"type":{"names":["number"]},"description":"<p>defines features limit for request that loads vector data of WMS layer.</p>","name":"cfg.snapConfig.maxFeatures"},{"type":{"names":["number"]},"description":"<p>Pixel tolerance for considering the pointer close enough to a segment or vertex for snapping.</p>","name":"cfg.snapConfig.pixelTolerance"},{"type":{"names":["string"]},"description":"<p>defines strategy function for loading features. Supported values are &quot;bbox&quot; and &quot;all&quot;.</p>","name":"cfg.snapConfig.strategy"},{"type":{"names":["boolean"]},"description":"<p>activates or deactivates snapping to the vertices of vector shapes.</p>","name":"cfg.snapConfig.vertex"},{"type":{"names":["boolean"]},"description":"<p>default true. Shows the button to enable snap tool.</p>","name":"cfg.snapTool"},{"type":{"names":["boolean"]},"description":"<p>default false. If true, the timeSync is active by default.</p>","name":"cfg.timeSync"},{"type":{"names":["boolean"]},"description":"<p>default true. Activates virtualScroll. When false the grid uses normal pagination</p>","name":"cfg.virtualScroll"},{"type":{"names":["number"]},"description":"<p>default 20. Number of rows to load above/below the visible slice of the grid</p>","name":"cfg.vsOverScan"}],"classdesc":"<p><code>FeatureEditor</code> Plugin, also called <em>FeatureGrid</em>, provides functionalities to browse/edit data via WFS. The grid can be configured to use paging or\n<br/>virtual scroll mechanisms. By default virtual scroll is enabled. When on virtual scroll mode, the maxStoredPages param\nsets the size of loaded pages cache, while vsOverscan and scrollDebounce params determine the behavior of grid scrolling\nand of row loading.\n<br/>Furthermore it can be configured to use custom editor cells for certain layers/columns, specifying the rules to recognize them. If no rule matches, then it will be used the default editor based on the dataType of that column.\n<br/>Example:</p>\n<pre class=\"prettyprint source lang-json\"><code>{\n  &quot;name&quot;: &quot;FeatureEditor&quot;,\n  &quot;cfg&quot;: {\n    &quot;maxZoom&quot;: 21,\n    &quot;customEditorsOptions&quot;: {\n      &quot;rules&quot;: [{\n        &quot;regex&quot;: {\n          &quot;attribute&quot;: &quot;NAME_OF_THE_ATTRIBUTE&quot;,\n          &quot;url&quot;: &quot;regex to match a specific url&quot;,\n          &quot;typeName&quot;: &quot;layerName&quot;\n        },\n        &quot;editor&quot;: &quot;DropDownEditor&quot;,\n        &quot;editorProps&quot;: {\n          &quot;values&quot;: [&quot;Opt1&quot;, &quot;Opt2&quot;]\n        }\n      }]\n    },\n  &quot;editingAllowedRoles&quot;: [&quot;ADMIN&quot;],\n  &quot;snapTool&quot;: true,\n  &quot;snapConfig&quot;: {\n    &quot;vertex&quot;: true,\n    &quot;edge&quot;: true,\n    &quot;pixelTolerance&quot;: 10,\n     &quot;additionalLayers&quot;: [\n        &quot;ADDITIONAL_LAYER_ID&quot;\n     ],\n     &quot;strategy&quot;: &quot;bbox&quot;,\n     &quot;maxFeatures&quot;: 4000\n  },\n  }\n}\n</code></pre>\n<p>As plugin container, it can render additional components coming from other plugins.\nYou can render additional buttons to the Toolbar by configuring a container with your component and <code>&quot;target&quot;: 'toolbar'</code>.\nThe component will receive as props all the properties passed to the featuregrid Toolbar. Some of them are  :</p>\n<ul>\n<li><code>disabled</code>: tells when the toolbar is completely disabled.</li>\n<li><code>mode</code>: &quot;EDIT&quot; or &quot;VIEW&quot;. Tells if the feature grid is in edit mode or in view mode.</li>\n<li><code>results</code>: the results in the table (with virtual scrolling, only the available ones).</li>\n<li>`\nExample:</li>\n</ul>\n<pre class=\"prettyprint source lang-javascript\"><code>createPlugin('MyPlugin',{\n    containers: {\n        FeatureEditor: {\n           doNotHide: true,\n           // position 20 to 99, to put buttons before &quot;settings&quot; and &quot;sync&quot; buttons (that should be at the end).\n           // &lt;1 to put them on top. > 1000 to but at the end (not suggested because of #7271)\n           position: 20,\n           name: &quot;MyPlugin&quot;,\n           target: &quot;toolbar&quot;,\n           Component: MyComponent\n       },\n    }\n})\n</code></pre>","scope":"static","longname":"plugins.FeatureEditor","$longname":"plugins.FeatureEditor"},{"comment":"/**\n * FeedbackMask plugin.\n * Create a mask on dashboard and map pages when they are not accessible or not found.\n * @memberof plugins\n * @name FeedbackMask\n * @class\n * @prop {string} cfg.loadingText change loading text\n */","meta":{"filename":"FeedbackMask.jsx","lineno":54,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>FeedbackMask plugin.\nCreate a mask on dashboard and map pages when they are not accessible or not found.</p>","memberof":"plugins","name":"FeedbackMask","kind":"class","properties":[{"type":{"names":["string"]},"description":"<p>change loading text</p>","name":"cfg.loadingText"}],"scope":"static","longname":"plugins.FeedbackMask","$longname":"plugins.FeedbackMask"},{"comment":"/**\n * Plugin that activate the FilterLayer button in the {@link #plugins.TOC|TOC}.\n * **Requires the {@link #plugins.QueryPanel|QueryPanel} plugin to work**\n * @name FilterLayer\n * @class\n * @memberof plugins\n * @requires plugins.QueryPanel\n */","meta":{"filename":"FilterLayer.jsx","lineno":14,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin that activate the FilterLayer button in the {@link #plugins.TOC|TOC}.\n<strong>Requires the {@link #plugins.QueryPanel|QueryPanel} plugin to work</strong></p>","name":"FilterLayer","kind":"class","memberof":"plugins","requires":["module:plugins.QueryPanel"],"scope":"static","longname":"plugins.FilterLayer","$longname":"plugins.FilterLayer"},{"comment":"/**\n * FloatingLegend plugin.\n * This plugin shows a list of layers with visibility and opacity controls.\n * If DrawerMenu is in localConfig it will be integrated with current plugin\n * @memberof plugins\n * @name FloatingLegend\n * @class\n * @prop {boolean} cfg.disableOpacitySlider disable and hide opacity slider\n * @prop {boolean} cfg.expandedOnMount show expanded legend when component did mount\n * @prop {number} cfg.width width dimension of legend\n * @prop {boolean} cfg.hideOpacityTooltip hide toolip on opacity sliders\n */","meta":{"filename":"FloatingLegend.jsx","lineno":29,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>FloatingLegend plugin.\nThis plugin shows a list of layers with visibility and opacity controls.\nIf DrawerMenu is in localConfig it will be integrated with current plugin</p>","memberof":"plugins","name":"FloatingLegend","kind":"class","properties":[{"type":{"names":["boolean"]},"description":"<p>disable and hide opacity slider</p>","name":"cfg.disableOpacitySlider"},{"type":{"names":["boolean"]},"description":"<p>show expanded legend when component did mount</p>","name":"cfg.expandedOnMount"},{"type":{"names":["boolean"]},"description":"<p>hide toolip on opacity sliders</p>","name":"cfg.hideOpacityTooltip"},{"type":{"names":["number"]},"description":"<p>width dimension of legend</p>","name":"cfg.width"}],"scope":"static","longname":"plugins.FloatingLegend","$longname":"plugins.FloatingLegend"},{"comment":"/**\n * Footer plugin, section of the homepage.\n * description of footer can be overridden by\n * `home.footerDescription` message id in the translations\n * @prop {object} cfg.logo logo data to change image and href, set to null to hide the logo\n * @prop {object} cfg.logo.src source of the logo\n * @prop {object} cfg.logo.width width of the logo image\n * @prop {object} cfg.logo.height height of the logo image\n * @prop {object} cfg.logo.title title of the logo image\n * @prop {object} cfg.logo.alt alternative text of the logo image\n * @memberof plugins\n * @class\n * @name Footer\n */","meta":{"filename":"Footer.jsx","lineno":16,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/plugins","code":{}},"description":"<p>Footer plugin, section of the homepage.\ndescription of footer can be overridden by\n<code>home.footerDescription</code> message id in the translations</p>","properties":[{"type":{"names":["object"]},"description":"<p>logo data to change image and href, set to null to hide the logo</p>","name":"cfg.logo"},{"type":{"names":["object"]},"description":"<p>alternative text of the logo image</p>","name":"cfg.logo.alt"},{"type":{"names":["object"]},"description":"<p>height of the logo image</p>","name":"cfg.logo.height"},{"type":{"names":["object"]},"description":"<p>source of the logo</p>","name":"cfg.logo.src"},{"type":{"names":["object"]},"description":"<p>title of the logo image</p>","name":"cfg.logo.title"},{"type":{"names":["object"]},"description":"<p>width of the logo image</p>","name":"cfg.logo.width"}],"memberof":"plugins","kind":"class","name":"Footer","scope":"static","longname":"plugins.Footer","$longname":"plugins.Footer"},{"comment":"/**\n * Fork Ribbon that links to MapStore GitHub repository\n * @memberof plugins\n * @class\n * @name Fork\n */","meta":{"filename":"Fork.jsx","lineno":10,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/plugins","code":{}},"description":"<p>Fork Ribbon that links to MapStore GitHub repository</p>","memberof":"plugins","kind":"class","name":"Fork","scope":"static","longname":"plugins.Fork","$longname":"plugins.Fork"},{"comment":"/**\n  * FullScreen Plugin. A button that toggles to fullscreen mode\n  * @class FullScreen\n  * @memberof plugins\n  * @static\n  *\n  * @prop {string} cfg.id identifier of the Plugin\n  * @prop {boolean} cfg.options.querySelector query selector to get the element to zoom. By default .ms2 > div\n  *\n  */","meta":{"filename":"FullScreen.jsx","lineno":15,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>FullScreen Plugin. A button that toggles to fullscreen mode</p>","kind":"class","name":"FullScreen","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>identifier of the Plugin</p>","name":"cfg.id"},{"type":{"names":["boolean"]},"description":"<p>query selector to get the element to zoom. By default .ms2 &gt; div</p>","name":"cfg.options.querySelector"}],"longname":"plugins.FullScreen","$longname":"plugins.FullScreen"},{"comment":"/**\n * Plugin for browsing GeoStory resources. Can render in {@link #plugins.ContentTabs|ContentTabs}\n * and adds an entry to the {@link #plugins.NavMenu|NavMenu}\n * @name Geostories\n * @class\n * @memberof plugins\n * @prop {boolean} cfg.showCreateButton default true, use to render create a new one button\n * @prop {object} cfg.shareOptions configuration applied to share panel\n * @prop {boolean} cfg.shareToolEnabled default true. Flag to show/hide the \"share\" button on the item.\n * @prop {boolean} cfg.emptyView.iconHeight default \"200px\". Value to override default icon maximum height.\n */","meta":{"filename":"GeoStories.jsx","lineno":35,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for browsing GeoStory resources. Can render in {@link #plugins.ContentTabs|ContentTabs}\nand adds an entry to the {@link #plugins.NavMenu|NavMenu}</p>","name":"Geostories","kind":"class","memberof":"plugins","properties":[{"type":{"names":["boolean"]},"description":"<p>default &quot;200px&quot;. Value to override default icon maximum height.</p>","name":"cfg.emptyView.iconHeight"},{"type":{"names":["object"]},"description":"<p>configuration applied to share panel</p>","name":"cfg.shareOptions"},{"type":{"names":["boolean"]},"description":"<p>default true. Flag to show/hide the &quot;share&quot; button on the item.</p>","name":"cfg.shareToolEnabled"},{"type":{"names":["boolean"]},"description":"<p>default true, use to render create a new one button</p>","name":"cfg.showCreateButton"}],"scope":"static","longname":"plugins.Geostories","$longname":"plugins.Geostories"},{"comment":"/**\n * Plugin for GeoStory visualization\n * @name GeoStory\n * @class\n * @memberof plugins\n * @prop {numeric} cfg.interceptionTime default 100, the debounce before calculations of currentPage active section\n * @prop {object[]} cfg.fontFamilies: A list of objects with font family names and sources where to load them from e.g. [{\"family\": \"Comic sans\", \"src\": \"link to source\"}]\n * @prop {object} cfg.defaultMarkerStyle define the default marker style used by geo carousel section\n * @prop {object} cfg.highlightedMarkerStyle define the highlighted marker style used by geo carousel section\n * @prop {object} cfg.mediaEditorSettings settings for media editor services divided by media type\n * @prop {string} cfg.mediaEditorSettings.sourceId selected service identifier used when the modal shows up\n * @prop {object} cfg.mediaEditorSettings.mediaTypes configuration of source options for each media type: image, video and map\n * @prop {object} cfg.mediaEditorSettings.sources definition of sources\n * @prop {object} cfg.mediaEditorSettings.sources[sourceId].name name id of service for translations\n * @prop {object} cfg.mediaEditorSettings.sources[sourceId].type type of service\n * @prop {object} cfg.mediaEditorSettings.sources[sourceId].addMediaEnabled[mediaType] enable add button (supported service types: geostory)\n * @prop {object} cfg.mediaEditorSettings.sources[sourceId].editMediaEnabled[mediaType] enable edit button (supported service types: geostory and geostore)\n * @prop {object} cfg.mediaEditorSettings.sources[sourceId].removeMediaEnabled[mediaType] enable remove button (supported service types: geostory)\n * @example\n * // example of mediaEditorSettings configuration with only the geostory service\n * {\n *   \"name\": \"GeoStory\",\n *   \"cfg\": {\n *     \"defaultMarkerStyle\": {\n *       \"iconColor\": \"orange\", // 'red', 'orange-dark', 'orange', 'yellow', 'blue-dark', 'blue', 'cyan', ->\n *           // -> 'purple', 'violet', 'pink', 'green-dark', 'green', 'green-light' or 'black'\n *       \"iconShape\": \"square\" // 'circle', 'square', 'star' or 'penta'\n *     },\n *     \"highlightedMarkerStyle\": {\n *       \"iconColor\": \"green\", // 'orange', 'orange-dark', 'orange', 'yellow', 'blue-dark', 'blue', 'cyan', ->\n *           // -> 'purple', 'violet', 'pink', 'green-dark', 'red', 'green-light' or 'black'\n *       \"iconShape\": \"circle\" // 'circle', 'square', 'star' or 'penta'\n *     },\n *     \"mediaEditorSettings\": {\n *       \"sourceId\": \"geostory\",\n *       \"mediaTypes\": {\n *         \"image\": {\n *           \"defaultSource\": \"geostory\",\n *           \"sources\": [\"geostory\"]\n *         },\n *         \"video\": {\n *           \"defaultSource\": \"geostory\",\n *           \"sources\": [\"geostory\"]\n *         },\n *         \"map\": {\n *           \"defaultSource\": \"geostory\",\n *           \"sources\": [\"geostory\"]\n *         }\n *       },\n *       \"sources\": {\n *         \"geostory\": {\n *           \"name\": \"geostory.currentStory\",\n *           \"type\": \"geostory\"\n *           \"addMediaEnabled\": {\n *             \"image\": true,\n *             \"video\": true,\n *             \"map\": true\n *           },\n *           \"editMediaEnabled\": {\n *             \"image\": true,\n *             \"video\": true,\n *             \"map\": true\n *           },\n *           \"removeMediaEnabled\": {\n *             \"image\": true,\n *             \"video\": true,\n *             \"map\": true\n *           }\n *         }\n *       }\n *     }\n *   }\n * }\n */","meta":{"filename":"GeoStory.jsx","lineno":122,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for GeoStory visualization</p>","name":"GeoStory","kind":"class","memberof":"plugins","properties":[{"type":{"names":["object"]},"description":"<p>define the default marker style used by geo carousel section</p>","name":"cfg.defaultMarkerStyle"},{"type":{"names":["Array.<object>"]},"description":"<p>A list of objects with font family names and sources where to load them from e.g. [{&quot;family&quot;: &quot;Comic sans&quot;, &quot;src&quot;: &quot;link to source&quot;}]</p>","name":"cfg.fontFamilies:"},{"type":{"names":["object"]},"description":"<p>define the highlighted marker style used by geo carousel section</p>","name":"cfg.highlightedMarkerStyle"},{"type":{"names":["numeric"]},"description":"<p>default 100, the debounce before calculations of currentPage active section</p>","name":"cfg.interceptionTime"},{"type":{"names":["object"]},"description":"<p>settings for media editor services divided by media type</p>","name":"cfg.mediaEditorSettings"},{"type":{"names":["object"]},"description":"<p>configuration of source options for each media type: image, video and map</p>","name":"cfg.mediaEditorSettings.mediaTypes"},{"type":{"names":["string"]},"description":"<p>selected service identifier used when the modal shows up</p>","name":"cfg.mediaEditorSettings.sourceId"},{"type":{"names":["object"]},"description":"<p>definition of sources</p>","name":"cfg.mediaEditorSettings.sources"},{"type":{"names":["object"]},"description":"<p>enable add button (supported service types: geostory)</p>","name":"cfg.mediaEditorSettings.sources[sourceId].addMediaEnabled[mediaType"},{"type":{"names":["object"]},"description":"<p>enable edit button (supported service types: geostory and geostore)</p>","name":"cfg.mediaEditorSettings.sources[sourceId].editMediaEnabled[mediaType"},{"type":{"names":["object"]},"description":"<p>name id of service for translations</p>","name":"cfg.mediaEditorSettings.sources[sourceId].name"},{"type":{"names":["object"]},"description":"<p>enable remove button (supported service types: geostory)</p>","name":"cfg.mediaEditorSettings.sources[sourceId].removeMediaEnabled[mediaType"},{"type":{"names":["object"]},"description":"<p>type of service</p>","name":"cfg.mediaEditorSettings.sources[sourceId].type"}],"examples":["// example of mediaEditorSettings configuration with only the geostory service\n{\n  \"name\": \"GeoStory\",\n  \"cfg\": {\n    \"defaultMarkerStyle\": {\n      \"iconColor\": \"orange\", // 'red', 'orange-dark', 'orange', 'yellow', 'blue-dark', 'blue', 'cyan', ->\n          // -> 'purple', 'violet', 'pink', 'green-dark', 'green', 'green-light' or 'black'\n      \"iconShape\": \"square\" // 'circle', 'square', 'star' or 'penta'\n    },\n    \"highlightedMarkerStyle\": {\n      \"iconColor\": \"green\", // 'orange', 'orange-dark', 'orange', 'yellow', 'blue-dark', 'blue', 'cyan', ->\n          // -> 'purple', 'violet', 'pink', 'green-dark', 'red', 'green-light' or 'black'\n      \"iconShape\": \"circle\" // 'circle', 'square', 'star' or 'penta'\n    },\n    \"mediaEditorSettings\": {\n      \"sourceId\": \"geostory\",\n      \"mediaTypes\": {\n        \"image\": {\n          \"defaultSource\": \"geostory\",\n          \"sources\": [\"geostory\"]\n        },\n        \"video\": {\n          \"defaultSource\": \"geostory\",\n          \"sources\": [\"geostory\"]\n        },\n        \"map\": {\n          \"defaultSource\": \"geostory\",\n          \"sources\": [\"geostory\"]\n        }\n      },\n      \"sources\": {\n        \"geostory\": {\n          \"name\": \"geostory.currentStory\",\n          \"type\": \"geostory\"\n          \"addMediaEnabled\": {\n            \"image\": true,\n            \"video\": true,\n            \"map\": true\n          },\n          \"editMediaEnabled\": {\n            \"image\": true,\n            \"video\": true,\n            \"map\": true\n          },\n          \"removeMediaEnabled\": {\n            \"image\": true,\n            \"video\": true,\n            \"map\": true\n          }\n        }\n      }\n    }\n  }\n}"],"scope":"static","longname":"plugins.GeoStory","$longname":"plugins.GeoStory"},{"comment":"/**\n * Plugin for GeoStory side panel editor. Allows editing of {@link #plugins.GeoStory|GeoStory},\n * turning it in edit mode.\n * @name GeoStoryEditor\n * @class\n * @memberof plugins\n */","meta":{"filename":"GeoStoryEditor.jsx","lineno":140,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for GeoStory side panel editor. Allows editing of {@link #plugins.GeoStory|GeoStory},\nturning it in edit mode.</p>","name":"GeoStoryEditor","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.GeoStoryEditor","$longname":"plugins.GeoStoryEditor"},{"comment":"/**\n * Plugin for GeoStory top panel for navigation\n * @name GeoStoryNavigation\n * @class\n * @memberof plugins\n */","meta":{"filename":"GeoStoryNavigation.jsx","lineno":63,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for GeoStory top panel for navigation</p>","name":"GeoStoryNavigation","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.GeoStoryNavigation","$longname":"plugins.GeoStoryNavigation"},{"comment":"/**\n * Implements \"save as\" button for geostories, to render in the {@link #plugins.BurgerMenu|BurgerMenu}}\n * @class\n * @name GeoStorySave\n * @memberof plugins\n */","meta":{"filename":"GeoStorySave.jsx","lineno":103,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Implements &quot;save as&quot; button for geostories, to render in the {@link #plugins.BurgerMenu|BurgerMenu}}</p>","kind":"class","name":"GeoStorySave","memberof":"plugins","scope":"static","longname":"plugins.GeoStorySave","$longname":"plugins.GeoStorySave"},{"comment":"/**\n * Implements \"save\" button for geostories, to render in the {@link #plugins.BurgerMenu|BurgerMenu}}\n * @class\n * @name GeoStorySave\n * @memberof plugins\n */","meta":{"filename":"GeoStorySave.jsx","lineno":66,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Implements &quot;save&quot; button for geostories, to render in the {@link #plugins.BurgerMenu|BurgerMenu}}</p>","kind":"class","name":"GeoStorySave","memberof":"plugins","scope":"static","longname":"plugins.GeoStorySave","$longname":"plugins.GeoStorySave"},{"comment":"/**\n  * GlobeViewSwitcher Plugin. A button that toggles to 3d mode\n  * @class GlobeViewSwitcher\n  * @memberof plugins\n  * @static\n  *\n  * @prop {string} cfg.id identifier of the Plugin\n  *\n  */","meta":{"filename":"GlobeViewSwitcher.jsx","lineno":17,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>GlobeViewSwitcher Plugin. A button that toggles to 3d mode</p>","kind":"class","name":"GlobeViewSwitcher","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>identifier of the Plugin</p>","name":"cfg.id"}],"longname":"plugins.GlobeViewSwitcher","$longname":"plugins.GlobeViewSwitcher"},{"comment":"/**\n * GoFull plugin. Shows a button that opens full MapStore2 in a new tab. Try to find the `originalUrl` in configuration or tries to guess the mapId and creates the proper URL.\n * This plugins hides automatically if the originalUrl is not present in configuration and if the urlRegex do not match.\n * @prop {string} cfg.glyph the glyph icon for the button\n * @prop {string} cfg.tooltip messageId of the tooltip to use\n * @prop {string} cfg.urlRegex. A regex to parse the current location.href. This regex must match if the originalUrl is not defined.\n * @prop {string} cfg.urlReplaceString. The template to create the url link. Uses the `urlRegex` groups to create the final URL\n * @memberof plugins\n * @class GoFull\n */","meta":{"filename":"GoFull.jsx","lineno":16,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>GoFull plugin. Shows a button that opens full MapStore2 in a new tab. Try to find the <code>originalUrl</code> in configuration or tries to guess the mapId and creates the proper URL.\nThis plugins hides automatically if the originalUrl is not present in configuration and if the urlRegex do not match.</p>","properties":[{"type":{"names":["string"]},"description":"<p>the glyph icon for the button</p>","name":"cfg.glyph"},{"type":{"names":["string"]},"description":"<p>messageId of the tooltip to use</p>","name":"cfg.tooltip"},{"type":{"names":["string"]},"description":"<p>A regex to parse the current location.href. This regex must match if the originalUrl is not defined.</p>","name":"cfg.urlRegex."},{"type":{"names":["string"]},"description":"<p>The template to create the url link. Uses the <code>urlRegex</code> groups to create the final URL</p>","name":"cfg.urlReplaceString."}],"memberof":"plugins","kind":"class","name":"GoFull","scope":"static","longname":"plugins.GoFull","$longname":"plugins.GoFull"},{"comment":"/**\n * Allows an administrator to browse user groups.\n * Renders in {@link #plugins.Manager|Manager} plugin.\n * @name GroupManager\n * @memberof plugins\n * @class\n */","meta":{"filename":"GroupManager.jsx","lineno":87,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins/manager","code":{}},"description":"<p>Allows an administrator to browse user groups.\nRenders in {@link #plugins.Manager|Manager} plugin.</p>","name":"GroupManager","memberof":"plugins","kind":"class","scope":"static","longname":"plugins.GroupManager","$longname":"plugins.GroupManager"},{"comment":"/**\n * Header of MapStore, rendered in the home page (big full-width image).\n * @name Header\n * @class\n * @memberof plugins\n * @prop {object} [style] the style for the main div.\n */","meta":{"filename":"Header.jsx","lineno":12,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/plugins","code":{}},"description":"<p>Header of MapStore, rendered in the home page (big full-width image).</p>","name":"Header","kind":"class","memberof":"plugins","properties":[{"type":{"names":["object"]},"optional":true,"description":"<p>the style for the main div.</p>","name":"style"}],"scope":"static","longname":"plugins.Header","$longname":"plugins.Header"},{"comment":"/**\n *  HelpLink is a plugin that redirects the user to the online documentation.\n *  It gets displayed into the {@link #plugins.BurgerMenu|BurgerMenu} plugin.\n *  @name HelpLink\n *  @memberof plugins\n *  @class\n *  @prop {string} docsUrl default https://mapstore.readthedocs.io/en/latest/. Link to the online documentation.\n *  @example\n *  // If you, as an admin, want to specify the link to the docs when creating or editing a context, you can configure the HelpLink plugin, as shown below:\n *  {\n *    \"docsUrl\": \"https://your-path\"\n *  }\n */","meta":{"filename":"HelpLink.jsx","lineno":17,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>HelpLink is a plugin that redirects the user to the online documentation.\nIt gets displayed into the {@link #plugins.BurgerMenu|BurgerMenu} plugin.</p>","name":"HelpLink","memberof":"plugins","kind":"class","properties":[{"type":{"names":["string"]},"description":"<p>default https://mapstore.readthedocs.io/en/latest/. Link to the online documentation.</p>","name":"docsUrl"}],"examples":["// If you, as an admin, want to specify the link to the docs when creating or editing a context, you can configure the HelpLink plugin, as shown below:\n {\n   \"docsUrl\": \"https://your-path\"\n }"],"scope":"static","longname":"plugins.HelpLink","$longname":"plugins.HelpLink"},{"comment":"/**\n * Renders a button that redirects to the home page.\n * It can be rendered in {@link #plugins.OmniBar|OmniBar}.\n * Supports as containers at lower priority {@link #plugins.Toolbar|Toolbar}.\n * You can configure the home target path globally by setting `miscSettings.homePath` in `localConfig.json`. By default it redirects to `\"#/\"`;\n * @name Home\n * @class\n * @memberof plugins\n */","meta":{"filename":"Home.jsx","lineno":43,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Renders a button that redirects to the home page.\nIt can be rendered in {@link #plugins.OmniBar|OmniBar}.\nSupports as containers at lower priority {@link #plugins.Toolbar|Toolbar}.\nYou can configure the home target path globally by setting <code>miscSettings.homePath</code> in <code>localConfig.json</code>. By default it redirects to <code>&quot;#/&quot;</code>;</p>","name":"Home","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Home","$longname":"plugins.Home"},{"comment":"/**\n * Description of MapStore rendered in the home page.\n * Renders the HTML in localization files identified by\n * the path `home.shortDescription`.\n * @name HomeDescription\n * @class\n * @memberof plugins\n * @prop {string} [name='MapStore'] Title of the text\n */","meta":{"filename":"HomeDescription.jsx","lineno":14,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/plugins","code":{}},"description":"<p>Description of MapStore rendered in the home page.\nRenders the HTML in localization files identified by\nthe path <code>home.shortDescription</code>.</p>","name":"HomeDescription","kind":"class","memberof":"plugins","properties":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"'MapStore'","description":"<p>Title of the text</p>","name":"name"}],"scope":"static","longname":"plugins.HomeDescription","$longname":"plugins.HomeDescription"},{"comment":"/**\n * This plugin allows get informations about clicked point. It can be configured to have a mobile or a desktop flavor.\n *\n * You can configure some of the features of this plugin by setting up the initial mapInfo state, then you need to update the \"initialState.defaultState\", or by the plugin configuration\n * ```\n * \"mapInfo\": {\n *   \"enabled\": true, // enabled by default\n *   \"disabledAlwaysOn\": false, // if true, disable always on setup\n *   \"configuration\": {\n *     \"showEmptyMessageGFI\": false // allow or deny the visiibility of message when you have no results from identify request\n *     \"infoFormat\": \"text/plain\" // default infoformat value, other values are \"text/html\" for text only or \"application/json\" for properties\n *   }\n * }\n * ```\n *\n * @class Identify\n * @memberof plugins\n * @static\n *\n * @prop showIn {string[]} List of the plugins where to show the plugin\n * @prop cfg.dock {bool} true shows dock panel, false shows modal\n * @prop cfg.draggable {boolean} draggable info window, when modal\n * @prop cfg.showHighlightFeatureButton {boolean} show the highlight feature button if the interrogation returned valid features (openlayers only)\n * @prop cfg.viewerOptions.container {expression} the container of the viewer, expression from the context\n * @prop cfg.viewerOptions.header {expression} the header of the viewer, expression from the context{expression}\n * @prop cfg.disableCenterToMarker {bool} disable zoom to marker action\n * @prop cfg.zIndex {number} component z index order\n * @prop cfg.showInMapPopup {boolean} if true show the identify as popup\n * @prop cfg.showMoreInfo {boolean} if true shows the more info icon which allow user to show/hide Geocode viewer as popup (true by default)\n * @prop cfg.showEdit {boolean} if true, and when the FeatureEditor plugin is present, shows and edit button to edit the current feature(s) clicked in the grid.\n * @prop cfg.enableInfoForSelectedLayers {boolean} if true, if some layer is selected in the TOC, the feature info is performed only on the selected ones. if false, the info is queried for all the layers, independently from selection. (default is true).\n *\n * @example\n * {\n *   \"name\": \"Identify\",\n *   \"showIn\": [\"Settings\"],\n *   \"cfg\": {\n *       \"draggable\": false,\n *       \"dock\": true,\n *       \"viewerOptions\": {\n *          \"container\": \"{context.ReactSwipe}\",\n *          \"header\": \"{context.SwipeHeader}\"\n *       }\n *    }\n * }\n *\n */","meta":{"filename":"Identify.jsx","lineno":176,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>This plugin allows get informations about clicked point. It can be configured to have a mobile or a desktop flavor.</p>\n<p>You can configure some of the features of this plugin by setting up the initial mapInfo state, then you need to update the &quot;initialState.defaultState&quot;, or by the plugin configuration</p>\n<pre class=\"prettyprint source\"><code>&quot;mapInfo&quot;: {\n  &quot;enabled&quot;: true, // enabled by default\n  &quot;disabledAlwaysOn&quot;: false, // if true, disable always on setup\n  &quot;configuration&quot;: {\n    &quot;showEmptyMessageGFI&quot;: false // allow or deny the visiibility of message when you have no results from identify request\n    &quot;infoFormat&quot;: &quot;text/plain&quot; // default infoformat value, other values are &quot;text/html&quot; for text only or &quot;application/json&quot; for properties\n  }\n}\n</code></pre>","kind":"class","name":"Identify","memberof":"plugins","scope":"static","properties":[{"type":{"names":["bool"]},"description":"<p>disable zoom to marker action</p>","name":"cfg.disableCenterToMarker"},{"type":{"names":["bool"]},"description":"<p>true shows dock panel, false shows modal</p>","name":"cfg.dock"},{"type":{"names":["boolean"]},"description":"<p>draggable info window, when modal</p>","name":"cfg.draggable"},{"type":{"names":["boolean"]},"description":"<p>if true, if some layer is selected in the TOC, the feature info is performed only on the selected ones. if false, the info is queried for all the layers, independently from selection. (default is true).</p>","name":"cfg.enableInfoForSelectedLayers"},{"type":{"names":["boolean"]},"description":"<p>if true, and when the FeatureEditor plugin is present, shows and edit button to edit the current feature(s) clicked in the grid.</p>","name":"cfg.showEdit"},{"type":{"names":["boolean"]},"description":"<p>show the highlight feature button if the interrogation returned valid features (openlayers only)</p>","name":"cfg.showHighlightFeatureButton"},{"type":{"names":["boolean"]},"description":"<p>if true show the identify as popup</p>","name":"cfg.showInMapPopup"},{"type":{"names":["boolean"]},"description":"<p>if true shows the more info icon which allow user to show/hide Geocode viewer as popup (true by default)</p>","name":"cfg.showMoreInfo"},{"type":{"names":["expression"]},"description":"<p>the container of the viewer, expression from the context</p>","name":"cfg.viewerOptions.container"},{"type":{"names":["expression"]},"description":"<p>the header of the viewer, expression from the context{expression}</p>","name":"cfg.viewerOptions.header"},{"type":{"names":["number"]},"description":"<p>component z index order</p>","name":"cfg.zIndex"},{"type":{"names":["Array.<string>"]},"description":"<p>List of the plugins where to show the plugin</p>","name":"showIn"}],"examples":["{\n  \"name\": \"Identify\",\n  \"showIn\": [\"Settings\"],\n  \"cfg\": {\n      \"draggable\": false,\n      \"dock\": true,\n      \"viewerOptions\": {\n         \"container\": \"{context.ReactSwipe}\",\n         \"header\": \"{context.SwipeHeader}\"\n      }\n   }\n}"],"longname":"plugins.Identify","$longname":"plugins.Identify"},{"comment":"/**\n * Renders a menu to switch language.\n * It can be rendered in {@link #plugins.OmniBar|OmniBar}.\n * @name Language\n * @class\n * @memberof plugins\n */","meta":{"filename":"Language.jsx","lineno":21,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Renders a menu to switch language.\nIt can be rendered in {@link #plugins.OmniBar|OmniBar}.</p>","name":"Language","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Language","$longname":"plugins.Language"},{"comment":"/**\n * Provides advanced data export functionalities using [WPS download process](https://docs.geoserver.org/stable/en/user/community/wps-download/index.html) or using WFS service, if WPS download process is missing.\n * @memberof plugins\n * @name LayerDownload\n * @class\n * @prop {object[]} formats An array of name-label objects for the allowed formats available. This object can contain an optional `validServices` entry, that contains an array of the  services where the formats should be used. If no \"wfs\" service is configured, the plugin will retrieve the list from the \"WFS\" service.\n * @prop {object[]} srsList An array of name-label objects for the allowed srs available. Use name:'native' to omit srsName param in wfs filter\n * @prop {string} defaultSrs Default selected srs\n * @prop {string} closeGlyph The icon to use for close the dialog\n * @example\n * {\n *  \"name\": \"LayerDownload\",\n *  \"cfg\": {\n *    \"formats\": [\n *            {\"name\": \"csv\", \"label\": \"csv\"},\n *            {\"name\": \"shape-zip\", \"label\": \"shape-zip\", \"validServices\": [\"wfs\"]},\n *            {\"name\": \"excel\", \"label\": \"excel\", \"validServices\": [\"wfs\", \"wps\"]},\n *            {\"name\": \"excel2007\", \"label\": \"excel2007\"},\n *            {\"name\": \"dxf-zip\", \"label\": \"dxf-zip\"}\n *    ],\n *     \"srsList\": [\n *            {\"name\": \"native\", \"label\": \"Native\"},\n *            {\"name\": \"EPSG:4326\", \"label\": \"WGS84\"}\n *    ],\n *     \"defaultSrs\": \"native\"\n *  }\n * }\n * // it is possible to support GeoPackage format when the targeted GeoServer uses wps download extensions\n * // here an example of configuration that include GeoPackage for wps\n *\n *  {\n *      \"name\": \"LayerDownload\",\n *      \"cfg\": {\n *          \"formats\": [\n *              { \"name\": \"application/json\", \"label\": \"GeoJSON\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n *              { \"name\": \"application/arcgrid\", \"label\": \"ArcGrid\", \"type\": \"raster\", \"validServices\": [\"wps\"] },\n *              { \"name\": \"image/tiff\", \"label\": \"TIFF\", \"type\": \"raster\", \"validServices\": [\"wps\"] },\n *              { \"name\": \"image/png\", \"label\": \"PNG\", \"type\": \"raster\", \"validServices\": [\"wps\"] },\n *              { \"name\": \"image/jpeg\", \"label\": \"JPEG\", \"type\": \"raster\", \"validServices\": [\"wps\"]},\n *              { \"name\": \"application/wfs-collection-1.0\", \"label\": \"wfs-collection-1.0\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n *              { \"name\": \"application/wfs-collection-1.1\", \"label\": \"wfs-collection-1.1\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n *              { \"name\": \"application/zip\", \"label\": \"Shapefile\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n *              { \"name\": \"text/csv\", \"label\": \"CSV\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n *\n *              { \"name\": \"application/geopackage+sqlite3\", \"label\": \"GeoPackage\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n *              { \"name\": \"application/geopackage+sqlite3\", \"label\": \"GeoPackage\", \"type\": \"raster\", \"validServices\": [\"wps\"] }\n *          ]\n *      }\n *  }\n */","meta":{"filename":"LayerDownload.jsx","lineno":52,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Provides advanced data export functionalities using <a href=\"https://docs.geoserver.org/stable/en/user/community/wps-download/index.html\">WPS download process</a> or using WFS service, if WPS download process is missing.</p>","memberof":"plugins","name":"LayerDownload","kind":"class","properties":[{"type":{"names":["string"]},"description":"<p>The icon to use for close the dialog</p>","name":"closeGlyph"},{"type":{"names":["string"]},"description":"<p>Default selected srs</p>","name":"defaultSrs"},{"type":{"names":["Array.<object>"]},"description":"<p>An array of name-label objects for the allowed formats available. This object can contain an optional <code>validServices</code> entry, that contains an array of the  services where the formats should be used. If no &quot;wfs&quot; service is configured, the plugin will retrieve the list from the &quot;WFS&quot; service.</p>","name":"formats"},{"type":{"names":["Array.<object>"]},"description":"<p>An array of name-label objects for the allowed srs available. Use name:'native' to omit srsName param in wfs filter</p>","name":"srsList"}],"examples":["{\n \"name\": \"LayerDownload\",\n \"cfg\": {\n   \"formats\": [\n           {\"name\": \"csv\", \"label\": \"csv\"},\n           {\"name\": \"shape-zip\", \"label\": \"shape-zip\", \"validServices\": [\"wfs\"]},\n           {\"name\": \"excel\", \"label\": \"excel\", \"validServices\": [\"wfs\", \"wps\"]},\n           {\"name\": \"excel2007\", \"label\": \"excel2007\"},\n           {\"name\": \"dxf-zip\", \"label\": \"dxf-zip\"}\n   ],\n    \"srsList\": [\n           {\"name\": \"native\", \"label\": \"Native\"},\n           {\"name\": \"EPSG:4326\", \"label\": \"WGS84\"}\n   ],\n    \"defaultSrs\": \"native\"\n }\n}\n// it is possible to support GeoPackage format when the targeted GeoServer uses wps download extensions\n// here an example of configuration that include GeoPackage for wps\n\n {\n     \"name\": \"LayerDownload\",\n     \"cfg\": {\n         \"formats\": [\n             { \"name\": \"application/json\", \"label\": \"GeoJSON\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n             { \"name\": \"application/arcgrid\", \"label\": \"ArcGrid\", \"type\": \"raster\", \"validServices\": [\"wps\"] },\n             { \"name\": \"image/tiff\", \"label\": \"TIFF\", \"type\": \"raster\", \"validServices\": [\"wps\"] },\n             { \"name\": \"image/png\", \"label\": \"PNG\", \"type\": \"raster\", \"validServices\": [\"wps\"] },\n             { \"name\": \"image/jpeg\", \"label\": \"JPEG\", \"type\": \"raster\", \"validServices\": [\"wps\"]},\n             { \"name\": \"application/wfs-collection-1.0\", \"label\": \"wfs-collection-1.0\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n             { \"name\": \"application/wfs-collection-1.1\", \"label\": \"wfs-collection-1.1\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n             { \"name\": \"application/zip\", \"label\": \"Shapefile\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n             { \"name\": \"text/csv\", \"label\": \"CSV\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n\n             { \"name\": \"application/geopackage+sqlite3\", \"label\": \"GeoPackage\", \"type\": \"vector\", \"validServices\": [\"wps\"] },\n             { \"name\": \"application/geopackage+sqlite3\", \"label\": \"GeoPackage\", \"type\": \"raster\", \"validServices\": [\"wps\"] }\n         ]\n     }\n }"],"scope":"static","longname":"plugins.LayerDownload","$longname":"plugins.LayerDownload"},{"comment":"/**\n * Provides title and description syncronization functionality for layers\n * @memberof plugins\n * @name LayerInfo\n * @class\n */","meta":{"filename":"LayerInfo.jsx","lineno":36,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Provides title and description syncronization functionality for layers</p>","memberof":"plugins","name":"LayerInfo","kind":"class","scope":"static","longname":"plugins.LayerInfo","$longname":"plugins.LayerInfo"},{"comment":"/**\n  * Locate Plugin. Provides button to locate the user's position on the map.\n  * By default it will follow the user until he interacts with the map.\n  * When the user move the map the follow mode deactivates and the locate tool is\n  * still active, only showing the user's position on the map. Clicking again on the locate tool\n  * will activate the following mode again.\n  * note: If you want to debug the sensor values used by this plugin you can add to the query string the parameter `locateDebug=true` (e.g.  `http://localhost:8081/?locateDebug=true#/viewer/openlayers/MAP_ID`)\n  *\n  * @class  Locate\n  * @memberof plugins\n  * @static\n  *\n  * @prop {string} cfg.style CSS to apply to the button\n  * @prop {string} cfg.text The button text, if any\n  * @prop {number} cfg.maxZoom The maximum zoom for automatic view setting to the user location\n  * @prop {number} cfg.speedThreshold above this value in m/s where the marker shows also an arrow indicating the heading, default is a circle threshold is 0.8 m/s\n  * @prop {string} cfg.className the class name for the button\n  * @prop {string} cfg.rateControl The rate control for the geolocation update frequency, value in milliseconds\n  *\n  */","meta":{"filename":"Locate.jsx","lineno":21,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Locate Plugin. Provides button to locate the user's position on the map.\nBy default it will follow the user until he interacts with the map.\nWhen the user move the map the follow mode deactivates and the locate tool is\nstill active, only showing the user's position on the map. Clicking again on the locate tool\nwill activate the following mode again.\nnote: If you want to debug the sensor values used by this plugin you can add to the query string the parameter <code>locateDebug=true</code> (e.g.  <code>http://localhost:8081/?locateDebug=true#/viewer/openlayers/MAP_ID</code>)</p>","kind":"class","name":"Locate","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>the class name for the button</p>","name":"cfg.className"},{"type":{"names":["number"]},"description":"<p>The maximum zoom for automatic view setting to the user location</p>","name":"cfg.maxZoom"},{"type":{"names":["string"]},"description":"<p>The rate control for the geolocation update frequency, value in milliseconds</p>","name":"cfg.rateControl"},{"type":{"names":["number"]},"description":"<p>above this value in m/s where the marker shows also an arrow indicating the heading, default is a circle threshold is 0.8 m/s</p>","name":"cfg.speedThreshold"},{"type":{"names":["string"]},"description":"<p>CSS to apply to the button</p>","name":"cfg.style"},{"type":{"names":["string"]},"description":"<p>The button text, if any</p>","name":"cfg.text"}],"longname":"plugins.Locate","$longname":"plugins.Locate"},{"comment":"/**\n  * Login Plugin. Allow to login/logout or show user info and reset password tools.\n  * It renders a menu in {@link #plugins.OmniBar|OmniBar} plugin.\n  * If `localConfig.json` `authenticationProviders` property in the root contains only one value, the login will use that provider by default.\n  * `authenticationProviders` members are object with\n  * - `type` (`<openID|basic>`): indicates the type of authentication to use.\n  * - `provider` (`<geostore|google|...>`). In case of `type=openID`, the provider indicates the path to query in GeoStore.\n  * - `url` optional URL to redirect in case of `openID`. By default it will use the standard convention to `rest/geostore/{provider}/login`.\n  * - `imageURL` optional URL for the image to use in the link of the login form. (certain pre-defined services like `google` may have their own default logo)\n  * - `title` a text to show in the link to the login page of the provider, if logo is present, this text is used as `alt` text in for the image.\n  * Example of configuration.\n  * ```json\n  * {\n  *  \"authenticationProviders\": [{\"type\": \"openID\", \"provider\": \"google\"}, {\"type\": \"basic\", \"provider\": \"geostore\"}]\n  * }\n  * ```\n  * By default, if not set, it will use classic `{\"type\": \"basic\", \"provider\": \"geostore\"}` setup for GeoStore.\n  * @class Login\n  * @memberof plugins\n  * @static\n  *\n  * @prop {string} cfg.id identifier of the Plugin, by default `\"mapstore-login-menu\"`\n  * @prop {object} cfg.menuStyle inline style for the menu, by default:\n  * ```\n  * menuStyle: {\n  *      zIndex: 30\n  * }\n  *```\n  */","meta":{"filename":"Login.jsx","lineno":24,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Login Plugin. Allow to login/logout or show user info and reset password tools.\nIt renders a menu in {@link #plugins.OmniBar|OmniBar} plugin.\nIf <code>localConfig.json</code> <code>authenticationProviders</code> property in the root contains only one value, the login will use that provider by default.\n<code>authenticationProviders</code> members are object with</p>\n<ul>\n<li><code>type</code> (<code>&lt;openID|basic&gt;</code>): indicates the type of authentication to use.</li>\n<li><code>provider</code> (<code>&lt;geostore|google|...&gt;</code>). In case of <code>type=openID</code>, the provider indicates the path to query in GeoStore.</li>\n<li><code>url</code> optional URL to redirect in case of <code>openID</code>. By default it will use the standard convention to <code>rest/geostore/{provider}/login</code>.</li>\n<li><code>imageURL</code> optional URL for the image to use in the link of the login form. (certain pre-defined services like <code>google</code> may have their own default logo)</li>\n<li><code>title</code> a text to show in the link to the login page of the provider, if logo is present, this text is used as <code>alt</code> text in for the image.\nExample of configuration.</li>\n</ul>\n<pre class=\"prettyprint source lang-json\"><code>{\n &quot;authenticationProviders&quot;: [{&quot;type&quot;: &quot;openID&quot;, &quot;provider&quot;: &quot;google&quot;}, {&quot;type&quot;: &quot;basic&quot;, &quot;provider&quot;: &quot;geostore&quot;}]\n}\n</code></pre>\n<p>By default, if not set, it will use classic <code>{&quot;type&quot;: &quot;basic&quot;, &quot;provider&quot;: &quot;geostore&quot;}</code> setup for GeoStore.</p>","kind":"class","name":"Login","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>identifier of the Plugin, by default <code>&quot;mapstore-login-menu&quot;</code></p>","name":"cfg.id"},{"type":{"names":["object"]},"description":"<p>inline style for the menu, by default:</p>\n<pre class=\"prettyprint source\"><code>menuStyle: {\n     zIndex: 30\n}\n</code></pre>","name":"cfg.menuStyle"}],"longname":"plugins.Login","$longname":"plugins.Login"},{"comment":"/**\n * Base container for Manager plugins like {@link #plugins.UserManager|UserManager} or\n * {@link #plugins.GroupManager|GroupManager}\n * usually rendered in {@link #pages.Manager|Manager Page}.\n * @name Manager\n * @class\n * @memberof plugins\n */","meta":{"filename":"Manager.jsx","lineno":85,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins/manager","code":{}},"description":"<p>Base container for Manager plugins like {@link #plugins.UserManager|UserManager} or\n{@link #plugins.GroupManager|GroupManager}\nusually rendered in {@link #pages.Manager|Manager Page}.</p>","name":"Manager","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Manager","$longname":"plugins.Manager"},{"comment":"/**\n * This plugin provides a special Manager dropdown menu, that contains various administration tools\n * @memberof plugins\n * @name ManagerMenu\n * @class\n * @prop {boolean} cfg.enableContextManager: enable context manager menu entry, default `true`\n */","meta":{"filename":"ManagerMenu.jsx","lineno":146,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins/manager","code":{}},"description":"<p>This plugin provides a special Manager dropdown menu, that contains various administration tools</p>","memberof":"plugins","name":"ManagerMenu","kind":"class","properties":[{"type":{"names":["boolean"]},"description":"<p>enable context manager menu entry, default <code>true</code></p>","name":"cfg.enableContextManager:"}],"scope":"static","longname":"plugins.ManagerMenu","$longname":"plugins.ManagerMenu"},{"comment":"/**\n * The Map plugin allows adding mapping library dependent functionality using support tools.\n * Some are already available for the supported mapping libraries (openlayers, leaflet, cesium), but it's possible to develop new ones.\n * An example is the MeasurementSupport tool that allows implementing measurement on a map.\n * The list of enabled tools can be configured using the tools property, as in the following example:\n *\n * ```\n * {\n * \"name\": \"Map\",\n * \"cfg\": {\n *     \"tools\": [\"measurement\", \"locate\", \"overview\", \"scalebar\", \"draw\", \"highlight\"]\n *   ...\n *  }\n * }\n * ```\n * // Each tool can be configured using the toolsOptions. Tool configuration can be mapping library dependent:\n * ```\n * \"toolsOptions\": {\n *        \"scalebar\": {\n *            \"leaflet\": {\n *                \"position\": \"bottomright\"\n *            }\n *            ...\n *        }\n *        ...\n *    }\n *\n * ```\n * or not\n * ```\n * \"toolsOptions\": {\n * \"scalebar\": {\n *        \"position\": \"bottomright\"\n *        ...\n *    }\n *    ...\n * }\n * ```\n * In addition to standard tools, you can also develop your own, ad configure them to be used.\n *\n * To do that you need to:\n *  - develop a tool Component, in JSX (e.g. TestSupport), for each supported mapping library\n * ```\n * const React = require('react');\n *    class TestSupport extends React.Component {\n *     static propTypes = {\n *            label: PropTypes.string\n *        }\n *        render() {\n *            alert(this.props.label);\n *            return null;\n *        }\n *    }\n *    module.exports = TestSupport;\n * ```\n *  - include the tool(s) in the requires section of plugins.js amd give it a name:\n * ```\n *    module.exports = {\n *        plugins: {\n *            MapPlugin: require('../plugins/Map'),\n *            ...\n *        },\n *        requires: {\n *            ...\n *            TestSupportLeaflet: require('../components/map/leaflet/TestSupport')\n *        }\n *    };\n * ```\n *  - configure the Map plugin including the new tool and related options. You can configure the tool to be used for each mapping library, giving it a name and impl attributes, where:\n * ```\n *    {\n *      \"name\": \"Map\",\n *      \"cfg\": {\n *        \"shouldLoadFont\": true,\n *        \"fonts\": ['FontAwesome'],\n *        \"tools\": [\"measurement\", \"locate\", \"overview\", \"scalebar\", \"draw\", {\n *          \"leaflet\": {\n *            \"name\": \"test\",\n *            \"impl\": \"{context.TestSupportLeaflet}\"\n *          }\n *          }],\n *        \"toolsOptions\": {\n *          \"test\": {\n *            \"label\": \"Hello\"\n *          }\n *          ...\n *        }\n *      }\n *    }\n * ```\n *  - name is a unique name for the tool\n *  - impl is a placeholder (“{context.ToolName}”) where ToolName is the name you gave the tool in plugins.js (TestSupportLeaflet in our example)\n *\n * You can also specify a list of fonts that have to be loaded before map rendering\n * if the shouldLoadFont is true\n * This font pre-load list is required if you're using canvas based mapping libraries (e.g. OpenLayers) and you need to show markers with symbols (e.g. Annotations).\n * For each font you must specify the font name used in the `@font-face` inside the \"fonts\" array property. Note: the `@font-face` declaration must be present in css of the page, otherwise the font can not be loaded anyway.\n * ```\n * {\n *    \"name\": \"Map\",\n *    \"cfg\": {\n *      \"shouldLoadFont\": true,\n *      \"fonts\": ['FontAwesome']\n *    }\n *  }\n * ```\n * For more info on metadata visit [fontfaceobserver](https://github.com/bramstein/fontfaceobserver)\n *\n * An additional feature to is limit the area and/or the minimum level of zoom in the localConfig.json file using \"mapConstraints\" property\n *\n *  e.g\n * ```json\n * \"mapConstraints\": {\n *  \"minZoom\": 12, // minimal allowed zoom used by default\n *  \"crs\":\"EPSG:3857\", // crs of the restrictedExtent\n *  \"restrictedExtent\":[ // limits the area accessible to the user to this bounding box\n *    1060334.456371965,5228292.734706056,\n *    1392988.403469052,5503466.036532691\n *   ],\n *   \"projectionsConstraints\": {\n *       \"EPSG:1234\": { \"minZoom\": 5 } // customization of minZoom for different projections\n *   }\n *  }\n * ```\n *\n * With this setup you can configure a restricted area and/or a minimum zoom level for the whole application.\n * If you have different reference systems for your maps, for each of them you can even set a minimum zoom\n * using the entry `projectionsConstraints` as written in the example.\n *\n * ```\n *\n * @memberof plugins\n * @class Map\n * @prop {array} additionalLayers static layers available in addition to those loaded from the configuration\n * @prop {object} mapOptions map options grouped by map type\n * @prop {object} mapOptions[mapType] this object contains configuration specific for a map type. The mapType could be `openlayers`, `leaflet` or `cesium`\n * @prop {boolean} mapOptions.cesium.navigationTools enable cesium navigation tool (default false)\n * @prop {boolean} mapOptions.cesium.showSkyAtmosphere enable sky atmosphere of the globe (default true)\n * @prop {boolean} mapOptions.cesium.showGroundAtmosphere enable ground atmosphere of the globe (default false)\n * @prop {boolean} mapOptions.cesium.enableFog enable fog in the view (default false)\n * @prop {boolean} mapOptions.cesium.depthTestAgainstTerrain if true all primitive 3d features will be tested against the terrain while if false they will be drawn on top of the terrain even if hidden by it (default true)\n * @static\n * @example\n * // Adding a layer to be used as a source for the elevation (shown in the MousePosition plugin configured with showElevation = true)\n * {\n *   \"cfg\": {\n *     \"additionalLayers\": [{\n *         \"type\": \"wms\",\n *         \"url\": \"http://localhost:8090/geoserver/wms\",\n *         \"visibility\": true,\n *         \"title\": \"Elevation\",\n *         \"name\": \"topp:elevation\",\n *         \"format\": \"application/bil16\",\n *         \"useForElevation\": true,\n *         \"nodata\": -9999,\n *         \"littleendian\": false,\n *         \"hidden\": true\n *      }]\n *   }\n * }\n *\n */","meta":{"filename":"Map.jsx","lineno":34,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>The Map plugin allows adding mapping library dependent functionality using support tools.\nSome are already available for the supported mapping libraries (openlayers, leaflet, cesium), but it's possible to develop new ones.\nAn example is the MeasurementSupport tool that allows implementing measurement on a map.\nThe list of enabled tools can be configured using the tools property, as in the following example:</p>\n<pre class=\"prettyprint source\"><code>{\n&quot;name&quot;: &quot;Map&quot;,\n&quot;cfg&quot;: {\n    &quot;tools&quot;: [&quot;measurement&quot;, &quot;locate&quot;, &quot;overview&quot;, &quot;scalebar&quot;, &quot;draw&quot;, &quot;highlight&quot;]\n  ...\n }\n}\n</code></pre>\n<p>// Each tool can be configured using the toolsOptions. Tool configuration can be mapping library dependent:</p>\n<pre class=\"prettyprint source\"><code>&quot;toolsOptions&quot;: {\n       &quot;scalebar&quot;: {\n           &quot;leaflet&quot;: {\n               &quot;position&quot;: &quot;bottomright&quot;\n           }\n           ...\n       }\n       ...\n   }\n\n</code></pre>\n<p>or not</p>\n<pre class=\"prettyprint source\"><code>&quot;toolsOptions&quot;: {\n&quot;scalebar&quot;: {\n       &quot;position&quot;: &quot;bottomright&quot;\n       ...\n   }\n   ...\n}\n</code></pre>\n<p>In addition to standard tools, you can also develop your own, ad configure them to be used.</p>\n<p>To do that you need to:</p>\n<ul>\n<li>develop a tool Component, in JSX (e.g. TestSupport), for each supported mapping library</li>\n</ul>\n<pre class=\"prettyprint source\"><code>const React = require('react');\n   class TestSupport extends React.Component {\n    static propTypes = {\n           label: PropTypes.string\n       }\n       render() {\n           alert(this.props.label);\n           return null;\n       }\n   }\n   module.exports = TestSupport;\n</code></pre>\n<ul>\n<li>include the tool(s) in the requires section of plugins.js amd give it a name:</li>\n</ul>\n<pre class=\"prettyprint source\"><code>   module.exports = {\n       plugins: {\n           MapPlugin: require('../plugins/Map'),\n           ...\n       },\n       requires: {\n           ...\n           TestSupportLeaflet: require('../components/map/leaflet/TestSupport')\n       }\n   };\n</code></pre>\n<ul>\n<li>configure the Map plugin including the new tool and related options. You can configure the tool to be used for each mapping library, giving it a name and impl attributes, where:</li>\n</ul>\n<pre class=\"prettyprint source\"><code>   {\n     &quot;name&quot;: &quot;Map&quot;,\n     &quot;cfg&quot;: {\n       &quot;shouldLoadFont&quot;: true,\n       &quot;fonts&quot;: ['FontAwesome'],\n       &quot;tools&quot;: [&quot;measurement&quot;, &quot;locate&quot;, &quot;overview&quot;, &quot;scalebar&quot;, &quot;draw&quot;, {\n         &quot;leaflet&quot;: {\n           &quot;name&quot;: &quot;test&quot;,\n           &quot;impl&quot;: &quot;{context.TestSupportLeaflet}&quot;\n         }\n         }],\n       &quot;toolsOptions&quot;: {\n         &quot;test&quot;: {\n           &quot;label&quot;: &quot;Hello&quot;\n         }\n         ...\n       }\n     }\n   }\n</code></pre>\n<ul>\n<li>name is a unique name for the tool</li>\n<li>impl is a placeholder (“{context.ToolName}”) where ToolName is the name you gave the tool in plugins.js (TestSupportLeaflet in our example)</li>\n</ul>\n<p>You can also specify a list of fonts that have to be loaded before map rendering\nif the shouldLoadFont is true\nThis font pre-load list is required if you're using canvas based mapping libraries (e.g. OpenLayers) and you need to show markers with symbols (e.g. Annotations).\nFor each font you must specify the font name used in the <code>@font-face</code> inside the &quot;fonts&quot; array property. Note: the <code>@font-face</code> declaration must be present in css of the page, otherwise the font can not be loaded anyway.</p>\n<pre class=\"prettyprint source\"><code>{\n   &quot;name&quot;: &quot;Map&quot;,\n   &quot;cfg&quot;: {\n     &quot;shouldLoadFont&quot;: true,\n     &quot;fonts&quot;: ['FontAwesome']\n   }\n }\n</code></pre>\n<p>For more info on metadata visit <a href=\"https://github.com/bramstein/fontfaceobserver\">fontfaceobserver</a></p>\n<p>An additional feature to is limit the area and/or the minimum level of zoom in the localConfig.json file using &quot;mapConstraints&quot; property</p>\n<p>e.g</p>\n<pre class=\"prettyprint source lang-json\"><code>&quot;mapConstraints&quot;: {\n &quot;minZoom&quot;: 12, // minimal allowed zoom used by default\n &quot;crs&quot;:&quot;EPSG:3857&quot;, // crs of the restrictedExtent\n &quot;restrictedExtent&quot;:[ // limits the area accessible to the user to this bounding box\n   1060334.456371965,5228292.734706056,\n   1392988.403469052,5503466.036532691\n  ],\n  &quot;projectionsConstraints&quot;: {\n      &quot;EPSG:1234&quot;: { &quot;minZoom&quot;: 5 } // customization of minZoom for different projections\n  }\n }\n</code></pre>\n<p>With this setup you can configure a restricted area and/or a minimum zoom level for the whole application.\nIf you have different reference systems for your maps, for each of them you can even set a minimum zoom\nusing the entry <code>projectionsConstraints</code> as written in the example.</p>\n<pre class=\"prettyprint source\"><code></code></pre>","memberof":"plugins","kind":"class","name":"Map","properties":[{"type":{"names":["array"]},"description":"<p>static layers available in addition to those loaded from the configuration</p>","name":"additionalLayers"},{"type":{"names":["object"]},"description":"<p>map options grouped by map type</p>","name":"mapOptions"},{"type":{"names":["boolean"]},"description":"<p>if true all primitive 3d features will be tested against the terrain while if false they will be drawn on top of the terrain even if hidden by it (default true)</p>","name":"mapOptions.cesium.depthTestAgainstTerrain"},{"type":{"names":["boolean"]},"description":"<p>enable fog in the view (default false)</p>","name":"mapOptions.cesium.enableFog"},{"type":{"names":["boolean"]},"description":"<p>enable cesium navigation tool (default false)</p>","name":"mapOptions.cesium.navigationTools"},{"type":{"names":["boolean"]},"description":"<p>enable ground atmosphere of the globe (default false)</p>","name":"mapOptions.cesium.showGroundAtmosphere"},{"type":{"names":["boolean"]},"description":"<p>enable sky atmosphere of the globe (default true)</p>","name":"mapOptions.cesium.showSkyAtmosphere"},{"type":{"names":["object"]},"description":"<p>this object contains configuration specific for a map type. The mapType could be <code>openlayers</code>, <code>leaflet</code> or <code>cesium</code></p>","name":"mapOptions[mapType"}],"scope":"static","examples":["// Adding a layer to be used as a source for the elevation (shown in the MousePosition plugin configured with showElevation = true)\n{\n  \"cfg\": {\n    \"additionalLayers\": [{\n        \"type\": \"wms\",\n        \"url\": \"http://localhost:8090/geoserver/wms\",\n        \"visibility\": true,\n        \"title\": \"Elevation\",\n        \"name\": \"topp:elevation\",\n        \"format\": \"application/bil16\",\n        \"useForElevation\": true,\n        \"nodata\": -9999,\n        \"littleendian\": false,\n        \"hidden\": true\n     }]\n  }\n}"],"longname":"plugins.Map","$longname":"plugins.Map"},{"comment":"/**\n * Allows users to existing maps directly on the map.\n * @memberof plugins\n * @class\n * @name MapCatalog\n */","meta":{"filename":"MapCatalog.jsx","lineno":38,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Allows users to existing maps directly on the map.</p>","memberof":"plugins","kind":"class","name":"MapCatalog","scope":"static","longname":"plugins.MapCatalog","$longname":"plugins.MapCatalog"},{"comment":"/**\n * Wraps the MapViewer in a modal to allow to edit a map with the usual plugins.\n * Used with {@link #plugins.GeoStoryEditor|GeoStoryEditor}.\n * @name MapEditor\n * @class\n * @memberof plugins\n */","meta":{"filename":"MapEditor.jsx","lineno":21,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Wraps the MapViewer in a modal to allow to edit a map with the usual plugins.\nUsed with {@link #plugins.GeoStoryEditor|GeoStoryEditor}.</p>","name":"MapEditor","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.MapEditor","$longname":"plugins.MapEditor"},{"comment":"/**\n * Allows the user to export the current map in a file.\n * @memberof plugins\n * @class\n * @name MapExport\n * @property {string[]} cfg.enabledFormats the list of allowed formats. By default [\"mapstore2\", \"wmc\"]\n */","meta":{"filename":"MapExport.jsx","lineno":82,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Allows the user to export the current map in a file.</p>","memberof":"plugins","kind":"class","name":"MapExport","properties":[{"type":{"names":["Array.<string>"]},"description":"<p>the list of allowed formats. By default [&quot;mapstore2&quot;, &quot;wmc&quot;]</p>","name":"cfg.enabledFormats"}],"scope":"static","longname":"plugins.MapExport","$longname":"plugins.MapExport"},{"comment":"/**\n * Footer for MapViewer. Can contain several plugins.\n * @name MapFooter\n * @class\n * @memberof plugins\n */","meta":{"filename":"MapFooter.jsx","lineno":39,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Footer for MapViewer. Can contain several plugins.</p>","name":"MapFooter","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.MapFooter","$longname":"plugins.MapFooter"},{"comment":"/**\n * Allows the user to import a file into current map.\n * Supported formats are:\n * - **Maps** (current map will be overridden):\n *     - MapStore JSON format\n *     - WMC\n * - **Vector Data**:\n *     - shapefiles (must be contained in zip archives)\n *     - KML/KMZ\n *     - GeoJSON\n *     - GPX\n * @memberof plugins\n * @name MapImport\n * @class\n */","meta":{"filename":"MapImport.jsx","lineno":35,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Allows the user to import a file into current map.\nSupported formats are:</p>\n<ul>\n<li><strong>Maps</strong> (current map will be overridden):\n<ul>\n<li>MapStore JSON format</li>\n<li>WMC</li>\n</ul>\n</li>\n<li><strong>Vector Data</strong>:\n<ul>\n<li>shapefiles (must be contained in zip archives)</li>\n<li>KML/KMZ</li>\n<li>GeoJSON</li>\n<li>GPX</li>\n</ul>\n</li>\n</ul>","memberof":"plugins","name":"MapImport","kind":"class","scope":"static","longname":"plugins.MapImport","$longname":"plugins.MapImport"},{"comment":"/**\n * Loading spinner rendered in the {@link #plugins.Toolbar|Toolbar}\n * when layers are loading.\n * @name MapLoading\n * @class\n * @memberof plugins\n */","meta":{"filename":"MapLoading.jsx","lineno":25,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Loading spinner rendered in the {@link #plugins.Toolbar|Toolbar}\nwhen layers are loading.</p>","name":"MapLoading","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.MapLoading","$longname":"plugins.MapLoading"},{"comment":"/**\n * Plugin for maps resources browsing.\n * Can be rendered inside {@link #plugins.ContentTabs|ContentTabs} plugin\n * and adds an entry to the {@link #plugins.NavMenu|NavMenu}\n * @name Maps\n * @memberof plugins\n * @class\n * @prop {boolean} cfg.showCreateButton default true. Flag to show/hide the button \"create a new one\" when there is no dashboard yet.\n * @prop {boolean} cfg.shareToolEnabled default true. Flag to show/hide the \"share\" button on the item.\n * @prop {boolean} cfg.emptyView.iconHeight default \"200px\". Value to override default icon maximum height.\n */","meta":{"filename":"Maps.jsx","lineno":167,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for maps resources browsing.\nCan be rendered inside {@link #plugins.ContentTabs|ContentTabs} plugin\nand adds an entry to the {@link #plugins.NavMenu|NavMenu}</p>","name":"Maps","memberof":"plugins","kind":"class","properties":[{"type":{"names":["boolean"]},"description":"<p>default &quot;200px&quot;. Value to override default icon maximum height.</p>","name":"cfg.emptyView.iconHeight"},{"type":{"names":["boolean"]},"description":"<p>default true. Flag to show/hide the &quot;share&quot; button on the item.</p>","name":"cfg.shareToolEnabled"},{"type":{"names":["boolean"]},"description":"<p>default true. Flag to show/hide the button &quot;create a new one&quot; when there is no dashboard yet.</p>","name":"cfg.showCreateButton"}],"scope":"static","longname":"plugins.Maps","$longname":"plugins.Maps"},{"comment":"/**\n* MapSearch Plugin is a plugin that allows to make a search, reset its content, show a loading spinner while search is going on and can be\n* used for different purpose (maps, wfs services)\n* @name MapSearch\n* @memberof plugins\n* @class\n* @param {boolean} [splitTools=true] used to separate search and remove buttons in toolbar,\n<br>if true and without text => you see only search\n<br>if true and with text => search is substituted with remove\n<br>if false and without text => you see only search\n<br>if false and with text => you see both (search and remove)\n* @param {boolean} [showContextSearchOption=true] used to show context search option\n* @example\n* {\n*   \"name\": \"MapSearch\",\n*   \"cfg\": {\n*     \"splitTools\": true,\n *     \"showContextSearchOption\": false\n*   }\n* }\n*/","meta":{"filename":"MapSearch.jsx","lineno":23,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>MapSearch Plugin is a plugin that allows to make a search, reset its content, show a loading spinner while search is going on and can be\nused for different purpose (maps, wfs services)</p>","name":"MapSearch","memberof":"plugins","kind":"class","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>used to separate search and remove buttons in toolbar,\n<br>if true and without text =&gt; you see only search\n<br>if true and with text =&gt; search is substituted with remove\n<br>if false and without text =&gt; you see only search\n<br>if false and with text =&gt; you see both (search and remove)</p>","name":"splitTools"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>used to show context search option</p>","name":"showContextSearchOption"}],"examples":["{\n  \"name\": \"MapSearch\",\n  \"cfg\": {\n    \"splitTools\": true,\n    \"showContextSearchOption\": false\n  }\n}"],"scope":"static","longname":"plugins.MapSearch","$longname":"plugins.MapSearch"},{"comment":"/**\n * Provides a list of map templates available inside of a currently loaded context.\n * Allows to merge their contents with the current map configuration or to replace it entirely.\n * Map templates can be of various formats(currently supported are MapStore JSON, OGC WMC)\n * @memberof plugins\n * @class\n * @name MapTemplates\n * @prop {object[]} cfg.allowedTemplates: A list of objects with map template ids used to load templates when not in context\n */","meta":{"filename":"MapTemplates.jsx","lineno":30,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Provides a list of map templates available inside of a currently loaded context.\nAllows to merge their contents with the current map configuration or to replace it entirely.\nMap templates can be of various formats(currently supported are MapStore JSON, OGC WMC)</p>","memberof":"plugins","kind":"class","name":"MapTemplates","properties":[{"type":{"names":["Array.<object>"]},"description":"<p>A list of objects with map template ids used to load templates when not in context</p>","name":"cfg.allowedTemplates:"}],"scope":"static","longname":"plugins.MapTemplates","$longname":"plugins.MapTemplates"},{"comment":"/**\n * Measure plugin. Allows to show the tool to measure dinstances, areas and bearing.<br>\n * See [Application Configuration](https://mapstore.readthedocs.io/en/latest/developer-guide/local-config/) to understand how to configure lengthFormula, showLabel and uom\n * @class\n * @name Measure\n * @memberof plugins\n * @prop {boolean} showResults: shows the measure in the panel itself.\n * @prop {object} defaultOptions: these are the options used to initialize the state of the Measure plugin, defaulti is {}\n * @prop {boolean} defaultOptions.showCoordinateEditor: if true, tells the component to render the CoordinateEditor in a side panel otherwise it will render a modal without it, default is false\n * @prop {boolean} defaultOptions.showAddAsAnnotation: if true, shows the button addAsAnnotation in the toolbar\n * @prop {boolean} defaultOptions.showLengthAndBearingLabel: if true, shows the length and bearing data in the map as segment label and also in measurement panel\n * @prop {object} defaultOptions.trueBearing: allows measurement configuration of angular distance from true north to the object. ISO Spec (https://www.sis.se/api/document/preview/905247/)\n * @prop {boolean} defaultOptions.trueBearing.measureTrueBearing: if true, displays the measurement in true bearing (000°).\n * @prop {integer} defaultOptions.trueBearing.fractionDigits: Value denotes the fractional digit to used for the representation of true bearing.\n * For example this enables measurement in true bearing with fractional digits of 2 (000.00° - 359.99°)\n * ```\n * \"trueBearing\": {\n *  \"measureTrueBearing\": true,\n *  \"fractionDigits\": 2\n *  }\n * ```\n * @prop {boolean} defaultOptions.geomType: geomType for the measure tool, can be \"LineString\" or \"Bearing\" or \"Polygon\", default is \"LineString\"\n * @prop {boolean} defaultOptions.format: \"decimal\" of \"aeronautical\" format used for coordinate editor, default is \"decimal\"\n * @prop {boolean} defaultOptions.showLabel: determines, whether to show measurement labels(like area for polygons)\n * @prop {boolean} defaultOptions.showSegmentLengths: determines, whether to show segment labels(of line segments for LineString, for example)\n  */","meta":{"filename":"Measure.jsx","lineno":69,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Measure plugin. Allows to show the tool to measure dinstances, areas and bearing.<br>\nSee <a href=\"https://mapstore.readthedocs.io/en/latest/developer-guide/local-config/\">Application Configuration</a> to understand how to configure lengthFormula, showLabel and uom</p>","kind":"class","name":"Measure","memberof":"plugins","properties":[{"type":{"names":["object"]},"description":"<p>these are the options used to initialize the state of the Measure plugin, defaulti is {}</p>","name":"defaultOptions:"},{"type":{"names":["boolean"]},"description":"<p>&quot;decimal&quot; of &quot;aeronautical&quot; format used for coordinate editor, default is &quot;decimal&quot;</p>","name":"defaultOptions.format:"},{"type":{"names":["boolean"]},"description":"<p>geomType for the measure tool, can be &quot;LineString&quot; or &quot;Bearing&quot; or &quot;Polygon&quot;, default is &quot;LineString&quot;</p>","name":"defaultOptions.geomType:"},{"type":{"names":["boolean"]},"description":"<p>if true, shows the button addAsAnnotation in the toolbar</p>","name":"defaultOptions.showAddAsAnnotation:"},{"type":{"names":["boolean"]},"description":"<p>if true, tells the component to render the CoordinateEditor in a side panel otherwise it will render a modal without it, default is false</p>","name":"defaultOptions.showCoordinateEditor:"},{"type":{"names":["boolean"]},"description":"<p>determines, whether to show measurement labels(like area for polygons)</p>","name":"defaultOptions.showLabel:"},{"type":{"names":["boolean"]},"description":"<p>if true, shows the length and bearing data in the map as segment label and also in measurement panel</p>","name":"defaultOptions.showLengthAndBearingLabel:"},{"type":{"names":["boolean"]},"description":"<p>determines, whether to show segment labels(of line segments for LineString, for example)</p>","name":"defaultOptions.showSegmentLengths:"},{"type":{"names":["object"]},"description":"<p>allows measurement configuration of angular distance from true north to the object. ISO Spec (https://www.sis.se/api/document/preview/905247/)</p>","name":"defaultOptions.trueBearing:"},{"type":{"names":["integer"]},"description":"<p>Value denotes the fractional digit to used for the representation of true bearing.\nFor example this enables measurement in true bearing with fractional digits of 2 (000.00° - 359.99°)</p>\n<pre class=\"prettyprint source\"><code>&quot;trueBearing&quot;: {\n &quot;measureTrueBearing&quot;: true,\n &quot;fractionDigits&quot;: 2\n }\n</code></pre>","name":"defaultOptions.trueBearing.fractionDigits:"},{"type":{"names":["boolean"]},"description":"<p>if true, displays the measurement in true bearing (000°).</p>","name":"defaultOptions.trueBearing.measureTrueBearing:"},{"type":{"names":["boolean"]},"description":"<p>shows the measure in the panel itself.</p>","name":"showResults:"}],"scope":"static","longname":"plugins.Measure","$longname":"plugins.Measure"},{"comment":"/**\n * MeasurePanel plugin. Shows the measure tool in the TOC. This is an old version of measure tool that will be removed soon.\n * @class\n * @name MeasurePanel\n * @memberof plugins\n * @deprecated since version 2017.03.01\n * @prop {boolean} showResults shows the measure in the panel itself. It can be disabled if you are using a plugin like MeasureResults to show the results\n */","meta":{"filename":"MeasurePanel.jsx","lineno":25,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>MeasurePanel plugin. Shows the measure tool in the TOC. This is an old version of measure tool that will be removed soon.</p>","kind":"class","name":"MeasurePanel","memberof":"plugins","deprecated":"since version 2017.03.01","properties":[{"type":{"names":["boolean"]},"description":"<p>shows the measure in the panel itself. It can be disabled if you are using a plugin like MeasureResults to show the results</p>","name":"showResults"}],"scope":"static","longname":"plugins.MeasurePanel","$longname":"plugins.MeasurePanel"},{"comment":"/**\n * MeasureResults plugin. Shows the measure results. This is an old version of measure tool that will be removed soon.\n * It should be used with the MeasurePanel plugin\n * @class\n * @name MeasureResults\n * @memberof plugins\n * @deprecated since version 2017.03.01\n */","meta":{"filename":"MeasureResults.jsx","lineno":49,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>MeasureResults plugin. Shows the measure results. This is an old version of measure tool that will be removed soon.\nIt should be used with the MeasurePanel plugin</p>","kind":"class","name":"MeasureResults","memberof":"plugins","deprecated":"since version 2017.03.01","scope":"static","longname":"plugins.MeasureResults","$longname":"plugins.MeasureResults"},{"comment":"/**\n * Renders a modal to browse and select media files (video, image, map... ).\n * Used by {@link #plugins.GeoStoryEditor|GeoStoryEditor}\n * @name MediaEditor\n * @class\n * @memberof plugins\n */","meta":{"filename":"MediaEditor.jsx","lineno":27,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Renders a modal to browse and select media files (video, image, map... ).\nUsed by {@link #plugins.GeoStoryEditor|GeoStoryEditor}</p>","name":"MediaEditor","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.MediaEditor","$longname":"plugins.MediaEditor"},{"comment":"/**\n * MetadataExplorer (Catalog) plugin. Shows the catalogs results (CSW, WMS, WMTS, TMS and WFS).\n * Some useful flags in `localConfig.json`:\n * - `noCreditsFromCatalog`: avoid add credits (attribution) from catalog\n *\n * @class\n * @name MetadataExplorer\n * @memberof plugins\n * @prop {string} cfg.hideThumbnail shows/hides thumbnail\n * @prop {object[]} cfg.serviceTypes Service types available to add a new catalog. default: `[{ name: \"csw\", label: \"CSW\" }, { name: \"wms\", label: \"WMS\" }, { name: \"wmts\", label: \"WMTS\" }, { name: \"tms\", label: \"TMS\", allowedProviders },{ name: \"wfs\", label: \"WFS\" }]`.\n * `allowedProviders` is a whitelist of tileProviders from ConfigProvider.js. you can set a global variable allowedProviders in localConfig.json to set it up globally. You can configure it to \"ALL\" to get all the list (at your own risk, some services could change or not be available anymore)\n * @prop {object} cfg.hideIdentifier shows/hides identifier\n * @prop {boolean} cfg.hideExpand shows/hides full description button\n * @prop {number} cfg.zoomToLayer enable/disable zoom to layer when added\n * @prop {number} cfg.autoSetVisibilityLimits if true, allows fetching and setting visibility limits of the layer from capabilities on layer add (Note: The default configuration value is applied only on new catalog service (WMS/CSW))\n * @prop {number} [delayAutoSearch] time in ms passed after a search is triggered by filter changes, default 1000\n */","meta":{"filename":"MetadataExplorer.jsx","lineno":277,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>MetadataExplorer (Catalog) plugin. Shows the catalogs results (CSW, WMS, WMTS, TMS and WFS).\nSome useful flags in <code>localConfig.json</code>:</p>\n<ul>\n<li><code>noCreditsFromCatalog</code>: avoid add credits (attribution) from catalog</li>\n</ul>","kind":"class","name":"MetadataExplorer","memberof":"plugins","properties":[{"type":{"names":["number"]},"description":"<p>if true, allows fetching and setting visibility limits of the layer from capabilities on layer add (Note: The default configuration value is applied only on new catalog service (WMS/CSW))</p>","name":"cfg.autoSetVisibilityLimits"},{"type":{"names":["boolean"]},"description":"<p>shows/hides full description button</p>","name":"cfg.hideExpand"},{"type":{"names":["object"]},"description":"<p>shows/hides identifier</p>","name":"cfg.hideIdentifier"},{"type":{"names":["string"]},"description":"<p>shows/hides thumbnail</p>","name":"cfg.hideThumbnail"},{"type":{"names":["Array.<object>"]},"description":"<p>Service types available to add a new catalog. default: <code>[{ name: &quot;csw&quot;, label: &quot;CSW&quot; }, { name: &quot;wms&quot;, label: &quot;WMS&quot; }, { name: &quot;wmts&quot;, label: &quot;WMTS&quot; }, { name: &quot;tms&quot;, label: &quot;TMS&quot;, allowedProviders },{ name: &quot;wfs&quot;, label: &quot;WFS&quot; }]</code>.\n<code>allowedProviders</code> is a whitelist of tileProviders from ConfigProvider.js. you can set a global variable allowedProviders in localConfig.json to set it up globally. You can configure it to &quot;ALL&quot; to get all the list (at your own risk, some services could change or not be available anymore)</p>","name":"cfg.serviceTypes"},{"type":{"names":["number"]},"description":"<p>enable/disable zoom to layer when added</p>","name":"cfg.zoomToLayer"},{"type":{"names":["number"]},"optional":true,"description":"<p>time in ms passed after a search is triggered by filter changes, default 1000</p>","name":"delayAutoSearch"}],"scope":"static","longname":"plugins.MetadataExplorer","$longname":"plugins.MetadataExplorer"},{"comment":"/**\n  * MousePosition Plugin is a plugin that shows the coordinate of the mouse position in a selected crs.\n  * it gets displayed into the mapFooter plugin\n  * @name MousePosition\n  * @memberof plugins\n  * @class\n  * @prop {boolean} cfg.showElevation shows elevation in addition to planar coordinates (requires a WMS layer with useElevation: true to be configured in the map)\n  * @prop {function} cfg.elevationTemplate custom template to show the elevation if showElevation is true (default template shows the elevation number with no formatting)\n  * @prop {object[]} projectionDefs list of additional project definitions\n  * @prop {string[]} cfg.filterAllowedCRS list of allowed crs in the combobox list to used as filter for the one of retrieved proj4.defs()\n  * @prop {object} cfg.additionalCRS additional crs added to the list. The label param is used after in the combobox.\n  * @example\n  * // If you want to add some crs you need to provide a definition and adding it in the additionalCRS property\n  * // Put the following lines at the first level of the localconfig\n  * {\n  *   \"projectionDefs\": [{\n  *     \"code\": \"EPSG:3003\",\n  *     \"def\": \"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=1500000 +y_0=0 +ellps=intl+towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +units=m +no_defs\",\n  *     \"extent\": [1241482.0019, 973563.1609, 1830078.9331, 5215189.0853],\n  *     \"worldExtent\": [6.6500, 8.8000, 12.0000, 47.0500]\n  *   }]\n  * }\n  * @example\n  * // And configure the mouse position plugin as below:\n  * {\n  *   \"cfg\": {\n  *     \"additionalCRS\": {\n  *       \"EPSG:3003\": { \"label\": \"EPSG:3003\" }\n  *     },\n  *     \"filterAllowedCRS\": [\"EPSG:4326\", \"EPSG:3857\"]\n  *   }\n  * }\n  * @example\n  * // to show elevation and (optionally) use a custom template configure the plugin this way:\n  * {\n  *   \"cfg\": {\n  *     ...\n  *     \"showElevation\": true,\n  *     \"elevationTemplate\": \"{(function(elevation) {return 'myelev: ' + (elevation || 0);})}\",\n  *     ...\n  *   }\n  * }\n*/","meta":{"filename":"MousePosition.jsx","lineno":98,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>MousePosition Plugin is a plugin that shows the coordinate of the mouse position in a selected crs.\nit gets displayed into the mapFooter plugin</p>","name":"MousePosition","memberof":"plugins","kind":"class","properties":[{"type":{"names":["object"]},"description":"<p>additional crs added to the list. The label param is used after in the combobox.</p>","name":"cfg.additionalCRS"},{"type":{"names":["function"]},"description":"<p>custom template to show the elevation if showElevation is true (default template shows the elevation number with no formatting)</p>","name":"cfg.elevationTemplate"},{"type":{"names":["Array.<string>"]},"description":"<p>list of allowed crs in the combobox list to used as filter for the one of retrieved proj4.defs()</p>","name":"cfg.filterAllowedCRS"},{"type":{"names":["boolean"]},"description":"<p>shows elevation in addition to planar coordinates (requires a WMS layer with useElevation: true to be configured in the map)</p>","name":"cfg.showElevation"},{"type":{"names":["Array.<object>"]},"description":"<p>list of additional project definitions</p>","name":"projectionDefs"}],"examples":["// If you want to add some crs you need to provide a definition and adding it in the additionalCRS property\n// Put the following lines at the first level of the localconfig\n{\n  \"projectionDefs\": [{\n    \"code\": \"EPSG:3003\",\n    \"def\": \"+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=1500000 +y_0=0 +ellps=intl+towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +units=m +no_defs\",\n    \"extent\": [1241482.0019, 973563.1609, 1830078.9331, 5215189.0853],\n    \"worldExtent\": [6.6500, 8.8000, 12.0000, 47.0500]\n  }]\n}","// And configure the mouse position plugin as below:\n{\n  \"cfg\": {\n    \"additionalCRS\": {\n      \"EPSG:3003\": { \"label\": \"EPSG:3003\" }\n    },\n    \"filterAllowedCRS\": [\"EPSG:4326\", \"EPSG:3857\"]\n  }\n}","// to show elevation and (optionally) use a custom template configure the plugin this way:\n{\n  \"cfg\": {\n    ...\n    \"showElevation\": true,\n    \"elevationTemplate\": \"{(function(elevation) {return 'myelev: ' + (elevation || 0);})}\",\n    ...\n  }\n}"],"scope":"static","longname":"plugins.MousePosition","$longname":"plugins.MousePosition"},{"comment":"/**\n * Plugin for navigation menu. It renders some items passed as props (or injected by other plugins)\n * An item should contain at least the `position` property to sort items correctly in the menu, one of this properties to be rendered:\n *\n *  - `href`: a link to open\n *  - `linkId`: the Id of an item in the page to scroll to.\n *  - `tool`:  a function that returns the `item` itself. The returned object should contain `href` or `linkId` (useful if you want to inject some components instead of simply configure statically the item)\n *\n * In case of `href`, or `linkId`, the item can also to contain:\n *  - `label`: a node (react element or string, for instance) to render\n *  - `glyph` icon to use when the window's width is less then `minWidth`\n *  - `labelComponent` react element to render as navItem label, label will be visible when screen size is bigger\n *  - `iconComponent` react element to render as navItem on small screen, it should contain only icon\n *\n * Examples:\n * ```\n * {\n *  tool: () => {\n *               position: 0,\n *               label: props.label || 'GeoSolutions',\n *               href: props.href || 'https://www.geo-solutions.it/',\n *               img: props.src && <img className=\"customer-logo\" src={props.src} height=\"30\" /> || <img className=\"customer-logo\" src={src} height=\"30\" />,\n *               logo: true\n *           }\n * }\n * ```\n *\n * @memberof plugins\n * @name NavMenu\n * @class\n * @prop {object[]} items items to render. Note: they can be injected also by the plugin container\n * @prop {number} [minWidth=768] min width to switch between icon and label visualization.\n *\n */","meta":{"filename":"NavMenu.jsx","lineno":21,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/product/plugins","code":{}},"description":"<p>Plugin for navigation menu. It renders some items passed as props (or injected by other plugins)\nAn item should contain at least the <code>position</code> property to sort items correctly in the menu, one of this properties to be rendered:</p>\n<ul>\n<li><code>href</code>: a link to open</li>\n<li><code>linkId</code>: the Id of an item in the page to scroll to.</li>\n<li><code>tool</code>:  a function that returns the <code>item</code> itself. The returned object should contain <code>href</code> or <code>linkId</code> (useful if you want to inject some components instead of simply configure statically the item)</li>\n</ul>\n<p>In case of <code>href</code>, or <code>linkId</code>, the item can also to contain:</p>\n<ul>\n<li><code>label</code>: a node (react element or string, for instance) to render</li>\n<li><code>glyph</code> icon to use when the window's width is less then <code>minWidth</code></li>\n<li><code>labelComponent</code> react element to render as navItem label, label will be visible when screen size is bigger</li>\n<li><code>iconComponent</code> react element to render as navItem on small screen, it should contain only icon</li>\n</ul>\n<p>Examples:</p>\n<pre class=\"prettyprint source\"><code>{\n tool: () => {\n              position: 0,\n              label: props.label || 'GeoSolutions',\n              href: props.href || 'https://www.geo-solutions.it/',\n              img: props.src && &lt;img className=&quot;customer-logo&quot; src={props.src} height=&quot;30&quot; /> || &lt;img className=&quot;customer-logo&quot; src={src} height=&quot;30&quot; />,\n              logo: true\n          }\n}\n</code></pre>","memberof":"plugins","name":"NavMenu","kind":"class","properties":[{"type":{"names":["Array.<object>"]},"description":"<p>items to render. Note: they can be injected also by the plugin container</p>","name":"items"},{"type":{"names":["number"]},"optional":true,"defaultvalue":768,"description":"<p>min width to switch between icon and label visualization.</p>","name":"minWidth"}],"scope":"static","longname":"plugins.NavMenu","$longname":"plugins.NavMenu"},{"comment":"/**\n  * Notifications Plugin. Provides support to show notifications\n  * @class  Notifications\n  * @memberof plugins\n  * @static\n  * @example\n  * {name: \"Notifications\"}\n  *\n  */","meta":{"filename":"Notifications.jsx","lineno":15,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Notifications Plugin. Provides support to show notifications</p>","kind":"class","name":"Notifications","memberof":"plugins","scope":"static","examples":["{name: \"Notifications\"}"],"longname":"plugins.Notifications","$longname":"plugins.Notifications"},{"comment":"/**\n * Generic bar that can contains other plugins.\n * used by {@link #plugins.SearchBar|SearchBar}, {@link #plugins.BurgerMenu|BurgerMenu},\n * {@link #plugins.Login|Login} and many other, in different pages.\n * @name OmniBar\n * @class\n * @memberof plugins\n */","meta":{"filename":"OmniBar.jsx","lineno":68,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Generic bar that can contains other plugins.\nused by {@link #plugins.SearchBar|SearchBar}, {@link #plugins.BurgerMenu|BurgerMenu},\n{@link #plugins.Login|Login} and many other, in different pages.</p>","name":"OmniBar","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.OmniBar","$longname":"plugins.OmniBar"},{"comment":"/**\n  * Playback Plugin. Shows the playback controls for {@link #plugins.Timeline|Timeline}\n  * @class  Playback\n  * @memberof plugins\n  * @static\n  */","meta":{"filename":"Playback.jsx","lineno":45,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Playback Plugin. Shows the playback controls for {@link #plugins.Timeline|Timeline}</p>","kind":"class","name":"Playback","memberof":"plugins","scope":"static","longname":"plugins.Playback","$longname":"plugins.Playback"},{"comment":"/**\n * Print plugin. This plugin allows to print current map view. **note**: this plugin requires the  **printing module** to work.\n * Please look at mapstore documentation about how to add and configure the printing module in your installation.\n *\n * It also works as a container for other plugins, usable to customize the UI of the parameters dialog.\n *\n * The UI supports different targets for adding new plugins:\n *  - `left-panel` (controls/widgets to be added to the left column, before the accordion)\n *  - `left-panel-accordion` (controls/widgets to be added to the left column, as subpanels of the accordion)\n *  - `right-panel` (controls/widgets to be added to the right column, before the buttons bar)\n *  - `buttons` (controls/widgets to be added to the right column, in the buttons bar)\n *  - `preview-panel` (controls/widgets to be added to the printed pdf preview panel)\n *\n * In addition it is also possibile to use specific targets that override a standard widget, to replace it\n * with a custom one. They are (in order, from left to right and top to bottom in the UI):\n *  - `name` (`left-panel`, `position`: `1`)\n *  - `description` (`left-panel`, `position`: `2`)\n *  - `outputFormat` (`left-panel`, `position`: `3`)\n *  - `projection` (`left-panel`, `position`: `4`)\n *  - `layout` (`left-panel-accordion`, `position`: `1`)\n *  - `legend-options` (`left-panel-accordion`, `position`: `2`)\n *  - `resolution` (`right-panel`, `position`: `1`)\n *  - `map-preview` (`right-panel`, `position`: `2`)\n *  - `default-background-ignore` (`right-panel`, `position`: `3`)\n *  - `submit` (`buttons`, `position`: `1`)\n *  - `print-preview` (`preview-panel`, `position`: `1`)\n *\n * To remove a widget, you have to include a Null plugin with the desired target.\n * You can use the position to sort existing and custom items.\n *\n * Standard widgets can be configured by providing an options object as a configuration property\n * of this (Print) plugin. The options object of a widget is named `<widget_id>Options`\n * (e.g. `outputFormatOptions`).\n *\n * You can customize Print plugin by creating one custom plugin (or more) that modifies the existing\n * components with your own ones. You can configure this plugin in `localConfig.json` as usual.\n *\n * It delegates to a printingService the creation of the final print. The default printingService\n * implements a mapfish-print v2 compatible workflow. It is possible to override the printingService to\n * use, via a specific property (printingService).\n *\n * It is also possible to customize the payload of the spec sent to the mapfish-print engine, by\n * adding new transformers to the default chain.\n *\n * Each transformer is a function that can add / replace / remove fragments from the JSON payload.\n *\n * @class Print\n * @memberof plugins\n * @static\n *\n * @prop {boolean} cfg.useFixedScales if true the printing scale is constrained to the nearest scale of the ones configured\n * in the config.yml file, if false the current scale is used\n * @prop {object} cfg.overrideOptions overrides print options, this will override options created from current state of map\n * @prop {boolean} cfg.overrideOptions.geodetic prints in geodetic mode: in geodetic mode scale calculation is more precise on\n * printed maps, but the preview is not accurate\n * @prop {string} cfg.overrideOptions.outputFilename name of output file\n * @prop {object} cfg.mapPreviewOptions options for the map preview tool\n * @prop {string[]} cfg.ignoreLayers list of layer types to ignore in preview and when printing, default [\"google\", \"bing\"]\n * @prop {boolean} cfg.mapPreviewOptions.enableScalebox if true a combobox to select the printing scale is shown over the preview\n * this is particularly useful if useFixedScales is also true, to show the real printing scales\n * @prop {boolean} cfg.mapPreviewOptions.enableRefresh true by default, if false the preview is not updated if the user pans or zooms the main map\n * @prop {object} cfg.outputFormatOptions options for the output formats\n * @prop {object[]} cfg.outputFormatOptions.allowedFormats array of allowed formats, e.g. [{\"name\": \"PDF\", \"value\": \"pdf\"}]\n * @prop {object} cfg.projectionOptions options for the projections\n * @prop {object[]} cfg.projectionOptions.projections array of available projections, e.g. [{\"name\": \"EPSG:3857\", \"value\": \"EPSG:3857\"}]\n * @prop {object} cfg.overlayLayersOptions options for overlay layers\n * @prop {boolean} cfg.overlayLayersOptions.enabled if true a checkbox will be shown to exclude or include overlay layers to the print\n *\n * @example\n * // printing in geodetic mode\n * {\n *   \"name\": \"Print\",\n *   \"cfg\": {\n *       \"overrideOptions\": {\n *          \"geodetic\": true\n *       }\n *    }\n * }\n *\n * @example\n * // Using a list of fixed scales with scale selector\n * {\n *   \"name\": \"Print\",\n *   \"cfg\": {\n *       \"ignoreLayers\": [\"google\", \"bing\"],\n *       \"useFixedScales\": true,\n *       \"mapPreviewOptions\": {\n *          \"enableScalebox\": true\n *       }\n *    }\n * }\n *\n * @example\n * // restrict allowed output formats\n * {\n *   \"name\": \"Print\",\n *   \"cfg\": {\n *       \"outputFormatOptions\": {\n *          \"allowedFormats\": [{\"name\": \"PDF\", \"value\": \"pdf\"}, {\"name\": \"PNG\", \"value\": \"png\"}]\n *       }\n *    }\n * }\n *\n * @example\n * // enable custom projections for printing\n * \"projectionDefs\": [{\n *    \"code\": \"EPSG:23032\",\n *    \"def\": \"+proj=utm +zone=32 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs\",\n *    \"extent\": [-1206118.71, 4021309.92, 1295389.0, 8051813.28],\n *    \"worldExtent\": [-9.56, 34.88, 31.59, 71.21]\n * }]\n * ...\n * {\n *   \"name\": \"Print\",\n *   \"cfg\": {\n *       \"projectionOptions\": {\n *          \"projections\": [{\"name\": \"UTM32N\", \"value\": \"EPSG:23032\"}, {\"name\": \"EPSG:3857\", \"value\": \"EPSG:3857\"}, {\"name\": \"EPSG:4326\", \"value\": \"EPSG:4326\"}]\n *       }\n *    }\n * }\n *\n * @example\n * // customize the printing UI via plugin(s)\n * import React from \"react\";\n * import {createPlugin} from \"../../utils/PluginsUtils\";\n * import { connect } from \"react-redux\";\n *\n * const MyCustomPanel = () => <div>Hello, I am a custom component</div>;\n *\n * const MyCustomLayout = ({sheet}) => <div>Hello, I am a custom layout, the sheet is {sheet}</div>;\n * const MyConnectedCustomLayout = connect((state) => ({sheet: state.print?.spec.sheet}))(MyCustomLayout);\n *\n * export default createPlugin('PrintCustomizations', {\n *     component: () => null,\n *     containers: {\n *         Print: [\n *             // this entry add a panel between title and description\n *             {\n *                 target: \"left-panel\",\n *                 position: 1.5,\n *                 component: MyCustomPanel\n *             },\n *             // this entry replaces the layout panel\n *             {\n *                 target: \"layout\",\n *                 component: MyConnectedCustomLayout,\n *                 title: \"MyLayout\"\n *             },\n *             // To remove one component, simply create a component that returns null.\n *             {\n *                 target: \"map-preview\",\n *                 component: () => null\n *             }\n *         ]\n *     }\n * });\n * @example\n * // adds a transformer to the printingService chain\n * import {addTransformer} from \"@js/utils/PrintUtils\";\n *\n * addTransformer(\"mytranform\", (state, spec) => Promise.resolve({\n *      ...spec,\n *      custom: \"some value\"\n * }));\n */","meta":{"filename":"Print.jsx","lineno":37,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Print plugin. This plugin allows to print current map view. <strong>note</strong>: this plugin requires the  <strong>printing module</strong> to work.\nPlease look at mapstore documentation about how to add and configure the printing module in your installation.</p>\n<p>It also works as a container for other plugins, usable to customize the UI of the parameters dialog.</p>\n<p>The UI supports different targets for adding new plugins:</p>\n<ul>\n<li><code>left-panel</code> (controls/widgets to be added to the left column, before the accordion)</li>\n<li><code>left-panel-accordion</code> (controls/widgets to be added to the left column, as subpanels of the accordion)</li>\n<li><code>right-panel</code> (controls/widgets to be added to the right column, before the buttons bar)</li>\n<li><code>buttons</code> (controls/widgets to be added to the right column, in the buttons bar)</li>\n<li><code>preview-panel</code> (controls/widgets to be added to the printed pdf preview panel)</li>\n</ul>\n<p>In addition it is also possibile to use specific targets that override a standard widget, to replace it\nwith a custom one. They are (in order, from left to right and top to bottom in the UI):</p>\n<ul>\n<li><code>name</code> (<code>left-panel</code>, <code>position</code>: <code>1</code>)</li>\n<li><code>description</code> (<code>left-panel</code>, <code>position</code>: <code>2</code>)</li>\n<li><code>outputFormat</code> (<code>left-panel</code>, <code>position</code>: <code>3</code>)</li>\n<li><code>projection</code> (<code>left-panel</code>, <code>position</code>: <code>4</code>)</li>\n<li><code>layout</code> (<code>left-panel-accordion</code>, <code>position</code>: <code>1</code>)</li>\n<li><code>legend-options</code> (<code>left-panel-accordion</code>, <code>position</code>: <code>2</code>)</li>\n<li><code>resolution</code> (<code>right-panel</code>, <code>position</code>: <code>1</code>)</li>\n<li><code>map-preview</code> (<code>right-panel</code>, <code>position</code>: <code>2</code>)</li>\n<li><code>default-background-ignore</code> (<code>right-panel</code>, <code>position</code>: <code>3</code>)</li>\n<li><code>submit</code> (<code>buttons</code>, <code>position</code>: <code>1</code>)</li>\n<li><code>print-preview</code> (<code>preview-panel</code>, <code>position</code>: <code>1</code>)</li>\n</ul>\n<p>To remove a widget, you have to include a Null plugin with the desired target.\nYou can use the position to sort existing and custom items.</p>\n<p>Standard widgets can be configured by providing an options object as a configuration property\nof this (Print) plugin. The options object of a widget is named <code>&lt;widget_id&gt;Options</code>\n(e.g. <code>outputFormatOptions</code>).</p>\n<p>You can customize Print plugin by creating one custom plugin (or more) that modifies the existing\ncomponents with your own ones. You can configure this plugin in <code>localConfig.json</code> as usual.</p>\n<p>It delegates to a printingService the creation of the final print. The default printingService\nimplements a mapfish-print v2 compatible workflow. It is possible to override the printingService to\nuse, via a specific property (printingService).</p>\n<p>It is also possible to customize the payload of the spec sent to the mapfish-print engine, by\nadding new transformers to the default chain.</p>\n<p>Each transformer is a function that can add / replace / remove fragments from the JSON payload.</p>","kind":"class","name":"Print","memberof":"plugins","scope":"static","properties":[{"type":{"names":["Array.<string>"]},"description":"<p>list of layer types to ignore in preview and when printing, default [&quot;google&quot;, &quot;bing&quot;]</p>","name":"cfg.ignoreLayers"},{"type":{"names":["object"]},"description":"<p>options for the map preview tool</p>","name":"cfg.mapPreviewOptions"},{"type":{"names":["boolean"]},"description":"<p>true by default, if false the preview is not updated if the user pans or zooms the main map</p>","name":"cfg.mapPreviewOptions.enableRefresh"},{"type":{"names":["boolean"]},"description":"<p>if true a combobox to select the printing scale is shown over the preview\nthis is particularly useful if useFixedScales is also true, to show the real printing scales</p>","name":"cfg.mapPreviewOptions.enableScalebox"},{"type":{"names":["object"]},"description":"<p>options for the output formats</p>","name":"cfg.outputFormatOptions"},{"type":{"names":["Array.<object>"]},"description":"<p>array of allowed formats, e.g. [{&quot;name&quot;: &quot;PDF&quot;, &quot;value&quot;: &quot;pdf&quot;}]</p>","name":"cfg.outputFormatOptions.allowedFormats"},{"type":{"names":["object"]},"description":"<p>options for overlay layers</p>","name":"cfg.overlayLayersOptions"},{"type":{"names":["boolean"]},"description":"<p>if true a checkbox will be shown to exclude or include overlay layers to the print</p>","name":"cfg.overlayLayersOptions.enabled"},{"type":{"names":["object"]},"description":"<p>overrides print options, this will override options created from current state of map</p>","name":"cfg.overrideOptions"},{"type":{"names":["boolean"]},"description":"<p>prints in geodetic mode: in geodetic mode scale calculation is more precise on\nprinted maps, but the preview is not accurate</p>","name":"cfg.overrideOptions.geodetic"},{"type":{"names":["string"]},"description":"<p>name of output file</p>","name":"cfg.overrideOptions.outputFilename"},{"type":{"names":["object"]},"description":"<p>options for the projections</p>","name":"cfg.projectionOptions"},{"type":{"names":["Array.<object>"]},"description":"<p>array of available projections, e.g. [{&quot;name&quot;: &quot;EPSG:3857&quot;, &quot;value&quot;: &quot;EPSG:3857&quot;}]</p>","name":"cfg.projectionOptions.projections"},{"type":{"names":["boolean"]},"description":"<p>if true the printing scale is constrained to the nearest scale of the ones configured\nin the config.yml file, if false the current scale is used</p>","name":"cfg.useFixedScales"}],"examples":["// printing in geodetic mode\n{\n  \"name\": \"Print\",\n  \"cfg\": {\n      \"overrideOptions\": {\n         \"geodetic\": true\n      }\n   }\n}","// Using a list of fixed scales with scale selector\n{\n  \"name\": \"Print\",\n  \"cfg\": {\n      \"ignoreLayers\": [\"google\", \"bing\"],\n      \"useFixedScales\": true,\n      \"mapPreviewOptions\": {\n         \"enableScalebox\": true\n      }\n   }\n}","// restrict allowed output formats\n{\n  \"name\": \"Print\",\n  \"cfg\": {\n      \"outputFormatOptions\": {\n         \"allowedFormats\": [{\"name\": \"PDF\", \"value\": \"pdf\"}, {\"name\": \"PNG\", \"value\": \"png\"}]\n      }\n   }\n}","// enable custom projections for printing\n\"projectionDefs\": [{\n   \"code\": \"EPSG:23032\",\n   \"def\": \"+proj=utm +zone=32 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs\",\n   \"extent\": [-1206118.71, 4021309.92, 1295389.0, 8051813.28],\n   \"worldExtent\": [-9.56, 34.88, 31.59, 71.21]\n}]\n...\n{\n  \"name\": \"Print\",\n  \"cfg\": {\n      \"projectionOptions\": {\n         \"projections\": [{\"name\": \"UTM32N\", \"value\": \"EPSG:23032\"}, {\"name\": \"EPSG:3857\", \"value\": \"EPSG:3857\"}, {\"name\": \"EPSG:4326\", \"value\": \"EPSG:4326\"}]\n      }\n   }\n}","// customize the printing UI via plugin(s)\nimport React from \"react\";\nimport {createPlugin} from \"../../utils/PluginsUtils\";\nimport { connect } from \"react-redux\";\n\nconst MyCustomPanel = () => <div>Hello, I am a custom component</div>;\n\nconst MyCustomLayout = ({sheet}) => <div>Hello, I am a custom layout, the sheet is {sheet}</div>;\nconst MyConnectedCustomLayout = connect((state) => ({sheet: state.print?.spec.sheet}))(MyCustomLayout);\n\nexport default createPlugin('PrintCustomizations', {\n    component: () => null,\n    containers: {\n        Print: [\n            // this entry add a panel between title and description\n            {\n                target: \"left-panel\",\n                position: 1.5,\n                component: MyCustomPanel\n            },\n            // this entry replaces the layout panel\n            {\n                target: \"layout\",\n                component: MyConnectedCustomLayout,\n                title: \"MyLayout\"\n            },\n            // To remove one component, simply create a component that returns null.\n            {\n                target: \"map-preview\",\n                component: () => null\n            }\n        ]\n    }\n});","// adds a transformer to the printingService chain\nimport {addTransformer} from \"@js/utils/PrintUtils\";\n\naddTransformer(\"mytranform\", (state, spec) => Promise.resolve({\n     ...spec,\n     custom: \"some value\"\n}));"],"longname":"plugins.Print","$longname":"plugins.Print"},{"comment":"/**\n * @class\n * @classdesc\n * QueryPanelPlugin allow to query a layer in different ways, using attributes of that layer, spatial filters\n * @name QueryPanel\n * @memberof plugins\n * @prop {boolean} cfg.activateQueryTool: Activate query tool options, default `false`\n * @prop {object[]} cfg.spatialMethodOptions: The list of geometric methods use to create/draw the spatial filter <br/>\n * Here you can configure a list of methods used to draw (BBOX, Circle, Polygon) or create (Viewport and wfsGeocoder types) regarding the wfsGeocoder. <br/>The options for wfsGeocoder are:\n * - id: id of the method\n * - name: label used in the DropdownList\n * - type: must be wfsGeocoder\n * - customItemClassName: a custom class for used for this method in the DropdownList\n * - geodesic: {bool} draw a geodesic geometry for filter (supported only for Circle)\n * - filterProps:\n *   - blacklist {string[]} a list of banned words excluded from the wfs search\n *   - maxFeatures {number} the maximum features fetched per request\n *   - predicate {string} the cql predicate\n *   - querableAttributes {string[]} list of attributes to query on.\n *   - typeName {string} the workspace + layer name on geoserver\n *   - valueField {string} the attribute from features properties used as value/label in the autocomplete list\n *   - srsName {string} The projection of the requested features fetched via wfs\n\n * @prop {object[]} cfg.spatialOperations: The list of geometric operations use to create the spatial filter.<br/>\n * @prop {boolean} cfg.toolsOptions.hideCrossLayer force cross layer to hide\n * @prop {boolean} cfg.toolsOptions.hideCrossLayer force cross layer filter panel to hide (when is not used or not usable)\n * @prop {boolean} cfg.toolsOptions.hideSpatialFilter force spatial filter panel to hide (when is not used or not usable)\n *\n * @example\n * // This example configure a layer with polygons geometry as spatial filter method\n * \"spatialOperations\": [\n *      {\"id\": \"INTERSECTS\", \"name\": \"queryform.spatialfilter.operations.intersects\"},\n *      {\"id\": \"BBOX\", \"name\": \"queryform.spatialfilter.operations.bbox\"},\n *      {\"id\": \"CONTAINS\", \"name\": \"queryform.spatialfilter.operations.contains\"},\n *      {\"id\": \"WITHIN\", \"name\": \"queryform.spatialfilter.operations.within\"},\n *      {\"id\": \"DWITHIN\", \"name\": \"queryform.spatialfilter.operations.dwithin\"}\n * ],\n * \"spatialMethodOptions\": [\n *    {\"id\": \"Viewport\", \"name\": \"queryform.spatialfilter.methods.viewport\"},\n *    {\"id\": \"BBOX\", \"name\": \"queryform.spatialfilter.methods.box\"},\n *    {\"id\": \"Circle\", \"name\": \"queryform.spatialfilter.methods.circle\"},\n *    {\"id\": \"Polygon\", \"name\": \"queryform.spatialfilter.methods.poly\"},\n *    {\n *        \"id\": \"methodId\",\n *        \"name\": \"methodName\",\n *        \"type\": \"wfsGeocoder\",\n *        \"url\": \"urlToGeoserver\",\n *        \"crossLayer\": { // if this is present, allows to optimize the filter using crossLayerFilter functinalities instead of geometry. The server must support them\n *           \"cqlTemplate\": \"ATTRIBUTE_Y = '${properties.ATTRIBUTE_Y}'\", // a template to generate the filter from the feature properties\n *           \"geometryName\": \"GEOMETRY\",\n *           \"typeName\": \"workspace:typeName\"\n *        },\n *        \"filterProps\": {\n *            \"blacklist\": [],\n *            \"maxFeatures\": 5,\n *            \"predicate\": \"LIKE\",\n *            \"queriableAttributes\": [\"ATTRIBUTE_X\"],\n *            \"typeName\": \"workspace:typeName\",\n *            \"valueField\": \"ATTRIBUTE_Y\",\n *            \"srsName\": \"EPSG:3857\"\n *        },\n *        \"customItemClassName\": \"customItemClassName\"\n *    }\n */","meta":{"filename":"QueryPanel.jsx","lineno":375,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"kind":"class","classdesc":"<p>QueryPanelPlugin allow to query a layer in different ways, using attributes of that layer, spatial filters</p>","name":"QueryPanel","memberof":"plugins","properties":[{"type":{"names":["boolean"]},"description":"<p>Activate query tool options, default <code>false</code></p>","name":"cfg.activateQueryTool:"},{"type":{"names":["Array.<object>"]},"description":"<p>The list of geometric methods use to create/draw the spatial filter <br/>\nHere you can configure a list of methods used to draw (BBOX, Circle, Polygon) or create (Viewport and wfsGeocoder types) regarding the wfsGeocoder. <br/>The options for wfsGeocoder are:</p>\n<ul>\n<li>id: id of the method</li>\n<li>name: label used in the DropdownList</li>\n<li>type: must be wfsGeocoder</li>\n<li>customItemClassName: a custom class for used for this method in the DropdownList</li>\n<li>geodesic: {bool} draw a geodesic geometry for filter (supported only for Circle)</li>\n<li>filterProps:\n<ul>\n<li>blacklist {string[]} a list of banned words excluded from the wfs search</li>\n<li>maxFeatures {number} the maximum features fetched per request</li>\n<li>predicate {string} the cql predicate</li>\n<li>querableAttributes {string[]} list of attributes to query on.</li>\n<li>typeName {string} the workspace + layer name on geoserver</li>\n<li>valueField {string} the attribute from features properties used as value/label in the autocomplete list</li>\n<li>srsName {string} The projection of the requested features fetched via wfs</li>\n</ul>\n</li>\n</ul>","name":"cfg.spatialMethodOptions:"},{"type":{"names":["Array.<object>"]},"description":"<p>The list of geometric operations use to create the spatial filter.<br/></p>","name":"cfg.spatialOperations:"},{"type":{"names":["boolean"]},"description":"<p>force cross layer to hide</p>","name":"cfg.toolsOptions.hideCrossLayer"},{"type":{"names":["boolean"]},"description":"<p>force cross layer filter panel to hide (when is not used or not usable)</p>","name":"cfg.toolsOptions.hideCrossLayer"},{"type":{"names":["boolean"]},"description":"<p>force spatial filter panel to hide (when is not used or not usable)</p>","name":"cfg.toolsOptions.hideSpatialFilter"}],"examples":["// This example configure a layer with polygons geometry as spatial filter method\n\"spatialOperations\": [\n     {\"id\": \"INTERSECTS\", \"name\": \"queryform.spatialfilter.operations.intersects\"},\n     {\"id\": \"BBOX\", \"name\": \"queryform.spatialfilter.operations.bbox\"},\n     {\"id\": \"CONTAINS\", \"name\": \"queryform.spatialfilter.operations.contains\"},\n     {\"id\": \"WITHIN\", \"name\": \"queryform.spatialfilter.operations.within\"},\n     {\"id\": \"DWITHIN\", \"name\": \"queryform.spatialfilter.operations.dwithin\"}\n],\n\"spatialMethodOptions\": [\n   {\"id\": \"Viewport\", \"name\": \"queryform.spatialfilter.methods.viewport\"},\n   {\"id\": \"BBOX\", \"name\": \"queryform.spatialfilter.methods.box\"},\n   {\"id\": \"Circle\", \"name\": \"queryform.spatialfilter.methods.circle\"},\n   {\"id\": \"Polygon\", \"name\": \"queryform.spatialfilter.methods.poly\"},\n   {\n       \"id\": \"methodId\",\n       \"name\": \"methodName\",\n       \"type\": \"wfsGeocoder\",\n       \"url\": \"urlToGeoserver\",\n       \"crossLayer\": { // if this is present, allows to optimize the filter using crossLayerFilter functinalities instead of geometry. The server must support them\n          \"cqlTemplate\": \"ATTRIBUTE_Y = '${properties.ATTRIBUTE_Y}'\", // a template to generate the filter from the feature properties\n          \"geometryName\": \"GEOMETRY\",\n          \"typeName\": \"workspace:typeName\"\n       },\n       \"filterProps\": {\n           \"blacklist\": [],\n           \"maxFeatures\": 5,\n           \"predicate\": \"LIKE\",\n           \"queriableAttributes\": [\"ATTRIBUTE_X\"],\n           \"typeName\": \"workspace:typeName\",\n           \"valueField\": \"ATTRIBUTE_Y\",\n           \"srsName\": \"EPSG:3857\"\n       },\n       \"customItemClassName\": \"customItemClassName\"\n   }"],"scope":"static","longname":"plugins.QueryPanel","$longname":"plugins.QueryPanel"},{"comment":"/**\n * Utility plugin to redirect not logged users to the home page.\n * @name Redirect\n * @class\n * @memberof plugins\n */","meta":{"filename":"Redirect.jsx","lineno":47,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Utility plugin to redirect not logged users to the home page.</p>","name":"Redirect","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Redirect","$longname":"plugins.Redirect"},{"comment":"/**\n * Renders a \"redo\" button in the {@link #plugins.Toolbar|Toolbar} to go forward in\n * map navigation history.\n * @name Redo\n * @class\n * @memberof plugins\n */","meta":{"filename":"History.jsx","lineno":36,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Renders a &quot;redo&quot; button in the {@link #plugins.Toolbar|Toolbar} to go forward in\nmap navigation history.</p>","name":"Redo","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Redo","$longname":"plugins.Redo"},{"comment":"/**\n  * @name RulesDataGrid\n  * @memberof plugins\n  * @class\n  * @prop {boolean} cfg.virtualScroll default true. Activates virtualScroll. When false the grid uses normal pagination\n  * @prop {number} cfg.maxStoredPages default 5. In virtual Scroll mode determines the size of the loaded pages cache\n  * @prop {number} cfg.vsOverScan default 20. Number of rows to load above/below the visible slice of the grid\n  * @prop {number} cfg.scrollDebounce default 50. milliseconds of debounce interval between two scroll event\n  * @classdesc\n  * Rules-grid it's part of rules-manager page. It loads GeoFence's rules from configured geofence instance.\n  * It uses virtualScroll to manage rules loading. It allows to order GeoFence's rules by drag and drop.\n  * Rules can be filtered selecting values form columns' header.\n*/","meta":{"filename":"RulesDataGrid.jsx","lineno":37,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"name":"RulesDataGrid","memberof":"plugins","kind":"class","properties":[{"type":{"names":["number"]},"description":"<p>default 5. In virtual Scroll mode determines the size of the loaded pages cache</p>","name":"cfg.maxStoredPages"},{"type":{"names":["number"]},"description":"<p>default 50. milliseconds of debounce interval between two scroll event</p>","name":"cfg.scrollDebounce"},{"type":{"names":["boolean"]},"description":"<p>default true. Activates virtualScroll. When false the grid uses normal pagination</p>","name":"cfg.virtualScroll"},{"type":{"names":["number"]},"description":"<p>default 20. Number of rows to load above/below the visible slice of the grid</p>","name":"cfg.vsOverScan"}],"classdesc":"<p>Rules-grid it's part of rules-manager page. It loads GeoFence's rules from configured geofence instance.\nIt uses virtualScroll to manage rules loading. It allows to order GeoFence's rules by drag and drop.\nRules can be filtered selecting values form columns' header.</p>","scope":"static","longname":"plugins.RulesDataGrid","$longname":"plugins.RulesDataGrid"},{"comment":"/**\n *  Rules-editor it's part of rules-manager page. It allow a admin user to add, modify and delete geofence rules\n * @name RulesEditor\n * @memberof plugins\n * @prop {boolean} cfg.disableDetails disable details tab. (Style/Filters/Attribute). Useful to avoid issues with GeoServer integrated version that do not full support this advanced features via REST\n * @class\n */","meta":{"filename":"RulesEditor.jsx","lineno":31,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Rules-editor it's part of rules-manager page. It allow a admin user to add, modify and delete geofence rules</p>","name":"RulesEditor","memberof":"plugins","properties":[{"type":{"names":["boolean"]},"description":"<p>disable details tab. (Style/Filters/Attribute). Useful to avoid issues with GeoServer integrated version that do not full support this advanced features via REST</p>","name":"cfg.disableDetails"}],"kind":"class","scope":"static","longname":"plugins.RulesEditor","$longname":"plugins.RulesEditor"},{"comment":"/**\n * Footer plugin for {@link #plugins.RulesEditor}\n * @name RulesManager\n * @class\n * @memberof plugins\n */","meta":{"filename":"RulesManagerFooter.jsx","lineno":45,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Footer plugin for {@link #plugins.RulesEditor}</p>","name":"RulesManager","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.RulesManager","$longname":"plugins.RulesManager"},{"comment":"/**\n * Plugin for Save Map. Allows to re-save an existing map (using the persistence API). Note: creation of new Map is implemented by {@link #plugins.SaveAs|SaveAs} plugin.\n * @prop {boolean} [cfg.disablePermission=false] disable the permission selector in the tool. Can be used in context when permissions are not needed (resources are private only/using plugin with another API)\n * @name Save\n * @class\n * @memberof plugins\n */","meta":{"filename":"Save.jsx","lineno":23,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for Save Map. Allows to re-save an existing map (using the persistence API). Note: creation of new Map is implemented by {@link #plugins.SaveAs|SaveAs} plugin.</p>","properties":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"<p>disable the permission selector in the tool. Can be used in context when permissions are not needed (resources are private only/using plugin with another API)</p>","name":"cfg.disablePermission"}],"name":"Save","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Save","$longname":"plugins.Save"},{"comment":"/**\n * Plugin for Create/Clone a Map. Saves the map as a new Resource (using the persistence API).\n * @prop {boolean} [cfg.disablePermission=false] disable the permission selector in the tool. Can be used in context when permissions are not needed (resources are private only/using plugin with another API)\n * @name SaveAs\n * @class\n * @memberof plugins\n */","meta":{"filename":"SaveAs.jsx","lineno":24,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin for Create/Clone a Map. Saves the map as a new Resource (using the persistence API).</p>","properties":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"<p>disable the permission selector in the tool. Can be used in context when permissions are not needed (resources are private only/using plugin with another API)</p>","name":"cfg.disablePermission"}],"name":"SaveAs","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.SaveAs","$longname":"plugins.SaveAs"},{"comment":"/**\n  * ScaleBox Plugin. Provides a selector for the scale of the map.\n  * @class  ScaleBox\n  * @memberof plugins\n  * @static\n  *\n  * @prop {object} cfg.style CSS to apply to the scalebox\n  * @prop {Boolean} cfg.readOnly the selector is readonly\n  * @prop {string} cfg.label label for the selector\n  * @prop {Boolean} cfg.useRawInput set true if you want to use an normal html input object\n  *\n  */","meta":{"filename":"ScaleBox.jsx","lineno":42,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>ScaleBox Plugin. Provides a selector for the scale of the map.</p>","kind":"class","name":"ScaleBox","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>label for the selector</p>","name":"cfg.label"},{"type":{"names":["Boolean"]},"description":"<p>the selector is readonly</p>","name":"cfg.readOnly"},{"type":{"names":["object"]},"description":"<p>CSS to apply to the scalebox</p>","name":"cfg.style"},{"type":{"names":["Boolean"]},"description":"<p>set true if you want to use an normal html input object</p>","name":"cfg.useRawInput"}],"longname":"plugins.ScaleBox","$longname":"plugins.ScaleBox"},{"comment":"/**\n * ScrollUp Plugin. Show a button that allows to scroll to the top of the page. Only for full pages.\n * @prop cfg.style {object} the style of the scrollUp div\n * @prop cfg.btnClassName {string} the class to set for the button\n * @prop cfg.showUnder {number} pixels of scroll before to show the button. Default 200\n * @memberof plugins\n * @class\n * @static\n */","meta":{"range":[840,1859],"filename":"ScrollTop.jsx","lineno":25,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{"id":"astnode100027492","name":"ScrollTop","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>ScrollUp Plugin. Show a button that allows to scroll to the top of the page. Only for full pages.</p>","properties":[{"type":{"names":["string"]},"description":"<p>the class to set for the button</p>","name":"cfg.btnClassName"},{"type":{"names":["number"]},"description":"<p>pixels of scroll before to show the button. Default 200</p>","name":"cfg.showUnder"},{"type":{"names":["object"]},"description":"<p>the style of the scrollUp div</p>","name":"cfg.style"}],"memberof":"plugins","kind":"class","scope":"static","name":"ScrollTop","longname":"plugins.ScrollTop","$longname":"plugins.ScrollTop"},{"comment":"/**\n * Search plugin. Provides search functionalities for the map.\n * <br> Allows to display results and place them on the map. Supports nominatim and WFS as search protocols\n * <br> You can configure the services and each service can trigger a nested search.\n * @example\n * {\n *  \"name\": \"Search\",\n *  \"cfg\": {\n *      \"resultsStyle\": {\n *          \"iconUrl\": \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png\",\n *          \"shadowUrl\": \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-shadow.png\",\n *          \"iconSize\": [25, 41],\n *          \"iconAnchor\": [12, 41],\n *          \"popupAnchor\": [1, -34],\n *          \"shadowSize\": [41, 41],\n *          \"color\": \"#ff0000\",\n *          \"weight\": 4,\n *          \"dashArray\": \"\",\n *          \"fillColor\": \"#3388ff\",\n *          \"fillOpacity\": 0.2,\n *          \"LineString\": {\n *              // custom style for LineString, it overrides default/general style (optional)\n *          },\n *          \"MultiLineString\": {\n *              // custom style for MultiLineString, it overrides default/general style (optional)\n *          },\n *          \"Polygon\": {\n *              // custom style for Polygon, it overrides default/general style (optional)\n *          },\n *          \"MultiPolygon\": {\n *              // custom style for MultiPolygon, it overrides default/general style (optional)\n *          }\n *      }\n *    }\n *  }\n * }\n * @class Search\n * @memberof plugins\n * @prop {boolean} [cfg.showOptions=true] shows the burger menu in the input field\n * @prop {string} [cfg.activeSearchTool=addressSearch] default search tool. Values are \"addressSearch\", \"coordinatesSearch\", \"bookmarkSearch\"\n * @prop {boolean} [cfg.showCoordinatesSearchOption=true] shows the menu item to switch to the coordinate editor\n * @prop {boolean} [cfg.showAddressSearchOption=true]  shows the menu item to switch to the address editor\n * @prop {boolean} [cfg.showBookMarkSearchOption=true]  shows the menu item to switch to the bookmark selector\n * You can configure the bookmarks and each bookmark can trigger a zoomToExtent or Layer visibility reload based on the options set while configuring\n * @prop {object} cfg.searchOptions initial search options\n * @prop {object} cfg.maxResults number of max items present in the result list\n * @prop {object} cfg.resultsStyle custom style for search results\n * @prop {bool} cfg.fitResultsToMapSize true by default, fits the result list to the mapSize (can be disabled, for custom uses)\n * @prop {searchService[]} cfg.searchOptions.services a list of services to perform search.\n * a **nominatim** search service look like this:\n * ```\n * {\n *  \"type\": \"nominatim\",\n *  \"searchTextTemplate\": \"${properties.display_name}\", // text to use as searchText when an item is selected. Gets the result properties.\n *  \"options\": {\n *    \"polygon_geojson\": 1,\n *    \"limit\": 3\n *  }\n * ```\n *\n * a **wfs** service look like this:\n * ```\n * {\n *  \"type\": \"wfs\",\n *  \"priority\": 3,\n *  \"displayName\": \"${properties.propToDisplay}\",\n *  \"subTitle\": \" (a subtitle for the results coming from this service [ can contain expressions like ${properties.propForSubtitle}])\",\n *  \"options\": {\n *    \"url\": \"/geoserver/wfs\",\n *    \"typeName\": \"workspace:layer\",\n *    \"queriableAttributes\": [\"attribute_to_query\"],\n *    \"sortBy\": \"id\",\n *    \"srsName\": \"EPSG:4326\",\n *    \"maxFeatures\": 20,\n *    \"blacklist\": [... an array of strings to exclude from the final search filter ]\n * },\n *  \"nestedPlaceholder\": \"Write other text to refine the search...\",\n *  \"nestedPlaceholderMsgId\": \"id contained in the localization files i.e. search.nestedplaceholder\",\n *  \"then\": [ ... an array of services to use when one item of this service is selected],\n *  \"geomService\": { optional service to retrieve the geometry }\n *\n * ```\n * Search services configurations in `services` can be augmented or overridden by ones configured in the map. If the map JSON contains an array in `map.text_search_config.services` (containing the services edited using the UI of the plugin), the services in this array will be added to the ones listed\n * in the plugin configuration. If the map has `map.text_search_config.override` set to `true` (it is set by checking the related checkbox in the UI), the services configured in the plugin will be overridden by the ones configured in the map.\n * A service may also have nested services. This allows you to search in several steps,\n * </br> (e.g. *search for a street and in the next step search for the street number.*)\n * </br>When a service has nested services it needs some additional configurations, like `nestedPlaceholder` and `then`\n* @prop {string} cfg.searchOptions.services[].nestedPlaceholder the placeholder will be displayed in the input text, after you have performed the first search.\n* @prop {object[]} cfg.searchOptions.services[].then is the mandatory property to configure the nested service(s). Every object in array. When a entry is selected from the parent service, then the search bar will use these services for the next step (also in this case performed by `priority` order).\n * To get  information from the item selected in the parent service, you can use `staticFilter` property (for WFS) as a template to complete the CQL_FILTER of the nested service (see the example below). _TODO: this is limited to WFS. For custom services it may be useful to pass the whole item selected to the nested service_.\n\n * ```\n * {\n *  \"nestedPlaceholder\": \"the placeholder will be displayed in the input text, after you have performed the first search\",\n *  \"then\": [{\n *    \"type\": \"wfs\",\n *    \"priority\": 1,\n *    \"displayName\": \"${properties.propToDisplay} ${properties.propToDisplay}\",\n *    \"subTitle\": \" (a subtitle for the results coming from this service [ can contain expressions like ${properties.propForSubtitle}])\",\n *    \"searchTextTemplate\": \"${properties.propToDisplay}\",\n *    \"options\": {\n *      \"staticFilter\": \" AND SOMEPROP = '${properties.OLDPROP}'\", // will be appended to the original filter, it gets the properties of the current selected item (of the parent service)\n *      \"url\": \"/geoserver/wfs\",\n *      \"typeName\": \"workspace:layer\",\n *      \"queriableAttributes\": [\"attribute_to_query\"],\n *      \"srsName\": \"EPSG:4326\",\n *       \"maxFeatures\": 10\n *     }\n *  }]\n * }\n *\n * ```\n * **note:** `staticFilter` is valid for every service (even not nested), but the service it is nested,\n * it can be used as a template to pass values from the item selected in the parent service to complete this filter\n * that will be appended to the usual ilike filter used for searching text (wfs only)\n * <br/>\n * <br/>\n * **note:** `searchTextTemplate` used to complete the text when an item is selected.\n * (e.g. *I type \"ro\", I select an entry relative to \"rome\" and I want that the final text in search is \"rome\".*\n * Can be used for every service that is a leaf (so it doesn't contain any nested service)\n* <br/> <br/> Nested services can be used also with **custom service**, that allow you to define your remote service for text search,\nin this case you will need to write your own service, to require the data to remote API\n<br/>\n<br/>\nAn example to require the data api:\n\n```\n* const {API} = require('../../MapStore2/web/client/api/searchText');\n\n*function myRoads(text, options) {\n*    axios.get(`/myService?text=${text}`).then(( results ) => {\n*              // results are [{title: \"text\", description: \"description\"}]\n*              return results.map((item) => ({\n*                        \"type\": \"Feature\",\n*                        \"properties\": {\n*                            \"title\": item.title,\n*                            \"description\": item.description\n*                        }\n*                    })\n*    })\n* }\n* API.Utils.setService(\"myRoads\", myRoads);\n```\n*the myRoads service, must be a function, with this params:\n*\n* - text: the text to search\n* - options: the configurations of the service (like protocol, host, pathname, lang)\n*\n* the function return a promise, that must emit an array of geoJSON features,\n* if the geometry is not in the result, is possible to use the **geomService**.\n* GeomService is a service like other, that use  same properties to retrive the geometry of the selected result.\n*\n*<br>\n*an example of custom service with geomService\n*<br>\n```\n\"then\" : [\n                {\n                  \"type\": \"custom Service Name\",\n                  \"searchTextTemplate\": \"${properties.propToDisplay}\",\n                  \"displayName\": \"${properties.propToDisplay}\",\n                  \"subTitle\": \" (a subtitle for the results coming from this service [ can contain expressions like ${properties.propForSubtitle}])\",\n                  \"options\": {\n                    \"pathname\": \"/path/to/service\",\n                    \"idVia\": \"${properties.code}\"\n                  },\n                \"priority\": 2,\n                \"geomService\" : {\n                  \"type\": \"wfs\",\n                  \"options\": {\n                    \"url\": \"/geoserver/wfs\",\n                    \"typeName\":  \"workspace:layer\",\n                    \"srsName\": \"EPSG:4326\",\n                    \"staticFilter\": \"ID = ${properties.code}\"\n                  }\n                }\n              }]\n```\n\n * @prop {string} cfg.searchOptions.services[].launchInfoPanel this is used to trigger get feature requests once a record is selected after a search.\n * it has the following values:\n * - undefined | not configured, it does not perform the GFI request\n * Note that, in the following cases, the point used for GFI request is a point on surface of the geometry of the selected record\n * - \"single_layer\", it performs the GFI request for one layer only with only that record as a result, info_format is forced to be application/json\n * - \"all_layers\", it performs the GFI for all layers, as a normal GFI triggered by clicking on the map\n */","meta":{"filename":"Search.jsx","lineno":107,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Search plugin. Provides search functionalities for the map.\n<br> Allows to display results and place them on the map. Supports nominatim and WFS as search protocols\n<br> You can configure the services and each service can trigger a nested search.</p>","examples":["{\n \"name\": \"Search\",\n \"cfg\": {\n     \"resultsStyle\": {\n         \"iconUrl\": \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png\",\n         \"shadowUrl\": \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-shadow.png\",\n         \"iconSize\": [25, 41],\n         \"iconAnchor\": [12, 41],\n         \"popupAnchor\": [1, -34],\n         \"shadowSize\": [41, 41],\n         \"color\": \"#ff0000\",\n         \"weight\": 4,\n         \"dashArray\": \"\",\n         \"fillColor\": \"#3388ff\",\n         \"fillOpacity\": 0.2,\n         \"LineString\": {\n             // custom style for LineString, it overrides default/general style (optional)\n         },\n         \"MultiLineString\": {\n             // custom style for MultiLineString, it overrides default/general style (optional)\n         },\n         \"Polygon\": {\n             // custom style for Polygon, it overrides default/general style (optional)\n         },\n         \"MultiPolygon\": {\n             // custom style for MultiPolygon, it overrides default/general style (optional)\n         }\n     }\n   }\n }\n}"],"kind":"class","name":"Search","memberof":"plugins","properties":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"addressSearch","description":"<p>default search tool. Values are &quot;addressSearch&quot;, &quot;coordinatesSearch&quot;, &quot;bookmarkSearch&quot;</p>","name":"cfg.activeSearchTool"},{"type":{"names":["bool"]},"description":"<p>true by default, fits the result list to the mapSize (can be disabled, for custom uses)</p>","name":"cfg.fitResultsToMapSize"},{"type":{"names":["object"]},"description":"<p>number of max items present in the result list</p>","name":"cfg.maxResults"},{"type":{"names":["object"]},"description":"<p>custom style for search results</p>","name":"cfg.resultsStyle"},{"type":{"names":["object"]},"description":"<p>initial search options</p>","name":"cfg.searchOptions"},{"type":{"names":["Array.<searchService>"]},"description":"<p>a list of services to perform search.\na <strong>nominatim</strong> search service look like this:</p>\n<pre class=\"prettyprint source\"><code>{\n &quot;type&quot;: &quot;nominatim&quot;,\n &quot;searchTextTemplate&quot;: &quot;${properties.display_name}&quot;, // text to use as searchText when an item is selected. Gets the result properties.\n &quot;options&quot;: {\n   &quot;polygon_geojson&quot;: 1,\n   &quot;limit&quot;: 3\n }\n</code></pre>\n<p>a <strong>wfs</strong> service look like this:</p>\n<pre class=\"prettyprint source\"><code>{\n &quot;type&quot;: &quot;wfs&quot;,\n &quot;priority&quot;: 3,\n &quot;displayName&quot;: &quot;${properties.propToDisplay}&quot;,\n &quot;subTitle&quot;: &quot; (a subtitle for the results coming from this service [ can contain expressions like ${properties.propForSubtitle}])&quot;,\n &quot;options&quot;: {\n   &quot;url&quot;: &quot;/geoserver/wfs&quot;,\n   &quot;typeName&quot;: &quot;workspace:layer&quot;,\n   &quot;queriableAttributes&quot;: [&quot;attribute_to_query&quot;],\n   &quot;sortBy&quot;: &quot;id&quot;,\n   &quot;srsName&quot;: &quot;EPSG:4326&quot;,\n   &quot;maxFeatures&quot;: 20,\n   &quot;blacklist&quot;: [... an array of strings to exclude from the final search filter ]\n},\n &quot;nestedPlaceholder&quot;: &quot;Write other text to refine the search...&quot;,\n &quot;nestedPlaceholderMsgId&quot;: &quot;id contained in the localization files i.e. search.nestedplaceholder&quot;,\n &quot;then&quot;: [ ... an array of services to use when one item of this service is selected],\n &quot;geomService&quot;: { optional service to retrieve the geometry }\n\n</code></pre>\n<p>Search services configurations in <code>services</code> can be augmented or overridden by ones configured in the map. If the map JSON contains an array in <code>map.text_search_config.services</code> (containing the services edited using the UI of the plugin), the services in this array will be added to the ones listed\nin the plugin configuration. If the map has <code>map.text_search_config.override</code> set to <code>true</code> (it is set by checking the related checkbox in the UI), the services configured in the plugin will be overridden by the ones configured in the map.\nA service may also have nested services. This allows you to search in several steps,\n</br> (e.g. <em>search for a street and in the next step search for the street number.</em>)\n</br>When a service has nested services it needs some additional configurations, like <code>nestedPlaceholder</code> and <code>then</code></p>","name":"cfg.searchOptions.services"},{"type":{"names":["string"]},"description":"<p>this is used to trigger get feature requests once a record is selected after a search.\nit has the following values:</p>\n<ul>\n<li>undefined | not configured, it does not perform the GFI request\nNote that, in the following cases, the point used for GFI request is a point on surface of the geometry of the selected record</li>\n<li>&quot;single_layer&quot;, it performs the GFI request for one layer only with only that record as a result, info_format is forced to be application/json</li>\n<li>&quot;all_layers&quot;, it performs the GFI for all layers, as a normal GFI triggered by clicking on the map</li>\n</ul>","name":"cfg.searchOptions.services[].launchInfoPanel"},{"type":{"names":["string"]},"description":"<p>the placeholder will be displayed in the input text, after you have performed the first search.</p>","name":"cfg.searchOptions.services[].nestedPlaceholder"},{"type":{"names":["Array.<object>"]},"description":"<p>is the mandatory property to configure the nested service(s). Every object in array. When a entry is selected from the parent service, then the search bar will use these services for the next step (also in this case performed by <code>priority</code> order).\nTo get  information from the item selected in the parent service, you can use <code>staticFilter</code> property (for WFS) as a template to complete the CQL_FILTER of the nested service (see the example below). <em>TODO: this is limited to WFS. For custom services it may be useful to pass the whole item selected to the nested service</em>.</p>\n<pre class=\"prettyprint source\"><code>{\n &quot;nestedPlaceholder&quot;: &quot;the placeholder will be displayed in the input text, after you have performed the first search&quot;,\n &quot;then&quot;: [{\n   &quot;type&quot;: &quot;wfs&quot;,\n   &quot;priority&quot;: 1,\n   &quot;displayName&quot;: &quot;${properties.propToDisplay} ${properties.propToDisplay}&quot;,\n   &quot;subTitle&quot;: &quot; (a subtitle for the results coming from this service [ can contain expressions like ${properties.propForSubtitle}])&quot;,\n   &quot;searchTextTemplate&quot;: &quot;${properties.propToDisplay}&quot;,\n   &quot;options&quot;: {\n     &quot;staticFilter&quot;: &quot; AND SOMEPROP = '${properties.OLDPROP}'&quot;, // will be appended to the original filter, it gets the properties of the current selected item (of the parent service)\n     &quot;url&quot;: &quot;/geoserver/wfs&quot;,\n     &quot;typeName&quot;: &quot;workspace:layer&quot;,\n     &quot;queriableAttributes&quot;: [&quot;attribute_to_query&quot;],\n     &quot;srsName&quot;: &quot;EPSG:4326&quot;,\n      &quot;maxFeatures&quot;: 10\n    }\n }]\n}\n\n</code></pre>\n<p><strong>note:</strong> <code>staticFilter</code> is valid for every service (even not nested), but the service it is nested,\nit can be used as a template to pass values from the item selected in the parent service to complete this filter\nthat will be appended to the usual ilike filter used for searching text (wfs only)\n<br/>\n<br/>\n<strong>note:</strong> <code>searchTextTemplate</code> used to complete the text when an item is selected.\n(e.g. <em>I type &quot;ro&quot;, I select an entry relative to &quot;rome&quot; and I want that the final text in search is &quot;rome&quot;.</em>\nCan be used for every service that is a leaf (so it doesn't contain any nested service)\n<br/> <br/> Nested services can be used also with <strong>custom service</strong>, that allow you to define your remote service for text search,\nin this case you will need to write your own service, to require the data to remote API\n<br/>\n<br/>\nAn example to require the data api:</p>\n<pre class=\"prettyprint source\"><code>const {API} = require('../../MapStore2/web/client/api/searchText');\nfunction myRoads(text, options) {\n   axios.get(`/myService?text=${text}`).then(( results ) => {\n             // results are [{title: &quot;text&quot;, description: &quot;description&quot;}]\n             return results.map((item) => ({\n                       &quot;type&quot;: &quot;Feature&quot;,\n                       &quot;properties&quot;: {\n                           &quot;title&quot;: item.title,\n                           &quot;description&quot;: item.description\n                       }\n                   })\n   })\n}\nAPI.Utils.setService(&quot;myRoads&quot;, myRoads);\n</code></pre>\n<p>the myRoads service, must be a function, with this params:</p>\n<ul>\n<li>text: the text to search</li>\n<li>options: the configurations of the service (like protocol, host, pathname, lang)</li>\n</ul>\n<p>the function return a promise, that must emit an array of geoJSON features,\nif the geometry is not in the result, is possible to use the <strong>geomService</strong>.\nGeomService is a service like other, that use  same properties to retrive the geometry of the selected result.</p>\n<br>\nan example of custom service with geomService\n<br>\n```\n\"then\" : [\n                {\n                  \"type\": \"custom Service Name\",\n                  \"searchTextTemplate\": \"${properties.propToDisplay}\",\n                  \"displayName\": \"${properties.propToDisplay}\",\n                  \"subTitle\": \" (a subtitle for the results coming from this service [ can contain expressions like ${properties.propForSubtitle}])\",\n                  \"options\": {\n                    \"pathname\": \"/path/to/service\",\n                    \"idVia\": \"${properties.code}\"\n                  },\n                \"priority\": 2,\n                \"geomService\" : {\n                  \"type\": \"wfs\",\n                  \"options\": {\n                    \"url\": \"/geoserver/wfs\",\n                    \"typeName\":  \"workspace:layer\",\n                    \"srsName\": \"EPSG:4326\",\n                    \"staticFilter\": \"ID = ${properties.code}\"\n                  }\n                }\n              }]\n```","name":"cfg.searchOptions.services[].then"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>shows the menu item to switch to the address editor</p>","name":"cfg.showAddressSearchOption"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>shows the menu item to switch to the bookmark selector\nYou can configure the bookmarks and each bookmark can trigger a zoomToExtent or Layer visibility reload based on the options set while configuring</p>","name":"cfg.showBookMarkSearchOption"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>shows the menu item to switch to the coordinate editor</p>","name":"cfg.showCoordinatesSearchOption"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>shows the burger menu in the input field</p>","name":"cfg.showOptions"}],"scope":"static","longname":"plugins.Search","$longname":"plugins.Search"},{"comment":"/**\n * Bookmark search configuration Plugin. Allow to add and edit additional\n * bookmarks used by search by bookmark plugin. User has to\n * save the map to persist service changes.\n *\n * @name SearchByBookmark\n * @memberof plugins\n * @class\n * @param {bool} cfg.zoomOnSelect cfg.zoomOnSelect zooms to the extent on selecting a value from the bookmark drop down\n * rather than clicking search icon\n * @param {string} cfg.bookmarkEditing cfg.bookmarkEditing \"ADMIN\"|\"EDIT\"|\"ALL\" sets the user permission restriction\n * for bookmark edit feature\n * - \"ADMIN\": only admin can edit bookmarks\n * - \"EDIT\": only users with edit permission on the current map can edit bookmarks\n * - \"ALL\": everyone can edit bookmarks\n * @example\n * {\n *     cfg: {\n *         zoomOnSelect: true,\n *         bookmarkEditing: \"ADMIN\"\n *     }\n * }\n */","meta":{"filename":"SearchByBookmark.jsx","lineno":242,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Bookmark search configuration Plugin. Allow to add and edit additional\nbookmarks used by search by bookmark plugin. User has to\nsave the map to persist service changes.</p>","name":"SearchByBookmark","memberof":"plugins","kind":"class","params":[{"type":{"names":["bool"]},"description":"<p>cfg.zoomOnSelect zooms to the extent on selecting a value from the bookmark drop down\nrather than clicking search icon</p>","name":"cfg.zoomOnSelect"},{"type":{"names":["string"]},"description":"<p>cfg.bookmarkEditing &quot;ADMIN&quot;|&quot;EDIT&quot;|&quot;ALL&quot; sets the user permission restriction\nfor bookmark edit feature</p>\n<ul>\n<li>&quot;ADMIN&quot;: only admin can edit bookmarks</li>\n<li>&quot;EDIT&quot;: only users with edit permission on the current map can edit bookmarks</li>\n<li>&quot;ALL&quot;: everyone can edit bookmarks</li>\n</ul>","name":"cfg.bookmarkEditing"}],"examples":["{\n    cfg: {\n        zoomOnSelect: true,\n        bookmarkEditing: \"ADMIN\"\n    }\n}"],"scope":"static","longname":"plugins.SearchByBookmark","$longname":"plugins.SearchByBookmark"},{"comment":"/**\n * Text Search Services Editor Plugin. Allow to add and edit additional\n * text serch service used by text search plugin. User has to\n * save the map to persist service changes.\n *\n * @class SearchServicesConfig\n * @memberof plugins\n * @static\n *\n * @prop {string} cfg.id identifier of the Plugin\n * @prop {object} cfg.panelStyle inline style for the panel\n * @prop {string} cfg.panelClassName className for the panel\n * @prop {string} cfg.containerClassName className for the container\n */","meta":{"filename":"SearchServicesConfig.jsx","lineno":34,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Text Search Services Editor Plugin. Allow to add and edit additional\ntext serch service used by text search plugin. User has to\nsave the map to persist service changes.</p>","kind":"class","name":"SearchServicesConfig","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>className for the container</p>","name":"cfg.containerClassName"},{"type":{"names":["string"]},"description":"<p>identifier of the Plugin</p>","name":"cfg.id"},{"type":{"names":["string"]},"description":"<p>className for the panel</p>","name":"cfg.panelClassName"},{"type":{"names":["object"]},"description":"<p>inline style for the panel</p>","name":"cfg.panelStyle"}],"longname":"plugins.SearchServicesConfig","$longname":"plugins.SearchServicesConfig"},{"comment":"/**\n * Settings window to configure some details of the current map.\n * Is also a container for settings coming from the other plugins.\n * Renders in {@link #plugins.BurgerMenu|BurgerMenu} an entry to open this window.\n * @name Settings\n * @class\n * @memberof plugins\n */","meta":{"filename":"Settings.jsx","lineno":179,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Settings window to configure some details of the current map.\nIs also a container for settings coming from the other plugins.\nRenders in {@link #plugins.BurgerMenu|BurgerMenu} an entry to open this window.</p>","name":"Settings","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Settings","$longname":"plugins.Settings"},{"comment":"/**\n * Share Plugin allows to share the current URL (location.href) in some different ways.\n * You can share it on socials networks(facebook,twitter,google+,linkedIn)\n * copying the direct link\n * copying the embedded code\n * using the QR code with mobile apps\n * @class\n * @memberof plugins\n * @prop {node} [title] the title of the page\n * @prop {string} [shareUrlRegex] reqular expression to parse the shareUrl to generate the final url, using shareUrlReplaceString\n * @prop {string} [shareUrlReplaceString] expression to be replaced by groups of the shareUrlRegex to get the final shareUrl to use for the iframe\n * @prop {object} [embedOptions] options for the iframe version of embedded share options\n * @prop {boolean} [embedOptions.showTOCToggle] true by default, set to false to hide the \"show TOC\" toggle.\n * @prop {boolean} [showAPI] default true, if false, hides the API entry of embed.\n * @prop {function} [onClose] function to call on close window event.\n * @prop {function} [getCount] function used to get the count for social links.\n * @prop {object} [cfg.advancedSettings] show advanced settings (bbox param, centerAndZoom param or home button) f.e {bbox: true, homeButton: true, centerAndZoom: true}\n * @prop {boolean} [cfg.advancedSettings.bbox] if true, the share url is generated with the bbox param\n * @prop {boolean} [cfg.advancedSettings.centerAndZoom] if true, the share url is generated with the center and zoom params\n * @prop {string} [cfg.advancedSettings.defaultEnabled] the value can either be \"bbox\", \"centerAndZoom\", \"markerAndZoom\". Based on the value, the checkboxes corresponding to the param will be enabled by default\n * @prop {string} [cfg.advancedSettings.hideInTab] based on the value (i.e value can be \"link\" or \"social\" or \"embed\"), the advancedSettings is hidden in the tab value specified\n * For example this will display marker, coordinates and zoom fields with the marker enabled by default generating share url with respective params\n * ```\n * \"cfg\": {\n *    \"advancedSettings\" : {\n *       \"bbox\": true,\n *       \"centerAndZoom\": true,\n *       \"defaultEnabled\": \"markerAndZoom\"\n *    }\n *  }\n * ```\n */","meta":{"range":[3515,4964],"filename":"Share.jsx","lineno":64,"columnno":6,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{"id":"astnode100031649","name":"Share","type":"CallExpression","value":""}},"description":"<p>Share Plugin allows to share the current URL (location.href) in some different ways.\nYou can share it on socials networks(facebook,twitter,google+,linkedIn)\ncopying the direct link\ncopying the embedded code\nusing the QR code with mobile apps</p>","kind":"class","memberof":"plugins","properties":[{"type":{"names":["object"]},"optional":true,"description":"<p>show advanced settings (bbox param, centerAndZoom param or home button) f.e {bbox: true, homeButton: true, centerAndZoom: true}</p>","name":"cfg.advancedSettings"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>if true, the share url is generated with the bbox param</p>","name":"cfg.advancedSettings.bbox"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>if true, the share url is generated with the center and zoom params</p>","name":"cfg.advancedSettings.centerAndZoom"},{"type":{"names":["string"]},"optional":true,"description":"<p>the value can either be &quot;bbox&quot;, &quot;centerAndZoom&quot;, &quot;markerAndZoom&quot;. Based on the value, the checkboxes corresponding to the param will be enabled by default</p>","name":"cfg.advancedSettings.defaultEnabled"},{"type":{"names":["string"]},"optional":true,"description":"<p>based on the value (i.e value can be &quot;link&quot; or &quot;social&quot; or &quot;embed&quot;), the advancedSettings is hidden in the tab value specified\nFor example this will display marker, coordinates and zoom fields with the marker enabled by default generating share url with respective params</p>\n<pre class=\"prettyprint source\"><code>&quot;cfg&quot;: {\n   &quot;advancedSettings&quot; : {\n      &quot;bbox&quot;: true,\n      &quot;centerAndZoom&quot;: true,\n      &quot;defaultEnabled&quot;: &quot;markerAndZoom&quot;\n   }\n }\n</code></pre>","name":"cfg.advancedSettings.hideInTab"},{"type":{"names":["object"]},"optional":true,"description":"<p>options for the iframe version of embedded share options</p>","name":"embedOptions"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>true by default, set to false to hide the &quot;show TOC&quot; toggle.</p>","name":"embedOptions.showTOCToggle"},{"type":{"names":["function"]},"optional":true,"description":"<p>function used to get the count for social links.</p>","name":"getCount"},{"type":{"names":["function"]},"optional":true,"description":"<p>function to call on close window event.</p>","name":"onClose"},{"type":{"names":["string"]},"optional":true,"description":"<p>reqular expression to parse the shareUrl to generate the final url, using shareUrlReplaceString</p>","name":"shareUrlRegex"},{"type":{"names":["string"]},"optional":true,"description":"<p>expression to be replaced by groups of the shareUrlRegex to get the final shareUrl to use for the iframe</p>","name":"shareUrlReplaceString"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>default true, if false, hides the API entry of embed.</p>","name":"showAPI"},{"type":{"names":["node"]},"optional":true,"description":"<p>the title of the page</p>","name":"title"}],"name":"Share","longname":"plugins.Share","scope":"static","params":[],"$longname":"plugins.Share"},{"comment":"/**\n * StreetView Plugin. Uses Google Street View services to provide the navigation of Google panoramic photos of street view service through the map.\n * @name StreetView\n * @memberof plugins\n * @property {string} cfg.apiKey The API key to use.\n * Mandatory in production. In order to allow fine billing strategies (with different API keys), the API key can be defined and customized here in this configuration option or in `localConfig.json` with the following order of priority:\n * - `apiKeys.googleStreetViewAPIKey` - Use this if you have only one API key for enable for street view JS API for the whole application,\n * - `apiKeys.googleAPIKey` - Use this if you have a general API key enabled for all Google APIs in MapStore.\n * - `googleAPIKey` (for retro-compatibility only)\n *\n * Generally speaking, you should prefer general settings in `localConfig.json` over the plugin configuration, in order to reuse the same configuration for default viewer and all the contexts, automatically. This way you will not need to configure the `apiKey` in every context.\n * <br>**Important**: You can use only **one** API-key for a MapStore instance. The api-key can be configured replicated in every plugin configuration or using one of the unique global settings (suggested) in `localConfig.json`). @see {@link https://github.com/googlemaps/js-api-loader/issues/5|here} and @see {@link https://github.com/googlemaps/js-api-loader/issues/100|here}\n * @property {boolean} [cfg.useDataLayer=true] If true, adds to the map a layer for street view data availability when the plugin is turned on.\n * @property {object} [cfg.dataLayerConfig] configuration for the data layer. By default `{provider: 'custom', type: \"tileprovider\", url: \"https://mts1.googleapis.com/vt?hl=en-US&lyrs=svv|cb_client:apiv3&style=40,18&x={x}&y={y}&z={z}\"}`\n * @property {object} [cfg.panoramaOptions] options to configure the panorama. {@link https://developers.google.com/maps/documentation/javascript/reference/street-view#panoramaOptions|Reference for google maps API}\n * @class\n */","meta":{"filename":"StreetView.jsx","lineno":37,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins/StreetView","code":{}},"description":"<p>StreetView Plugin. Uses Google Street View services to provide the navigation of Google panoramic photos of street view service through the map.</p>","name":"StreetView","memberof":"plugins","properties":[{"type":{"names":["string"]},"description":"<p>The API key to use.\nMandatory in production. In order to allow fine billing strategies (with different API keys), the API key can be defined and customized here in this configuration option or in <code>localConfig.json</code> with the following order of priority:</p>\n<ul>\n<li><code>apiKeys.googleStreetViewAPIKey</code> - Use this if you have only one API key for enable for street view JS API for the whole application,</li>\n<li><code>apiKeys.googleAPIKey</code> - Use this if you have a general API key enabled for all Google APIs in MapStore.</li>\n<li><code>googleAPIKey</code> (for retro-compatibility only)</li>\n</ul>\n<p>Generally speaking, you should prefer general settings in <code>localConfig.json</code> over the plugin configuration, in order to reuse the same configuration for default viewer and all the contexts, automatically. This way you will not need to configure the <code>apiKey</code> in every context.\n<br><strong>Important</strong>: You can use only <strong>one</strong> API-key for a MapStore instance. The api-key can be configured replicated in every plugin configuration or using one of the unique global settings (suggested) in <code>localConfig.json</code>). @see {@link https://github.com/googlemaps/js-api-loader/issues/5|here} and @see {@link https://github.com/googlemaps/js-api-loader/issues/100|here}</p>","name":"cfg.apiKey"},{"type":{"names":["object"]},"optional":true,"description":"<p>configuration for the data layer. By default <code>{provider: 'custom', type: &quot;tileprovider&quot;, url: &quot;https://mts1.googleapis.com/vt?hl=en-US&amp;lyrs=svv|cb_client:apiv3&amp;style=40,18&amp;x={x}&amp;y={y}&amp;z={z}&quot;}</code></p>","name":"cfg.dataLayerConfig"},{"type":{"names":["object"]},"optional":true,"description":"<p>options to configure the panorama. {@link https://developers.google.com/maps/documentation/javascript/reference/street-view#panoramaOptions|Reference for google maps API}</p>","name":"cfg.panoramaOptions"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>If true, adds to the map a layer for street view data availability when the plugin is turned on.</p>","name":"cfg.useDataLayer"}],"kind":"class","scope":"static","longname":"plugins.StreetView","$longname":"plugins.StreetView"},{"comment":"/**\n * StyleEditor plugin.\n * - Select styles from available styles of the layer\n * - Create a new style from a list of template\n * - Remove a style\n * - Edit css style with preview\n *\n * Note: current implementation is available only in TOCItemsSettings\n * @prop {object} cfg.styleService GeoServer service in use, when undefined Style Editor creates style service based on layer options\n * @prop {string} cfg.styleService.baseUrl base url of service eg: '/geoserver/'\n * @prop {array} cfg.styleService.availableUrls a list of urls that can access directly to the style service\n * @prop {array} cfg.styleService.formats supported formats, could be one of [ 'sld' ] or [ 'sld', 'css' ]\n * @prop {array} cfg.editingAllowedRoles all roles with edit permission eg: [ 'ADMIN' ], if null all roles have edit permission\n * @prop {array} cfg.enableSetDefaultStyle enable set default style functionality\n * @prop {object} cfg.editorConfig contains editor configurations\n * @prop {object} cfg.editorConfig.classification configuration of the classification symbolizer\n * For example adding default editor configuration to the classification\n * ```\n * \"cfg\": {\n *    \"editorConfig\" : {\n *       \"classification\": {\n *           \"intervalsForUnique\": 100\n *       },\n *    }\n *  }\n * ```\n * @memberof plugins\n * @class StyleEditor\n */","meta":{"filename":"StyleEditor.jsx","lineno":92,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>StyleEditor plugin.</p>\n<ul>\n<li>Select styles from available styles of the layer</li>\n<li>Create a new style from a list of template</li>\n<li>Remove a style</li>\n<li>Edit css style with preview</li>\n</ul>\n<p>Note: current implementation is available only in TOCItemsSettings</p>","properties":[{"type":{"names":["array"]},"description":"<p>all roles with edit permission eg: [ 'ADMIN' ], if null all roles have edit permission</p>","name":"cfg.editingAllowedRoles"},{"type":{"names":["object"]},"description":"<p>contains editor configurations</p>","name":"cfg.editorConfig"},{"type":{"names":["object"]},"description":"<p>configuration of the classification symbolizer\nFor example adding default editor configuration to the classification</p>\n<pre class=\"prettyprint source\"><code>&quot;cfg&quot;: {\n   &quot;editorConfig&quot; : {\n      &quot;classification&quot;: {\n          &quot;intervalsForUnique&quot;: 100\n      },\n   }\n }\n</code></pre>","name":"cfg.editorConfig.classification"},{"type":{"names":["array"]},"description":"<p>enable set default style functionality</p>","name":"cfg.enableSetDefaultStyle"},{"type":{"names":["object"]},"description":"<p>GeoServer service in use, when undefined Style Editor creates style service based on layer options</p>","name":"cfg.styleService"},{"type":{"names":["array"]},"description":"<p>a list of urls that can access directly to the style service</p>","name":"cfg.styleService.availableUrls"},{"type":{"names":["string"]},"description":"<p>base url of service eg: '/geoserver/'</p>","name":"cfg.styleService.baseUrl"},{"type":{"names":["array"]},"description":"<p>supported formats, could be one of [ 'sld' ] or [ 'sld', 'css' ]</p>","name":"cfg.styleService.formats"}],"memberof":"plugins","kind":"class","name":"StyleEditor","scope":"static","longname":"plugins.StyleEditor","$longname":"plugins.StyleEditor"},{"comment":"/**\n * Swipe. Add to the TOC the possibility to select a layer for Swipe.\n * @name Swipe\n * @memberof plugins\n * @class\n */","meta":{"filename":"Swipe.jsx","lineno":52,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Swipe. Add to the TOC the possibility to select a layer for Swipe.</p>","name":"Swipe","memberof":"plugins","kind":"class","scope":"static","longname":"plugins.Swipe","$longname":"plugins.Swipe"},{"comment":"/**\n * Plugin that adds thematic styles for wms layers, through attribute classification.\n *\n * Layers can be simple vector layers, or parametric (GeoServer) SQL views.\n *\n * GeoServer SLDService is used as the external classification service.\n *\n * @see {@link api/framework#components.TOC.ThematicLayer}\n *\n * @memberof plugins\n * @name ThematicLayer\n * @class\n * @prop {boolean} enableRemoveStyle enables the remove style button (disabled by default)\n * @prop {array} cfg.colors list of base color palettes the user can choose to create the style (they can be extended via\n *    layer configuration)\n * @prop {number} cfg.colorSamples number of samples to show in the color palette list\n * @prop {number} cfg.maxClasses number of classes (range + color) the user can choose for the style\n * @prop {object} cfg.initialParams object with initial/default values for the style parameters in the UI\n *\n * @example\n * // custom color palettes:\n * colors: [{\n *  \"name\": \"mypalette\",\n *  \"colors\": [\"#ff0\", \"#0f0\"] // you can specify as many colors (stop points) as you wish, other colors will be interpolated as needed\n * }, ...]\n *\n * @example\n * // A configuration object looks like this:\n * {\n *    \"datatable\": \"...\", // optional external data layer, can be used to retrieve the list of classification attributes (for SQL views),\n *    \"attribute\": \"...\", // name of the (fixed) classification attribute for SQLViews where the thema field is parametric (e.g. thema)\n *    \"fieldAsParam\": true/false, // if true the field is a parameter of the SQLView, if not is a real attribute of the layer\n *        when the field is parametric, you also have to specify attribute (the fixed attribute name in the SQLView and either\n *        datatable or fields to configure the list of available fields)\n *    \"fields\": [...], // optional list of classification fields (use this one or datatable to configure the list of fields)\n *    \"colors\": [...], // optional list of custom palettes (will override global ones)\n *    \"additionalColors\": [...] // optional list of additional color palettes (will be appended to the default ones),\n *    \"params\": [{ // parameters for SQL views (encoded as viewparams); do not specify the field here, but use fieldAsParam: truet\n *        \"type\": \"aggregate\", // type is used for pre-configured parameters, actually only aggregate is supported,\n *                             // for aggregation type selection through groupby (sum, count, min, ...)\n *        \"name\": \"aggregate\"\n *    }, ...]\n * }\n *\n * @example\n * // custom (filter) parameter can be configured like this:\n * {\n *      \"title\": \"...\", // label in the UI\n        \"field\": \"regione\", // viewparam name\n        \"defaultValue\": -1, // default (initial) value\n        \"values\": [ // list of chosable values\n            {\n                \"name\": \"All\", // label\n                \"value\": -1    // parameter value\n            }, ...\n        ]\n * }\n *\n * @example\n * // static list of fields:\n * \"fields\": [{\n *    \"name\": \"...\",\n *    \"type\": \"number\"\n * }, ...]\n */","meta":{"filename":"ThematicLayer.jsx","lineno":27,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin that adds thematic styles for wms layers, through attribute classification.</p>\n<p>Layers can be simple vector layers, or parametric (GeoServer) SQL views.</p>\n<p>GeoServer SLDService is used as the external classification service.</p>","see":["{@link api/framework#components.TOC.ThematicLayer}"],"memberof":"plugins","name":"ThematicLayer","kind":"class","properties":[{"type":{"names":["array"]},"description":"<p>list of base color palettes the user can choose to create the style (they can be extended via\nlayer configuration)</p>","name":"cfg.colors"},{"type":{"names":["number"]},"description":"<p>number of samples to show in the color palette list</p>","name":"cfg.colorSamples"},{"type":{"names":["object"]},"description":"<p>object with initial/default values for the style parameters in the UI</p>","name":"cfg.initialParams"},{"type":{"names":["number"]},"description":"<p>number of classes (range + color) the user can choose for the style</p>","name":"cfg.maxClasses"},{"type":{"names":["boolean"]},"description":"<p>enables the remove style button (disabled by default)</p>","name":"enableRemoveStyle"}],"examples":["// custom color palettes:\ncolors: [{\n \"name\": \"mypalette\",\n \"colors\": [\"#ff0\", \"#0f0\"] // you can specify as many colors (stop points) as you wish, other colors will be interpolated as needed\n}, ...]","// A configuration object looks like this:\n{\n   \"datatable\": \"...\", // optional external data layer, can be used to retrieve the list of classification attributes (for SQL views),\n   \"attribute\": \"...\", // name of the (fixed) classification attribute for SQLViews where the thema field is parametric (e.g. thema)\n   \"fieldAsParam\": true/false, // if true the field is a parameter of the SQLView, if not is a real attribute of the layer\n       when the field is parametric, you also have to specify attribute (the fixed attribute name in the SQLView and either\n       datatable or fields to configure the list of available fields)\n   \"fields\": [...], // optional list of classification fields (use this one or datatable to configure the list of fields)\n   \"colors\": [...], // optional list of custom palettes (will override global ones)\n   \"additionalColors\": [...] // optional list of additional color palettes (will be appended to the default ones),\n   \"params\": [{ // parameters for SQL views (encoded as viewparams); do not specify the field here, but use fieldAsParam: truet\n       \"type\": \"aggregate\", // type is used for pre-configured parameters, actually only aggregate is supported,\n                            // for aggregation type selection through groupby (sum, count, min, ...)\n       \"name\": \"aggregate\"\n   }, ...]\n}","// custom (filter) parameter can be configured like this:\n{\n     \"title\": \"...\", // label in the UI\n        \"field\": \"regione\", // viewparam name\n        \"defaultValue\": -1, // default (initial) value\n        \"values\": [ // list of chosable values\n            {\n                \"name\": \"All\", // label\n                \"value\": -1    // parameter value\n            }, ...\n        ]\n}","// static list of fields:\n\"fields\": [{\n   \"name\": \"...\",\n   \"type\": \"number\"\n}, ...]"],"scope":"static","longname":"plugins.ThematicLayer","$longname":"plugins.ThematicLayer"},{"comment":"/**\n  * Timeline Plugin. Shows the timeline tool on the map.\n  * To use with Playback plugin. {@link #plugins.Playback|Playback}\n  * For configuration, see related {@link api/framework#reducers.timeline|reducer's documentation}\n  * @class  Timeline\n  * @memberof plugins\n  * @static\n  * @prop cfg.expandedPanel {boolean} false by default\n  * @prop cfg.showHiddenLayers {boolean} false by default, when *false* the layers in timeline gets in sync with time layer's visibility (TOC)\n  * i.e when a time layer is hidden or removed, the timeline will not show the respective guide layer.\n  * Furthermore, the timeline automatically selects the next available guide layer, if the **Snap to guide layer** option is enabled in the Timeline settings.\n  * If set to *true*, the hidden layer will be shown in the timeline.\n  *\n  * @example\n  * {\n  *   \"name\": \"TimeLine\",\n  *   \"cfg\": {\n  *       \"showHiddenLayers\": false,\n  *       \"expandedPanel\": true\n  *    }\n  * }\n  *\n  */","meta":{"filename":"Timeline.jsx","lineno":58,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Timeline Plugin. Shows the timeline tool on the map.\nTo use with Playback plugin. {@link #plugins.Playback|Playback}\nFor configuration, see related {@link api/framework#reducers.timeline|reducer's documentation}</p>","kind":"class","name":"Timeline","memberof":"plugins","scope":"static","properties":[{"type":{"names":["boolean"]},"description":"<p>false by default</p>","name":"cfg.expandedPanel"},{"type":{"names":["boolean"]},"description":"<p>false by default, when <em>false</em> the layers in timeline gets in sync with time layer's visibility (TOC)\ni.e when a time layer is hidden or removed, the timeline will not show the respective guide layer.\nFurthermore, the timeline automatically selects the next available guide layer, if the <strong>Snap to guide layer</strong> option is enabled in the Timeline settings.\nIf set to <em>true</em>, the hidden layer will be shown in the timeline.</p>","name":"cfg.showHiddenLayers"}],"examples":["{\n  \"name\": \"TimeLine\",\n  \"cfg\": {\n      \"showHiddenLayers\": false,\n      \"expandedPanel\": true\n   }\n}"],"longname":"plugins.Timeline","$longname":"plugins.Timeline"},{"comment":"/**\n * Provides Table Of Content visualization. Lists the layers on the map, organized in groups and provides the possibility to select them.\n * Based on current layer(s)/group(s) selection, shows a set of tools for the current selection.\n * This is also a plugin container. Tools injected providing only the name to the container need an internal support (deprecated). Here an example:\n * ```javascript\n * export default createPlugin('AddGroup', {\n *     component: AddGroupPlugin,\n *     containers: {\n *         TOC: {\n *             doNotHide: true,\n *             name: \"AddGroup\" // this works only if AddGroup is one of the plugins internally supported by TOC.\n *         }\n *     }\n * });\n * ```\n * The new **(recommended)** mode to inject tools in the TOC is by using `target`.\n * This method allows to insert a component in the defined target. Actually `toolbar` is the only target supported for the `target`, and allows to add a button on the toolbar.\n * ```javascript\n * createPlugin(\n *  'MyPlugin',\n *  {\n *      containers: {\n *         TOC: {\n *             name: \"TOOLNAME\", // a name for the current tool.\n *             target: \"toolbar\", // the target where to insert the component\n *             //In case of `target: toolbar`, `selector` determine to show or not show the tool (returning `true` or `false`).\n *             // As argument of this function you have several information, that will be passed also to the component.\n *             // - `status`: that can be `LAYER`, `LAYERS`, `GROUP` or `GROUPS`, depending if only one or more than one layer is selected.\n *             // - `selectedGroups`: current list of selected groups\n *             // - `selectedLayers`: current list of selected layers\n *             selector: ({ status }) => status === 'LAYER',\n *             // The component to render. It receives as props the same object passed to the `selector` function.\n *             Component: connect(...)(MyButton)\n *                 createSelector(layerSwipeSettingsSelector, (swipeSettings) => ({swipeSettings})),\n *             // ...\n *         },\n * // ...\n * ```\n * @memberof plugins\n * @name TOC\n * @class\n * @prop {boolean} cfg.activateFilterLayer: activate filter layers tool, default `true`\n * @prop {boolean} cfg.activateMapTitle: show map title, default `true`\n * @prop {boolean} cfg.activateTitleTooltip: show tooltip with full title on layers and groups, default `true`\n * @prop {boolean} cfg.activateOpacityTool: show opacity slider in collapsible panel of layer, default `true`\n * @prop {boolean} cfg.activateToolsContainer: activate layers and group global toolbar, default `true`\n * @prop {boolean} cfg.activateLegendTool: show legend in collapsible panel, default `true`\n * @prop {boolean} cfg.activateZoomTool: activate zoom to extension tool, default `true`\n * @prop {boolean} cfg.activateSettingsTool: activate settings of layers and groups, default `true`\n * @prop {boolean} cfg.activateRemoveLayer: activate remove layer tool, default `true`\n * @prop {boolean} cfg.activateQueryTool: activate query tool options, default `false`\n * @prop {boolean} cfg.activateDownloadTool: activate a button to download layer data through wfs, default `false`\n * @prop {boolean} cfg.activateSortLayer: activate drag and drop to sort layers, default `true`\n * @prop {boolean} cfg.activateMetedataTool activate metadata tool in the toolbar, to retrieve metadata from original catalog (WMS and/or CSW), default `false`\n * @prop {boolean} cfg.checkPlugins if true, check if AddLayer, AddGroup ... plugins are present to auto-configure the toolbar\n * @prop {boolean} cfg.activateAddLayerButton: activate a button to open the catalog, default `true`\n * @prop {boolean} cfg.activateAddGroupButton: activate a button to add a new group, default `true`\n * @prop {boolean} cfg.showFullTitleOnExpand shows full length title in the legend. default `false`.\n * @prop {boolean} cfg.hideOpacityTooltip hide toolip on opacity sliders\n * @prop {boolean} cfg.activateRemoveGroup if set to false, do not show the remove button for layer groups. default `true`\n  * @prop {boolean} [addLayersPermissions=true] if false, only users of role ADMIN can see the \"add layers\" button. Default true.\n   @prop {boolean} [removeLayersPermissions=true] if false, only users of role ADMIN have the permission to remove layers. Default true.\n   @prop {boolean} [sortingPermissions=true] if false, only users of role ADMIN have the permission to move layers in the TOC. Default true.\n   @prop {boolean} [addGroupsPermissions=true] if false, only users of role ADMIN have the permission to add groups to the TOC. Default true.\n   @prop {boolean} [removeGroupsPermissions=true] if false, only users of role ADMIN can remove groups from the TOC. Default true.\n   @prop {boolean} [layerInfoToolPermissions=false] if false, only users of role ADMIN can see the layer info tool. Default false.\n * @prop {string[]|string|object|function} cfg.metadataTemplate custom template for displaying metadata\n * example :\n * ```\n * {\n * \"name\": \"TOC\",\n *      \"cfg\": {\n *          \"metadataTemplate\": [\"<div id={model.identifier}>\",\n *              \"<Bootstrap.Table className='responsive'>\",\n *                  \"<thead>\",\n *                  \"<tr>\",\n *                      \"<th>Campo</th><th>Valore</th>\",\n *                  \"</tr>\",\n *                  \"</thead>\",\n *                  \"<tbody>\",\n *                      \"<tr>\",\n *                          \"<td>Identifier</td><td>{model.identifier}</td>\",\n *                      \"</tr>\",\n *                      \"<tr>\",\n *                          \"<td>Title</td><td>{model.title}</td>\",\n *                      \"</tr>\",\n *                      \"<tr>\",\n *                          \"<td>Abstract</td><td>{model.abstract}</td>\",\n *                      \"</tr>\",\n *                      \"<tr>\",\n *                          \"<td>Subject</td><td>{Array.isArray(model.subject) ? model.subject.map((value, i) => <ul key={'meta'+i}><li key={i}>{value}</li></ul>) : model.subject}</td>\",\n *                      \"</tr>\",\n *                      \"<tr>\",\n *                          \"<td>Type</td><td>{model.type}</td>\",\n *                      \"</tr>\",\n *                      \"<tr>\",\n *                          \"<td>Creator</td><td>{model.creator}</td>\",\n *                      \"</tr>\",\n *                  \"</tbody>\",\n *              \"</Bootstrap.Table>\",\n *          \"</div>\"]\n *      }\n *  }\n * ```\n *\n * @prop {element} cfg.groupNodeComponent render a custom component for group node\n * @prop {element} cfg.layerNodeComponent render a custom component for layer node\n * @prop {object} cfg.layerOptions: options to pass to the layer.\n * @prop {object} cfg.layerOptions.legendOptions default options for legend\n * Some of the `layerOptions` are: `legendContainerStyle`, `legendStyle`. These 2 allow to customize the legend CSS.\n * this example is to make the legend scrollable horizontally\n * ```\n * \"layerOptions\": {\n *  \"legendOptions\": {\n *    \"legendContainerStyle\": {\n *     \"overflowX\": \"auto\"\n *    },\n *    \"legendStyle\": {\n *      \"maxWidth\": \"250%\"\n *    }\n *   }\n *  }\n * ```\n * Other `legendOptions` entries can be:\n * - `WMSLegendOptions` it is styling prop for the wms legend.\n * - `legendWidth`: default `width` in pixel to send to the WMS `GetLegendGraphic`. (Can be customized from `LayerSettings`)\n * - `legendHeight`: default `height` in pixel to send to the WMS `GetLegendGraphic`. (Can be customized from `LayerSettings`)\n * - `scaleDependent`, this option activates / deactivates scale dependency.\n * example:\n * ```\n * \"layerOptions\": {\n *  \"legendOptions\": {\n *   \"scaleDependent\": true,\n *   \"WMSLegendOptions\": \"forceLabels:on\",\n *   \"legendWidth\": 12,\n *   \"legendHeight\": 12\n *  }\n * }\n * ```\n * @prop {object} cfg.layerOptions.indicators Another `layerOptions` entry can be `indicators`. `indicators` is an array of icons to add to the TOC. They must satisfy a condition to be shown in the TOC.\n * For the moment only indicators of type `dimension` are supported.\n * example :\n * ```\n * \"layerOptions\" : {\n *   \"indicators\": [{\n *      \"key\": \"dimension\", // key: required id for the entry to render\n *      \"type\": \"dimension\", // type: only one supported is dimension\n *      \"glyph\": \"calendar\", // glyph to use\n *      \"props\": { // props to pass to the indicator\n *          \"style\": {\n *               \"color\": \"#dddddd\",\n *               \"float\": \"right\"\n *          },\n *          \"tooltip\": \"dateFilter.supportedDateFilter\", // tooltip (can be also a localized msgId)\n *          \"placement\": \"bottom\" // tooltip position\n *      },\n *      \"condition\": { // condition (lodash style) to satisfy ( for type dimension, the condition is to match at least one of the \"dimensions\" )\n *          \"name\": \"time\"\n *      }\n *   }]\n * }\n * ```\n * @prop {object} cfg.layerOptions.tooltipOptions Another `layerOptions` entry is `tooltipOptions` which contains options for customizing the tooltip\n * You can customize the max length for the tooltip with `maxLength` (Default is 807)\n * You can change the conjunction string in the \"both\" case with `separator` (Default is \" - \")\n * for example\n * ```\n * \"layerOptions\" : {\n *   \"tooltipOptions\": {\n *     \"maxLength\": 200,\n *     \"separator\": \" : \"\n *   }\n * }\n * ```\n * @prop {object} cfg.metadataOptions options to pass to iso19139 xml metadata parser\n * @prop {object} cfg.metadataOptions.xmlNamespaces namespaces that are used in the metadata xml\n * ```\n * \"xmlNamespaces\": {\n *     \"gmd\": \"http://www.isotc211.org/2005/gmd\",\n *     \"srv\": \"http://www.isotc211.org/2005/srv\",\n *     \"gco\": \"http://www.isotc211.org/2005/gco\",\n *     \"gmx\": \"http://www.isotc211.org/2005/gmx\",\n *     \"gfc\": \"http://www.isotc211.org/2005/gfc\",\n *     \"gts\": \"http://www.isotc211.org/2005/gts\",\n *     \"gml\": \"http://www.opengis.net/gml\"\n * }\n * ```\n * @prop {object[]} cfg.metadataOptions.extractors metadata properties extractor definitions\n * ```\n * \"extractors\": [{\n *     \"properties\": {\n *         \"title\": \"/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString\",\n *         \"lastRevisionDate\": \"/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date[../../gmd:dateType/gmd:CI_DateTypeCode[@codeListValue='revision']]\",\n *         \"pointsOfContact\": {\n *             \"xpath\": \"/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact/gmd:CI_ResponsibleParty\",\n *             \"properties\": {\n *                 \"individualName\": \"gmd:individualName/gco:CharacterString\",\n *                 \"organisationName\": \"gmd:organisationName/gco:CharacterString\",\n *                 \"contactInfo\": {\n *                     \"xpath\": \"gmd:contactInfo/gmd:CI_Contact\",\n *                     \"properties\": {\n *                         \"phone\": \"gmd:phone/gmd:CI_Telephone/gmd:voice/gco:CharacterString\",\n *                         \"hoursOfService\": \"gmd:hoursOfService/gco:CharacterString\"\n *                     }\n *                 },\n *                 \"role\": \"gmd:role/gmd:CI_RoleCode/@codeListValue\"\n *             }\n *         }\n *     },\n *     \"layersRegex\": \"^espub_mob:gev_ajeu$\"\n * }]\n * ```\n *\n * Each extractor is an object, that has two props: \"properties\" and \"layersRegex\". \"layersRegex\" allows to define a regular exression\n * that would be use to determine the names of the layers that the extractor should be used with.\n * \"properties\" is an object that contains a description of what metadata info should be displayed and how.\n * Each property of this object must be in the following form:\n *\n * ```\n * {\n *   [localizedPropKey]: \"xpath string\"\n * }\n * ```\n *\n * or\n *\n * ```\n * {\n *   [localizedPropKey]: {\n *     \"xpath\": \"base xpath string\",\n *     \"properties\": {\n *       ...\n *     }\n *   }\n * }\n * ```\n *\n * \"localizedPropKey\" is a value that is going to be used to compute a localized string id in the default metadata template like this:\n * \"toc.layerMetadata.${localizedPropKey}\". If the translation is missing a default string will be shown containing localizedPropKey.\n * The value of each \"properties\" object's prop can be either a string containing an xpath string that will be used to extract\n * a string from metadata xml to be displayed as a value of the corresponding prop in the ui, or an object\n * that describes a subtable, if metadata prop cannot be displayed just as a singular string value. That object has two properties:\n * \"xpath\", and \"properties\". \"xpath\" defines a relative xpath to be used as a base for all properties in \"properties\". This \"properties\" object\n * adheres to the same structure described here.\n *\n * If there are multiple extractors which \"layersRegex\" matches layer's name, the one that occures in the array first will be used for\n * metadata processing.\n */","meta":{"filename":"TOC.jsx","lineno":634,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Provides Table Of Content visualization. Lists the layers on the map, organized in groups and provides the possibility to select them.\nBased on current layer(s)/group(s) selection, shows a set of tools for the current selection.\nThis is also a plugin container. Tools injected providing only the name to the container need an internal support (deprecated). Here an example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>export default createPlugin('AddGroup', {\n    component: AddGroupPlugin,\n    containers: {\n        TOC: {\n            doNotHide: true,\n            name: &quot;AddGroup&quot; // this works only if AddGroup is one of the plugins internally supported by TOC.\n        }\n    }\n});\n</code></pre>\n<p>The new <strong>(recommended)</strong> mode to inject tools in the TOC is by using <code>target</code>.\nThis method allows to insert a component in the defined target. Actually <code>toolbar</code> is the only target supported for the <code>target</code>, and allows to add a button on the toolbar.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>createPlugin(\n 'MyPlugin',\n {\n     containers: {\n        TOC: {\n            name: &quot;TOOLNAME&quot;, // a name for the current tool.\n            target: &quot;toolbar&quot;, // the target where to insert the component\n            //In case of `target: toolbar`, `selector` determine to show or not show the tool (returning `true` or `false`).\n            // As argument of this function you have several information, that will be passed also to the component.\n            // - `status`: that can be `LAYER`, `LAYERS`, `GROUP` or `GROUPS`, depending if only one or more than one layer is selected.\n            // - `selectedGroups`: current list of selected groups\n            // - `selectedLayers`: current list of selected layers\n            selector: ({ status }) => status === 'LAYER',\n            // The component to render. It receives as props the same object passed to the `selector` function.\n            Component: connect(...)(MyButton)\n                createSelector(layerSwipeSettingsSelector, (swipeSettings) => ({swipeSettings})),\n            // ...\n        },\n// ...\n</code></pre>","memberof":"plugins","name":"TOC","kind":"class","properties":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>if false, only users of role ADMIN have the permission to add groups to the TOC. Default true.</p>","name":"addGroupsPermissions"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>if false, only users of role ADMIN can see the &quot;add layers&quot; button. Default true.</p>","name":"addLayersPermissions"},{"type":{"names":["boolean"]},"description":"<p>activate a button to add a new group, default <code>true</code></p>","name":"cfg.activateAddGroupButton:"},{"type":{"names":["boolean"]},"description":"<p>activate a button to open the catalog, default <code>true</code></p>","name":"cfg.activateAddLayerButton:"},{"type":{"names":["boolean"]},"description":"<p>activate a button to download layer data through wfs, default <code>false</code></p>","name":"cfg.activateDownloadTool:"},{"type":{"names":["boolean"]},"description":"<p>activate filter layers tool, default <code>true</code></p>","name":"cfg.activateFilterLayer:"},{"type":{"names":["boolean"]},"description":"<p>show legend in collapsible panel, default <code>true</code></p>","name":"cfg.activateLegendTool:"},{"type":{"names":["boolean"]},"description":"<p>show map title, default <code>true</code></p>","name":"cfg.activateMapTitle:"},{"type":{"names":["boolean"]},"description":"<p>activate metadata tool in the toolbar, to retrieve metadata from original catalog (WMS and/or CSW), default <code>false</code></p>","name":"cfg.activateMetedataTool"},{"type":{"names":["boolean"]},"description":"<p>show opacity slider in collapsible panel of layer, default <code>true</code></p>","name":"cfg.activateOpacityTool:"},{"type":{"names":["boolean"]},"description":"<p>activate query tool options, default <code>false</code></p>","name":"cfg.activateQueryTool:"},{"type":{"names":["boolean"]},"description":"<p>if set to false, do not show the remove button for layer groups. default <code>true</code></p>","name":"cfg.activateRemoveGroup"},{"type":{"names":["boolean"]},"description":"<p>activate remove layer tool, default <code>true</code></p>","name":"cfg.activateRemoveLayer:"},{"type":{"names":["boolean"]},"description":"<p>activate settings of layers and groups, default <code>true</code></p>","name":"cfg.activateSettingsTool:"},{"type":{"names":["boolean"]},"description":"<p>activate drag and drop to sort layers, default <code>true</code></p>","name":"cfg.activateSortLayer:"},{"type":{"names":["boolean"]},"description":"<p>show tooltip with full title on layers and groups, default <code>true</code></p>","name":"cfg.activateTitleTooltip:"},{"type":{"names":["boolean"]},"description":"<p>activate layers and group global toolbar, default <code>true</code></p>","name":"cfg.activateToolsContainer:"},{"type":{"names":["boolean"]},"description":"<p>activate zoom to extension tool, default <code>true</code></p>","name":"cfg.activateZoomTool:"},{"type":{"names":["boolean"]},"description":"<p>if true, check if AddLayer, AddGroup ... plugins are present to auto-configure the toolbar</p>","name":"cfg.checkPlugins"},{"type":{"names":["element"]},"description":"<p>render a custom component for group node</p>","name":"cfg.groupNodeComponent"},{"type":{"names":["boolean"]},"description":"<p>hide toolip on opacity sliders</p>","name":"cfg.hideOpacityTooltip"},{"type":{"names":["element"]},"description":"<p>render a custom component for layer node</p>","name":"cfg.layerNodeComponent"},{"type":{"names":["object"]},"description":"<p>options to pass to the layer.</p>","name":"cfg.layerOptions:"},{"type":{"names":["object"]},"description":"<p>Another <code>layerOptions</code> entry can be <code>indicators</code>. <code>indicators</code> is an array of icons to add to the TOC. They must satisfy a condition to be shown in the TOC.\nFor the moment only indicators of type <code>dimension</code> are supported.\nexample :</p>\n<pre class=\"prettyprint source\"><code>&quot;layerOptions&quot; : {\n  &quot;indicators&quot;: [{\n     &quot;key&quot;: &quot;dimension&quot;, // key: required id for the entry to render\n     &quot;type&quot;: &quot;dimension&quot;, // type: only one supported is dimension\n     &quot;glyph&quot;: &quot;calendar&quot;, // glyph to use\n     &quot;props&quot;: { // props to pass to the indicator\n         &quot;style&quot;: {\n              &quot;color&quot;: &quot;#dddddd&quot;,\n              &quot;float&quot;: &quot;right&quot;\n         },\n         &quot;tooltip&quot;: &quot;dateFilter.supportedDateFilter&quot;, // tooltip (can be also a localized msgId)\n         &quot;placement&quot;: &quot;bottom&quot; // tooltip position\n     },\n     &quot;condition&quot;: { // condition (lodash style) to satisfy ( for type dimension, the condition is to match at least one of the &quot;dimensions&quot; )\n         &quot;name&quot;: &quot;time&quot;\n     }\n  }]\n}\n</code></pre>","name":"cfg.layerOptions.indicators"},{"type":{"names":["object"]},"description":"<p>default options for legend\nSome of the <code>layerOptions</code> are: <code>legendContainerStyle</code>, <code>legendStyle</code>. These 2 allow to customize the legend CSS.\nthis example is to make the legend scrollable horizontally</p>\n<pre class=\"prettyprint source\"><code>&quot;layerOptions&quot;: {\n &quot;legendOptions&quot;: {\n   &quot;legendContainerStyle&quot;: {\n    &quot;overflowX&quot;: &quot;auto&quot;\n   },\n   &quot;legendStyle&quot;: {\n     &quot;maxWidth&quot;: &quot;250%&quot;\n   }\n  }\n }\n</code></pre>\n<p>Other <code>legendOptions</code> entries can be:</p>\n<ul>\n<li><code>WMSLegendOptions</code> it is styling prop for the wms legend.</li>\n<li><code>legendWidth</code>: default <code>width</code> in pixel to send to the WMS <code>GetLegendGraphic</code>. (Can be customized from <code>LayerSettings</code>)</li>\n<li><code>legendHeight</code>: default <code>height</code> in pixel to send to the WMS <code>GetLegendGraphic</code>. (Can be customized from <code>LayerSettings</code>)</li>\n<li><code>scaleDependent</code>, this option activates / deactivates scale dependency.\nexample:</li>\n</ul>\n<pre class=\"prettyprint source\"><code>&quot;layerOptions&quot;: {\n &quot;legendOptions&quot;: {\n  &quot;scaleDependent&quot;: true,\n  &quot;WMSLegendOptions&quot;: &quot;forceLabels:on&quot;,\n  &quot;legendWidth&quot;: 12,\n  &quot;legendHeight&quot;: 12\n }\n}\n</code></pre>","name":"cfg.layerOptions.legendOptions"},{"type":{"names":["object"]},"description":"<p>Another <code>layerOptions</code> entry is <code>tooltipOptions</code> which contains options for customizing the tooltip\nYou can customize the max length for the tooltip with <code>maxLength</code> (Default is 807)\nYou can change the conjunction string in the &quot;both&quot; case with <code>separator</code> (Default is &quot; - &quot;)\nfor example</p>\n<pre class=\"prettyprint source\"><code>&quot;layerOptions&quot; : {\n  &quot;tooltipOptions&quot;: {\n    &quot;maxLength&quot;: 200,\n    &quot;separator&quot;: &quot; : &quot;\n  }\n}\n</code></pre>","name":"cfg.layerOptions.tooltipOptions"},{"type":{"names":["object"]},"description":"<p>options to pass to iso19139 xml metadata parser</p>","name":"cfg.metadataOptions"},{"type":{"names":["Array.<object>"]},"description":"<p>metadata properties extractor definitions</p>\n<pre class=\"prettyprint source\"><code>&quot;extractors&quot;: [{\n    &quot;properties&quot;: {\n        &quot;title&quot;: &quot;/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString&quot;,\n        &quot;lastRevisionDate&quot;: &quot;/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date[../../gmd:dateType/gmd:CI_DateTypeCode[@codeListValue='revision']]&quot;,\n        &quot;pointsOfContact&quot;: {\n            &quot;xpath&quot;: &quot;/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact/gmd:CI_ResponsibleParty&quot;,\n            &quot;properties&quot;: {\n                &quot;individualName&quot;: &quot;gmd:individualName/gco:CharacterString&quot;,\n                &quot;organisationName&quot;: &quot;gmd:organisationName/gco:CharacterString&quot;,\n                &quot;contactInfo&quot;: {\n                    &quot;xpath&quot;: &quot;gmd:contactInfo/gmd:CI_Contact&quot;,\n                    &quot;properties&quot;: {\n                        &quot;phone&quot;: &quot;gmd:phone/gmd:CI_Telephone/gmd:voice/gco:CharacterString&quot;,\n                        &quot;hoursOfService&quot;: &quot;gmd:hoursOfService/gco:CharacterString&quot;\n                    }\n                },\n                &quot;role&quot;: &quot;gmd:role/gmd:CI_RoleCode/@codeListValue&quot;\n            }\n        }\n    },\n    &quot;layersRegex&quot;: &quot;^espub_mob:gev_ajeu$&quot;\n}]\n</code></pre>\n<p>Each extractor is an object, that has two props: &quot;properties&quot; and &quot;layersRegex&quot;. &quot;layersRegex&quot; allows to define a regular exression\nthat would be use to determine the names of the layers that the extractor should be used with.\n&quot;properties&quot; is an object that contains a description of what metadata info should be displayed and how.\nEach property of this object must be in the following form:</p>\n<pre class=\"prettyprint source\"><code>{\n  [localizedPropKey]: &quot;xpath string&quot;\n}\n</code></pre>\n<p>or</p>\n<pre class=\"prettyprint source\"><code>{\n  [localizedPropKey]: {\n    &quot;xpath&quot;: &quot;base xpath string&quot;,\n    &quot;properties&quot;: {\n      ...\n    }\n  }\n}\n</code></pre>\n<p>&quot;localizedPropKey&quot; is a value that is going to be used to compute a localized string id in the default metadata template like this:\n&quot;toc.layerMetadata.${localizedPropKey}&quot;. If the translation is missing a default string will be shown containing localizedPropKey.\nThe value of each &quot;properties&quot; object's prop can be either a string containing an xpath string that will be used to extract\na string from metadata xml to be displayed as a value of the corresponding prop in the ui, or an object\nthat describes a subtable, if metadata prop cannot be displayed just as a singular string value. That object has two properties:\n&quot;xpath&quot;, and &quot;properties&quot;. &quot;xpath&quot; defines a relative xpath to be used as a base for all properties in &quot;properties&quot;. This &quot;properties&quot; object\nadheres to the same structure described here.</p>\n<p>If there are multiple extractors which &quot;layersRegex&quot; matches layer's name, the one that occures in the array first will be used for\nmetadata processing.</p>","name":"cfg.metadataOptions.extractors"},{"type":{"names":["object"]},"description":"<p>namespaces that are used in the metadata xml</p>\n<pre class=\"prettyprint source\"><code>&quot;xmlNamespaces&quot;: {\n    &quot;gmd&quot;: &quot;http://www.isotc211.org/2005/gmd&quot;,\n    &quot;srv&quot;: &quot;http://www.isotc211.org/2005/srv&quot;,\n    &quot;gco&quot;: &quot;http://www.isotc211.org/2005/gco&quot;,\n    &quot;gmx&quot;: &quot;http://www.isotc211.org/2005/gmx&quot;,\n    &quot;gfc&quot;: &quot;http://www.isotc211.org/2005/gfc&quot;,\n    &quot;gts&quot;: &quot;http://www.isotc211.org/2005/gts&quot;,\n    &quot;gml&quot;: &quot;http://www.opengis.net/gml&quot;\n}\n</code></pre>","name":"cfg.metadataOptions.xmlNamespaces"},{"type":{"names":["Array.<string>","string","object","function"]},"description":"<p>custom template for displaying metadata\nexample :</p>\n<pre class=\"prettyprint source\"><code>{\n&quot;name&quot;: &quot;TOC&quot;,\n     &quot;cfg&quot;: {\n         &quot;metadataTemplate&quot;: [&quot;&lt;div id={model.identifier}>&quot;,\n             &quot;&lt;Bootstrap.Table className='responsive'>&quot;,\n                 &quot;&lt;thead>&quot;,\n                 &quot;&lt;tr>&quot;,\n                     &quot;&lt;th>Campo&lt;/th>&lt;th>Valore&lt;/th>&quot;,\n                 &quot;&lt;/tr>&quot;,\n                 &quot;&lt;/thead>&quot;,\n                 &quot;&lt;tbody>&quot;,\n                     &quot;&lt;tr>&quot;,\n                         &quot;&lt;td>Identifier&lt;/td>&lt;td>{model.identifier}&lt;/td>&quot;,\n                     &quot;&lt;/tr>&quot;,\n                     &quot;&lt;tr>&quot;,\n                         &quot;&lt;td>Title&lt;/td>&lt;td>{model.title}&lt;/td>&quot;,\n                     &quot;&lt;/tr>&quot;,\n                     &quot;&lt;tr>&quot;,\n                         &quot;&lt;td>Abstract&lt;/td>&lt;td>{model.abstract}&lt;/td>&quot;,\n                     &quot;&lt;/tr>&quot;,\n                     &quot;&lt;tr>&quot;,\n                         &quot;&lt;td>Subject&lt;/td>&lt;td>{Array.isArray(model.subject) ? model.subject.map((value, i) => &lt;ul key={'meta'+i}>&lt;li key={i}>{value}&lt;/li>&lt;/ul>) : model.subject}&lt;/td>&quot;,\n                     &quot;&lt;/tr>&quot;,\n                     &quot;&lt;tr>&quot;,\n                         &quot;&lt;td>Type&lt;/td>&lt;td>{model.type}&lt;/td>&quot;,\n                     &quot;&lt;/tr>&quot;,\n                     &quot;&lt;tr>&quot;,\n                         &quot;&lt;td>Creator&lt;/td>&lt;td>{model.creator}&lt;/td>&quot;,\n                     &quot;&lt;/tr>&quot;,\n                 &quot;&lt;/tbody>&quot;,\n             &quot;&lt;/Bootstrap.Table>&quot;,\n         &quot;&lt;/div>&quot;]\n     }\n }\n</code></pre>","name":"cfg.metadataTemplate"},{"type":{"names":["boolean"]},"description":"<p>shows full length title in the legend. default <code>false</code>.</p>","name":"cfg.showFullTitleOnExpand"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"<p>if false, only users of role ADMIN can see the layer info tool. Default false.</p>","name":"layerInfoToolPermissions"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>if false, only users of role ADMIN can remove groups from the TOC. Default true.</p>","name":"removeGroupsPermissions"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>if false, only users of role ADMIN have the permission to remove layers. Default true.</p>","name":"removeLayersPermissions"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"<p>if false, only users of role ADMIN have the permission to move layers in the TOC. Default true.</p>","name":"sortingPermissions"}],"scope":"static","longname":"plugins.TOC","$longname":"plugins.TOC"},{"comment":"/**\n * TOCItemsSettings plugin. This plugin allows to edit settings of groups and layers.\n * Inherit props from ResizableModal (dock = false) and DockPanel (dock = true) in cfg\n *\n * @class\n * @name TOCItemsSettings\n * @memberof plugins\n * @static\n *\n * @prop cfg.dock {bool} true shows dock panel, false shows modal\n * @prop cfg.width {number} width of panel\n * @prop cfg.showFeatureInfoTab {bool} enable/disbale feature info settings\n * @prop cfg.enableIFrameModule {bool} enable iframe in template editor of feature info, default true\n * @prop cfg.hideTitleTranslations {bool} if true hide the title translations tool\n * @prop cfg.showTooltipOptions {bool} if true, it shows tooltip section\n * @prop cfg.initialActiveTab {string} tab that will be enabled initially when the settings are opened. Possible values:\n * 'general' (General tab), 'display' (Display tab), 'style' (Style tab), 'feature' (Feature info tab).\n * @example\n * {\n *   \"name\": \"TOCItemsSettings\",\n *   \"cfg\": {\n *       \"width\": 300\n *    }\n * }\n */","meta":{"filename":"TOCItemsSettings.jsx","lineno":62,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>TOCItemsSettings plugin. This plugin allows to edit settings of groups and layers.\nInherit props from ResizableModal (dock = false) and DockPanel (dock = true) in cfg</p>","kind":"class","name":"TOCItemsSettings","memberof":"plugins","scope":"static","properties":[{"type":{"names":["bool"]},"description":"<p>true shows dock panel, false shows modal</p>","name":"cfg.dock"},{"type":{"names":["bool"]},"description":"<p>enable iframe in template editor of feature info, default true</p>","name":"cfg.enableIFrameModule"},{"type":{"names":["bool"]},"description":"<p>if true hide the title translations tool</p>","name":"cfg.hideTitleTranslations"},{"type":{"names":["string"]},"description":"<p>tab that will be enabled initially when the settings are opened. Possible values:\n'general' (General tab), 'display' (Display tab), 'style' (Style tab), 'feature' (Feature info tab).</p>","name":"cfg.initialActiveTab"},{"type":{"names":["bool"]},"description":"<p>enable/disbale feature info settings</p>","name":"cfg.showFeatureInfoTab"},{"type":{"names":["bool"]},"description":"<p>if true, it shows tooltip section</p>","name":"cfg.showTooltipOptions"},{"type":{"names":["number"]},"description":"<p>width of panel</p>","name":"cfg.width"}],"examples":["{\n  \"name\": \"TOCItemsSettings\",\n  \"cfg\": {\n      \"width\": 300\n   }\n}"],"longname":"plugins.TOCItemsSettings","$longname":"plugins.TOCItemsSettings"},{"comment":"/**\n * Container for map tools, rendered in the bottom right corner of the map.\n * @name Toolbar\n * @class\n * @memberof plugins\n */","meta":{"filename":"Toolbar.jsx","lineno":146,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Container for map tools, rendered in the bottom right corner of the map.</p>","name":"Toolbar","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Toolbar","$longname":"plugins.Toolbar"},{"comment":"/**\n * Tutorial plugin. Enables the steps of tutorial.\n * @prop {string} cfg.preset overrides the default_tutorial with another from the preset folder\n * @prop {object} cfg.presetList overrides preset list of MapStore2\n * @prop {boolean} cfg.showCheckbox shows/hides checkbox to disable tutorial next autostart\n * @prop {object} cfg.scrollIntoViewOptions options applied to Element.scrollIntoView, {\"block\": \"end\"}\n * @prop {number} cfg.scrollOffset changes the scroll offset\n * @memberof plugins\n * @class Tutorial\n * @example\n * // preset example in localConfig\n * // overrides the default_tutorial with another from the preset folder\n * // by changing the name\n * {\n *  \"name\": \"Tutorial\",\n *  \"cfg\": {\n *   \"preset\": \"home_tutorial\"\n *  }\n * }\n *\n * // presetList example in localConfig\n * // overrides preset list of MapStore2\n * // note: set first step selector to \"\"#intro-tutorial\", enables autostart of tutorial\n * {\n *  \"name\": \"Tutorial\",\n *  \"cfg\": {\n *   \"presetList\": {\n *    \"default_tutorial\": [\n *     {\n *      \"title\": \"Welcome\",\n *      \"text\": \"my intro text\",\n *      \"selector\": \"#intro-tutorial\"\n *     },\n *     {\n *      \"translation\": \"myTranslation\" // id from translation file,\n *      \"selector\": \"#my-first-step-selector\"\n *     },\n *     {\n *      \"translationHTML\": \"myTranslationHTML\" // id from translation file,\n *      \"selector\": \"#my-first-step-selector\"\n *     }\n *    ]\n *   }\n *  }\n * }\n *\n * // translation file example\n * ...\n *  \"tutorial\": {\n *   ...\n *   \"myIntroTranslation\": {\n *    \"title\": \"My intro title\",\n *    \"text\": \"My intro description\"\n *   },\n *    \"myTranslation\": {\n *    \"title\": \"My first step title\",\n *    \"text\": \"My first step description\"\n *   },\n *   \"mySecondStepTranslation\": {\n *    \"title\": \"My second step title\",\n *    \"text\": \"My second step description\"\n *   },\n *   \"myTranslationHTML\": {\n *    \"title\": \"<div style=\"color:blue;\">My html step title</div>\",\n *    \"text\": \"<div style=\"color:red;\">My html step description</div>\"\n *   }\n *   ...\n *  }\n * ...\n * // translation file example with actions\n * // action param could be an object or array of objects\n * // action type are triggered on tour actions and they could be `start`, `next` and `back`\n * ...\n *  \"tutorial\": {\n *   ...\n *   \"myIntroTranslation\": {\n *    \"title\": \"My intro title\",\n *    \"text\": \"My intro description\",\n *    \"action\": { start: { type: 'MY_START_ACTION' }}\n *   },\n *    \"myTranslation\": {\n *    \"title\": \"My first step title\",\n *    \"text\": \"My first step description\",\n *    \"action\": { back: { type: 'MY_BACK_ACTION' }}\n *   },\n *   \"mySecondStepTranslation\": {\n *    \"title\": \"My second step title\",\n *    \"text\": \"My second step description\",\n *    \"action\": { next: { type: 'MY_NEXT_ACTION' }}\n *   },\n *   \"myTranslationHTML\": {\n *    \"title\": \"<div style=\"color:blue;\">My html step title</div>\",\n *    \"text\": \"<div style=\"color:red;\">My html step description</div>\",\n *    \"action\": { next: [{ type: 'MY_FIRST_ACTION' }, { type: 'MY_SECOND_ACTION' }]}\n *   }\n *   ...\n *  }\n * ...\n */","meta":{"filename":"Tutorial.jsx","lineno":31,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Tutorial plugin. Enables the steps of tutorial.</p>","properties":[{"type":{"names":["string"]},"description":"<p>overrides the default_tutorial with another from the preset folder</p>","name":"cfg.preset"},{"type":{"names":["object"]},"description":"<p>overrides preset list of MapStore2</p>","name":"cfg.presetList"},{"type":{"names":["object"]},"description":"<p>options applied to Element.scrollIntoView, {&quot;block&quot;: &quot;end&quot;}</p>","name":"cfg.scrollIntoViewOptions"},{"type":{"names":["number"]},"description":"<p>changes the scroll offset</p>","name":"cfg.scrollOffset"},{"type":{"names":["boolean"]},"description":"<p>shows/hides checkbox to disable tutorial next autostart</p>","name":"cfg.showCheckbox"}],"memberof":"plugins","kind":"class","name":"Tutorial","examples":["// preset example in localConfig\n// overrides the default_tutorial with another from the preset folder\n// by changing the name\n{\n \"name\": \"Tutorial\",\n \"cfg\": {\n  \"preset\": \"home_tutorial\"\n }\n}\n\n// presetList example in localConfig\n// overrides preset list of MapStore2\n// note: set first step selector to \"\"#intro-tutorial\", enables autostart of tutorial\n{\n \"name\": \"Tutorial\",\n \"cfg\": {\n  \"presetList\": {\n   \"default_tutorial\": [\n    {\n     \"title\": \"Welcome\",\n     \"text\": \"my intro text\",\n     \"selector\": \"#intro-tutorial\"\n    },\n    {\n     \"translation\": \"myTranslation\" // id from translation file,\n     \"selector\": \"#my-first-step-selector\"\n    },\n    {\n     \"translationHTML\": \"myTranslationHTML\" // id from translation file,\n     \"selector\": \"#my-first-step-selector\"\n    }\n   ]\n  }\n }\n}\n\n// translation file example\n...\n \"tutorial\": {\n  ...\n  \"myIntroTranslation\": {\n   \"title\": \"My intro title\",\n   \"text\": \"My intro description\"\n  },\n   \"myTranslation\": {\n   \"title\": \"My first step title\",\n   \"text\": \"My first step description\"\n  },\n  \"mySecondStepTranslation\": {\n   \"title\": \"My second step title\",\n   \"text\": \"My second step description\"\n  },\n  \"myTranslationHTML\": {\n   \"title\": \"<div style=\"color:blue;\">My html step title</div>\",\n   \"text\": \"<div style=\"color:red;\">My html step description</div>\"\n  }\n  ...\n }\n...\n// translation file example with actions\n// action param could be an object or array of objects\n// action type are triggered on tour actions and they could be `start`, `next` and `back`\n...\n \"tutorial\": {\n  ...\n  \"myIntroTranslation\": {\n   \"title\": \"My intro title\",\n   \"text\": \"My intro description\",\n   \"action\": { start: { type: 'MY_START_ACTION' }}\n  },\n   \"myTranslation\": {\n   \"title\": \"My first step title\",\n   \"text\": \"My first step description\",\n   \"action\": { back: { type: 'MY_BACK_ACTION' }}\n  },\n  \"mySecondStepTranslation\": {\n   \"title\": \"My second step title\",\n   \"text\": \"My second step description\",\n   \"action\": { next: { type: 'MY_NEXT_ACTION' }}\n  },\n  \"myTranslationHTML\": {\n   \"title\": \"<div style=\"color:blue;\">My html step title</div>\",\n   \"text\": \"<div style=\"color:red;\">My html step description</div>\",\n   \"action\": { next: [{ type: 'MY_FIRST_ACTION' }, { type: 'MY_SECOND_ACTION' }]}\n  }\n  ...\n }\n..."],"scope":"static","longname":"plugins.Tutorial","$longname":"plugins.Tutorial"},{"comment":"/**\n * Renders a \"undo\" button in the {@link #plugins.Toolbar|Toolbar} to get back in\n * map navigation history.\n * @name Undo\n * @class\n * @memberof plugins\n */","meta":{"filename":"History.jsx","lineno":20,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Renders a &quot;undo&quot; button in the {@link #plugins.Toolbar|Toolbar} to get back in\nmap navigation history.</p>","name":"Undo","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.Undo","$longname":"plugins.Undo"},{"comment":"/**\n * Shows the optional plugins list to activate/deactivate.\n * It is made to be used in map contexts, where some plugins has been configured\n * as optional, selectable by the user.\n * The list of plugins to activate/deactivate is accessible from the {@link #plugins.BurgerMenu|BurgerMenu}\n * @name UserExtensions\n * @class\n * @memberof plugins\n */","meta":{"filename":"UserExtensions.jsx","lineno":82,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Shows the optional plugins list to activate/deactivate.\nIt is made to be used in map contexts, where some plugins has been configured\nas optional, selectable by the user.\nThe list of plugins to activate/deactivate is accessible from the {@link #plugins.BurgerMenu|BurgerMenu}</p>","name":"UserExtensions","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.UserExtensions","$longname":"plugins.UserExtensions"},{"comment":"/**\n * Allows an administrator to browse users.\n * Renders in {@link #plugins.Manager|Manager} plugin.\n * @name UserManager\n * @memberof plugins\n * @class\n */","meta":{"filename":"UserManager.jsx","lineno":85,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins/manager","code":{}},"description":"<p>Allows an administrator to browse users.\nRenders in {@link #plugins.Manager|Manager} plugin.</p>","name":"UserManager","memberof":"plugins","kind":"class","scope":"static","longname":"plugins.UserManager","$longname":"plugins.UserManager"},{"comment":"/**\n * `UserSession` plugin allows the user to automatically save the current map and restore it on the second access to the same map/context, without the necessity to save.\n *\n * User sessions persistence can be configured to use different storages. The default implementation is based on `localStorage`,\n * so the session is saved on the user's browser.\n *\n * It is also possible to save the session on a database, so it can be shared on different browsers / devices.\n *\n * The user session workflow works this way:\n *\n * * a session is identified by the combination of the current map and user identifiers (so that a session exists for each user / map combination)\n * * a session is loaded from the store and if it exists, it overrides the standard map configuration partially; by default current map centering and zoom are overridden\n * * the session is automatically saved at a configurable interval\n * * an item in the `BurgerMenu` allows to restore the session to the default map configuration\n *\n * Since user session handling works very low level, its basic features needs to be configured at the `localConfig.json`, globally, in the dedicated `userSession` object.\n * Then including or not including the plugin `UserSession` in your application context will determine the possibility to save (and so restore) the session.\n *\n * The `userSession` object in `localConfig.json` can be configured with the following properties:\n *\n * * `enabled`: 'false' / 'true'. Enables the functionality at global level.\n * * `saveFrequency`: interval (in milliseconds) between saves\n * * `provider`: the name of the storage provider to use. The options are:\n *     * `browser`: (default) localStorage based\n *     * `server`: database storage (based on MapStore backend services)\n *     * `serverbackup`: combination of browser and server, with a configurable backupFrequency interval, so that browser saving it's more frequent than server one\n * * `contextOnly`: true / false, when true each MapStore context will share only one session, if false each context sub-map will have its own session\n *\n * You can also implement your own, by defining its API and registering it on the Providers object:\n *\n * ```javascript\n * import {Providers} from \"api/usersession\"\n * Providers.mystorage = {\n *     getSession: ...,\n *     writeSession: ...,\n *     removeSession: ...\n * }\n * ```\n * @memberof plugins\n * @name UserSession\n * @class\n */","meta":{"filename":"UserSession.jsx","lineno":50,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p><code>UserSession</code> plugin allows the user to automatically save the current map and restore it on the second access to the same map/context, without the necessity to save.</p>\n<p>User sessions persistence can be configured to use different storages. The default implementation is based on <code>localStorage</code>,\nso the session is saved on the user's browser.</p>\n<p>It is also possible to save the session on a database, so it can be shared on different browsers / devices.</p>\n<p>The user session workflow works this way:</p>\n<ul>\n<li>a session is identified by the combination of the current map and user identifiers (so that a session exists for each user / map combination)</li>\n<li>a session is loaded from the store and if it exists, it overrides the standard map configuration partially; by default current map centering and zoom are overridden</li>\n<li>the session is automatically saved at a configurable interval</li>\n<li>an item in the <code>BurgerMenu</code> allows to restore the session to the default map configuration</li>\n</ul>\n<p>Since user session handling works very low level, its basic features needs to be configured at the <code>localConfig.json</code>, globally, in the dedicated <code>userSession</code> object.\nThen including or not including the plugin <code>UserSession</code> in your application context will determine the possibility to save (and so restore) the session.</p>\n<p>The <code>userSession</code> object in <code>localConfig.json</code> can be configured with the following properties:</p>\n<ul>\n<li><code>enabled</code>: 'false' / 'true'. Enables the functionality at global level.</li>\n<li><code>saveFrequency</code>: interval (in milliseconds) between saves</li>\n<li><code>provider</code>: the name of the storage provider to use. The options are:\n<ul>\n<li><code>browser</code>: (default) localStorage based</li>\n<li><code>server</code>: database storage (based on MapStore backend services)</li>\n<li><code>serverbackup</code>: combination of browser and server, with a configurable backupFrequency interval, so that browser saving it's more frequent than server one</li>\n</ul>\n</li>\n<li><code>contextOnly</code>: true / false, when true each MapStore context will share only one session, if false each context sub-map will have its own session</li>\n</ul>\n<p>You can also implement your own, by defining its API and registering it on the Providers object:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>import {Providers} from &quot;api/usersession&quot;\nProviders.mystorage = {\n    getSession: ...,\n    writeSession: ...,\n    removeSession: ...\n}\n</code></pre>","memberof":"plugins","name":"UserSession","kind":"class","scope":"static","longname":"plugins.UserSession","$longname":"plugins.UserSession"},{"comment":"/**\n * Renders widgets on the map.\n * @memberof plugins\n * @name Widgets\n * @class\n * @prop {object} [toolsOptions] options to show and manage widgets tools. Widget tools are buttons available in some widgets. Any entry of this object can be configured using accessRules.\n *       Access rules can be defined using the syntax (@see components.misc.enhancers.security.accessRuleParser).\n *       The accessible parts of the state are `{mapInfo: {canEdit, canDelete...}, user: {role: \"USER\"}}`. So you can define rules like this:\n *       ```\n *       {showPin: [\"__OR__\", \"user.role===ADMIN\", \"mapInfo.canEdit\"]}\n *       ```\n * @prop {boolean|string|array} [toolsOptions.showPin] show lock tool. By default is visible only to the admin\n * @prop {boolean|string|array} [toolsOptions.showHide] show the \"hide tool\" for the widget (the tool allows to hide the widget to users that have `seeHidden=false` ). By default is false, in the most common case it should be the same of `seeHidden`.\n * @prop {boolean|string|array} [toolsOptions.seeHidden] hides the widgets under particular conditions\n *\n */","meta":{"filename":"Widgets.jsx","lineno":158,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Renders widgets on the map.</p>","memberof":"plugins","name":"Widgets","kind":"class","properties":[{"type":{"names":["object"]},"optional":true,"description":"<p>options to show and manage widgets tools. Widget tools are buttons available in some widgets. Any entry of this object can be configured using accessRules.\nAccess rules can be defined using the syntax (@see components.misc.enhancers.security.accessRuleParser).\nThe accessible parts of the state are <code>{mapInfo: {canEdit, canDelete...}, user: {role: &quot;USER&quot;}}</code>. So you can define rules like this:\n<code>      {showPin: [&quot;__OR__&quot;, &quot;user.role===ADMIN&quot;, &quot;mapInfo.canEdit&quot;]}      </code></p>","name":"toolsOptions"},{"type":{"names":["boolean","string","array"]},"optional":true,"description":"<p>hides the widgets under particular conditions</p>","name":"toolsOptions.seeHidden"},{"type":{"names":["boolean","string","array"]},"optional":true,"description":"<p>show the &quot;hide tool&quot; for the widget (the tool allows to hide the widget to users that have <code>seeHidden=false</code> ). By default is false, in the most common case it should be the same of <code>seeHidden</code>.</p>","name":"toolsOptions.showHide"},{"type":{"names":["boolean","string","array"]},"optional":true,"description":"<p>show lock tool. By default is visible only to the admin</p>","name":"toolsOptions.showPin"}],"scope":"static","longname":"plugins.Widgets","$longname":"plugins.Widgets"},{"comment":"/**\n * Editor for map widgets\n * @memberof plugins\n * @name WidgetsBuilder\n * @class\n *\n */","meta":{"filename":"WidgetsBuilder.jsx","lineno":96,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Editor for map widgets</p>","memberof":"plugins","name":"WidgetsBuilder","kind":"class","scope":"static","longname":"plugins.WidgetsBuilder","$longname":"plugins.WidgetsBuilder"},{"comment":"/**\n * Plugin that allow to collapse widgets. Shows a small tray where to see the collapsed plugins list.\n * @name WidgetsTray\n * @memberof plugins\n * @prop {boolean|string|array} [toolsOptions.seeHidden] hides the widgets under particular conditions. **Must** be the same of rule of the Widget plugin. @see plugins.Widgets.\n * @class\n */","meta":{"filename":"WidgetsTray.jsx","lineno":14,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Plugin that allow to collapse widgets. Shows a small tray where to see the collapsed plugins list.</p>","name":"WidgetsTray","memberof":"plugins","properties":[{"type":{"names":["boolean","string","array"]},"optional":true,"description":"<p>hides the widgets under particular conditions. <strong>Must</strong> be the same of rule of the Widget plugin. @see plugins.Widgets.</p>","name":"toolsOptions.seeHidden"}],"kind":"class","scope":"static","longname":"plugins.WidgetsTray","$longname":"plugins.WidgetsTray"},{"comment":"/**\n * Button to zoom to map max Extent.\n * @name ZoomAll\n * @class\n * @memberof plugins\n */","meta":{"filename":"ZoomAll.jsx","lineno":37,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>Button to zoom to map max Extent.</p>","name":"ZoomAll","kind":"class","memberof":"plugins","scope":"static","longname":"plugins.ZoomAll","$longname":"plugins.ZoomAll"},{"comment":"/**\n  * ZoomIn Plugin. Provides button to zoom in\n  * @class  ZoomIn\n  * @memberof plugins\n  * @static\n  *\n  * @prop {object} cfg.style CSS to apply to the button\n  * @prop {string} cfg.className the class name for the button\n  *\n  */","meta":{"filename":"ZoomIn.jsx","lineno":24,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>ZoomIn Plugin. Provides button to zoom in</p>","kind":"class","name":"ZoomIn","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>the class name for the button</p>","name":"cfg.className"},{"type":{"names":["object"]},"description":"<p>CSS to apply to the button</p>","name":"cfg.style"}],"longname":"plugins.ZoomIn","$longname":"plugins.ZoomIn"},{"comment":"/**\n  * ZoomOut Plugin. Provides button to zoom out\n  * @class  ZoomOut\n  * @memberof plugins\n  * @static\n  *\n  * @prop {object} cfg.style CSS to apply to the button\n  * @prop {string} cfg.className the class name for the button\n  *\n  */","meta":{"filename":"ZoomOut.jsx","lineno":23,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{}},"description":"<p>ZoomOut Plugin. Provides button to zoom out</p>","kind":"class","name":"ZoomOut","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>the class name for the button</p>","name":"cfg.className"},{"type":{"names":["object"]},"description":"<p>CSS to apply to the button</p>","name":"cfg.style"}],"longname":"plugins.ZoomOut","$longname":"plugins.ZoomOut"}]},{"comment":"/**\n * A container for tools.\n * @memberof plugins.containers\n * @class ToolsContainer\n * @static\n * @prop {object[]} tools An array of tools. Each tool have this shape. the first in order wins:\n * ```\n * {\n *    tool: {boolean|node} if boolean and true, renders the plugins itself, if object, renders this object as a react component,\n *    exclusive: if true, gets a selector to make it active or not, setting active property of the tool. tool.toggleControl | tool.name is used from controls state to retrieve the status of the tool\n *    toggle: same as above, but sets also bsStyle\n *    action: if present, this action will be bind to the context and associated to the tool as eventSelector (default onClick)\n * }\n * ```\n *\n */","meta":{"filename":"ToolsContainer.jsx","lineno":32,"columnno":0,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins/containers","code":{}},"description":"<p>A container for tools.</p>","memberof":"plugins.containers","kind":"class","name":"ToolsContainer","scope":"static","properties":[{"type":{"names":["Array.<object>"]},"description":"<p>An array of tools. Each tool have this shape. the first in order wins:</p>\n<pre class=\"prettyprint source\"><code>{\n   tool: {boolean|node} if boolean and true, renders the plugins itself, if object, renders this object as a react component,\n   exclusive: if true, gets a selector to make it active or not, setting active property of the tool. tool.toggleControl | tool.name is used from controls state to retrieve the status of the tool\n   toggle: same as above, but sets also bsStyle\n   action: if present, this action will be bind to the context and associated to the tool as eventSelector (default onClick)\n}\n</code></pre>","name":"tools"}],"longname":"plugins.containers.ToolsContainer","$longname":"plugins.containers.ToolsContainer"},{"comment":"","meta":{"range":[10741,10830],"filename":"QueryPanel.jsx","lineno":268,"columnno":4,"path":"/home/jenkins/workspace/MapStore/MapStore2-Stable-Releaser/web/client/plugins","code":{"id":"astnode100025131","name":"QueryPanel","type":"MethodDefinition","paramnames":["props"]},"vars":{"":null}},"undocumented":true,"name":"QueryPanel","longname":"QueryPanel","kind":"class","scope":"global","params":[],"$longname":"QueryPanel"}],"symbols":["pages","pages.Context","pages.ContextCreator","pages.ContextManager","pages.Dashboard","pages.GeoStory","pages.Importer","pages.Manager","pages.Maps","pages.MapViewer","pages.RulesManager","plugins","plugins.About","plugins.AddGroup","plugins.Annotations","plugins.Attribution","plugins.AutoMapUpdate","plugins.BackgroundSelector","plugins.BurgerMenu","plugins.containers.ToolsContainer","plugins.ContentTabs","plugins.Context","plugins.ContextCreator","plugins.ContextManager","plugins.Cookie","plugins.CreateNewMap","plugins.CRSSelector","plugins.Dashboard","plugins.DashboardEditor","plugins.Dashboards","plugins.DashboardSave","plugins.DashboardSaveAs","plugins.Details","plugins.DrawerMenu","plugins.Expander","plugins.FeaturedMaps","plugins.FeatureEditor","plugins.FeedbackMask","plugins.FilterLayer","plugins.FloatingLegend","plugins.Footer","plugins.Fork","plugins.FullScreen","plugins.Geostories","plugins.GeoStory","plugins.GeoStoryEditor","plugins.GeoStoryNavigation","plugins.GeoStorySave","plugins.GeoStorySave","plugins.GlobeViewSwitcher","plugins.GoFull","plugins.GroupManager","plugins.Header","plugins.HelpLink","plugins.Home","plugins.HomeDescription","plugins.Identify","plugins.Language","plugins.LayerDownload","plugins.LayerInfo","plugins.Locate","plugins.Login","plugins.Manager","plugins.ManagerMenu","plugins.Map","plugins.MapCatalog","plugins.MapEditor","plugins.MapExport","plugins.MapFooter","plugins.MapImport","plugins.MapLoading","plugins.Maps","plugins.MapSearch","plugins.MapTemplates","plugins.Measure","plugins.MeasurePanel","plugins.MeasureResults","plugins.MediaEditor","plugins.MetadataExplorer","plugins.MousePosition","plugins.NavMenu","plugins.Notifications","plugins.OmniBar","plugins.Playback","plugins.Print","plugins.QueryPanel","plugins.Redirect","plugins.Redo","plugins.RulesDataGrid","plugins.RulesEditor","plugins.RulesManager","plugins.Save","plugins.SaveAs","plugins.ScaleBox","plugins.ScrollTop","plugins.Search","plugins.SearchByBookmark","plugins.SearchServicesConfig","plugins.Settings","plugins.Share","plugins.StreetView","plugins.StyleEditor","plugins.Swipe","plugins.ThematicLayer","plugins.Timeline","plugins.TOC","plugins.TOCItemsSettings","plugins.Toolbar","plugins.Tutorial","plugins.Undo","plugins.UserExtensions","plugins.UserManager","plugins.UserSession","plugins.Widgets","plugins.WidgetsBuilder","plugins.WidgetsTray","plugins.ZoomAll","plugins.ZoomIn","plugins.ZoomOut","QueryPanel"]}},"app":{"title":"MapStore documentation","base":"/mapstore/docs/","entrance":"api:framework","routing":{"method":"path","caseSensitive":true},"meta":null,"server":"static"},"template":{"name":"Docma Default Template","version":"1.7.0","author":"Onur Yıldırım (onur@cutepilot.com)","license":"MIT","main":"index.html","options":{"title":"MapStore","sidebar":true,"collapsed":false,"outline":"tree","badges":true,"search":true,"navbar":true,"navItems":[{"iconClass":"ico-book","label":"Guides","items":[{"label":"User Guide","href":"https://mapstore.readthedocs.io/en/latest/user-guide/home-page/"},{"separator":true},{"label":"Developer's guide","href":"https://mapstore.readthedocs.io/en/latest/developer-guide/"}]},{"iconClass":"ico-mouse-pointer","label":"Reference","items":[{"label":"Framework","href":"api/framework"},{"separator":true},{"label":"JavaScript API","href":"api/jsapi"},{"separator":true},{"label":"Plugins","href":"api/plugins"}]},{"iconClass":"ico-md ico-download","label":"Download","href":"index.html","items":[{"label":"MapStore Releases","href":"https://github.com/geosolutions-it/MapStore2/releases","target":"_blank"},{"label":"MapStore tar.gz","href":"https://github.com/geosolutions-it/MapStore2/tarball/master","target":"_blank"},{"label":"MapStore .zip","href":"https://github.com/geosolutions-it/MapStore2/zipball/master","target":"_blank"}]},{"iconClass":"ico-md ico-github","label":"GitHub","href":"https://github.com/geosolutions-it/MapStore2","target":"_blank"}],"symbolMeta":false}},"_":{"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","logsEnabled":false}};
!function(){var e={};e.createChild=function(e,t,n){n=n||{};var o=document.createElement(t||"div");return Object.keys(n).forEach(function(e){o[e]=n[e]}),e.appendChild(o),o},e.getDocmaElem=function(){var t=document.getElementById(docma._.elementID);return t||(t=e.createChild(document.body,"div",{id:docma._.elementID})),t},e.getContentElem=function(){var e=document.getElementById(docma._.contentElementID);if(!e)throw new Error("Partial "+docma._.partials.content+' should have an element with id="'+docma._.contentElementID+'".');return e},e.loadCompiledContent=function(t){e.getDocmaElem().innerHTML=t},e.loadContent=function(t){e.getContentElem().innerHTML=t,e.scrollTo()},e.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var o=document.documentElement;return{top:n.top+window.pageYOffset-o.clientTop,left:n.left+window.pageXOffset-o.clientLeft}}}},e.scrollTo=function(t){if(!(t=(t||window.location.hash||"").replace(/^#/,"")))return void(document.body.scrollTop=0);var n=document.getElementById(t);n&&(document.body.scrollTop=e.getOffset(n).top)},e.fixAnchors=function(){docma.app.base&&setTimeout(function(){var e,t,n=document.querySelectorAll('a[href^="#"]');for(e=0;e<n.length;e++){t=n[e];var o=t.getAttribute("href");"#"===o.slice(0,1)&&o.length>1&&(o=window.location.pathname+(window.location.search||"")+o,t.setAttribute("href",o))}},50)},docma.dom=Object.freeze(e)}();
!function(){dust.filters=dust.filters||{},dust.filters.$pt=function(t){return docma.utils.parseTicks(t)},dust.filters.$pnl=function(t){return docma.utils.parseNewLines(t,{keepIfSingle:!0})},dust.filters.$pl=function(t){return docma.utils.parseLinks(t)},dust.filters.$tl=function(t){return docma.utils.trimLeft(t)},dust.filters.$p=function(t){return docma.utils.parse(t,{keepIfSingle:!0})},dust.filters.$nt=function(t){return docma.utils.normalizeTabs(t)},dust.filters.$desc=function(t){return docma.utils.parse(t.classdesc||t.description||"")},dust.filters.$def=function(t){return t.optional?String(t.defaultvalue):""};var t=/true|false|null|undefined|Infinity|NaN|\d+|Number\.\w+|Math\.(PI|E|LN(2|10)|LOG(2|10)E|SQRT(1_)?2)|\[.*?]|\{.*?}|new [a-zA-Z]+.*|\/.+\/[gmiu]*|Date\.(now\(\)|UTC\(.*)|window|document/;dust.filters.$val=function(e){var n=docma.utils.notate(e,"meta.code.value");if(void 0===n)return"";if("string"!=typeof n)return n;var i=docma.utils.notate(e,"type.names")||[];return!/['"`]/.test(n.slice(0,1))&&i.indexOf("String")>=0&&(1===i.length||-1===t.indexOf(n))?'"'+n+'"':n},dust.filters.$id=function(t){var e;if("string"==typeof t)e=t;else{e=(docma.utils.isConstructor(t)?"new-":"")+t.$longname}return e.replace(/ /g,"-")}}();
!function(){function o(o,e,n){return e?(o&&"/"!==e.slice(0,1)&&(e="/"+e),n&&"/"!==e.slice(-1)&&(e+="/"),e):o||n?"/":""}function e(o,e){e=void 0===e?window.location.search||"":e,"?"===e.slice(0,1)&&(e=e.slice(1)),o=o.replace(/[\[\]]/g,"\\$&");var n=new RegExp("&?"+o+"(=([^&#]*)|&|#|$)"),a=n.exec(e);return a&&a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):""}Object.defineProperty(docma,"location",{configurable:!1,get:function(){var n=o(!0,window.location.pathname,!0),a=o(!0,docma.app.base,!0),c=n;return n.slice(0,a.length)===a&&(c=n.slice(a.length-1,n.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:o(!0,docma.app.entrance,!1),base:a,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:n,pathname:c,path:c+(window.location.search||""),getQuery:e}}}),docma.location=Object.freeze(docma.location)}();
!function(){function e(e){return e&&""!==e.trim()?e:null}function n(e){return(e||"").replace(/([^>]+>)?~?(.*)/,"$2")}function t(e){return e}var r={};r.notate=function(e,n){if("object"==typeof e){var t,i=Array.isArray(n)?n:n.split("."),a=i[0];if(a)return t=e[a],i.length>1?(i.shift(),r.notate(t,i)):t}},r.getName=function(e){if(e.alias){var t=n(r.notate(e,"meta.code.name")||"");if(t)return t.replace(/.*?[#.~:](\w+)$/i,"$1")}return e.name},r.getLongName=function(e){var t=n(e.longname);if(e.alias){var i=n(r.notate(e,"meta.code.name")||"");if(!i)return t;var a=n(e.memberof||"");if(!a)return i;var o=new RegExp("^"+a+"[#\\.~:]"),s="instance"===e.scope?"#":".";return o.test(i)?i:a+s+i}return t},r.getFullName=r.getLongName,r.getCodeName=function(e){return n(r.notate(e,"meta.code.name")||"")||r.getLongName(e)},r.getSymbolByName=function(e,n){var t,i;for(t=0;t<e.length;t++){if(i=e[t],i.name===n||i.longname===n||r.getFullName(i)===n)return i;if(i.$members){var a=r.getSymbolByName(i.$members,n);if(a)return a}}return null},r.isDeprecated=function(e){return e.deprecated},r.isGlobal=function(e){return"global"===e.scope},r.isNamespace=function(e){return"namespace"===e.kind},r.isModule=function(e){return"module"===e.kind},r.isClass=function(e){return!r.isConstructor(e)&&("class"===e.kind||"ClassDeclaration"===r.notate(e,"meta.code.type"))},r.isConstructor=function(e){return"class"===e.kind&&"MethodDefinition"===r.notate(e,"meta.code.type")},r.isStaticMember=function(e){return"static"===e.scope},r.isStatic=r.isStaticMember,r.isInner=function(e){return"inner"===e.scope},r.isInstanceMember=function(e){return"instance"===e.scope},r.isMethod=function(e){var n=r.notate(e,"meta.code.type");return"function"===e.kind||"MethodDefinition"===n||"FunctionExpression"===n},r.isFunction=r.isMethod,r.isInstanceMethod=function(e){return r.isInstanceMember(e)&&r.isMethod(e)},r.isStaticMethod=function(e){return r.isStaticMember(e)&&r.isMethod(e)},r.isProperty=function(e){return"member"===e.kind},r.isInstanceProperty=function(e){return r.isInstanceMember(e)&&r.isProperty(e)},r.isStaticProperty=function(e){return r.isStaticMember(e)&&r.isProperty(e)},r.isTypeDef=function(e){return"typedef"===e.kind},r.isCustomType=r.isTypeDef,r.isEnum=function(e){return e.isEnum},r.isReadOnly=function(e){return e.readonly},r.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},r.isPrivate=function(e){return"private"===e.access},r.isProtected=function(e){return"protected"===e.access},r.isUndocumented=function(e){return!e.comments},r.hasDescription=function(n){return Boolean(e(n.classdesc)||e(n.description))},r.getTypes=function(e){if("class"===e.kind)return"class";var n=r.notate(e,"type.names")||[];return n=n.map(function(e){return e.replace(/\.</g,"<")}).join("|"),e.isEnum?"enum<"+n+">":n},r.getReturnTypes=function(e){var n=e.returns;if(!Array.isArray(n))return"void";var t,i=n.reduce(function(e,n){return t=r.notate(n,"type.names"),Array.isArray(t)?e.concat(t):e},[]);return i.length>0?i.join("|"):"void"},r.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},r.parseTicks=function(e){return e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,n,t){return r.normalizeTabs(r._wrapEscapeCode(t,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,n,t){return r._wrapEscapeCode(t)})},r.parseNewLines=function(e,n){return n=n||{},r._tokenize(e,function(e,t){if(t)return e;var r=e.split(/\n{2,}/);return r.length<=1&&n.keepIfSingle?e:r.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},r.parseLinks=function(e,n){n=n||{};var t=/\{@link +([^}]*?)\}/g,i=e.replace(t,function(e,t){var r,i,a=t.split("|");return 1===a.length?r=i=a[0].trim():(r=a[0].trim(),i=a[1].trim()),'<a href="'+r+'"'+(n.target?' target="'+n.target+'"':"")+">"+i+"</a>"});return r.parseTicks(i)},r.parse=function(e,n){return n=n||{},e=r.trimLeft(e),e=r.parseNewLines(e,n),e=r.parseTicks(e),r.parseLinks(e,n)},r.normalizeTabs=function(e){var n=e.match(/^\s*/gm),t=1/0;if(n.forEach(function(e,n){e=e.replace(/\t/g,"  "),n>0&&(t=Math.min(e.length,t))}),t!==1/0){var r=new RegExp("^\\s{"+t+"}","g");e=e.replace(r,"")}e=e.replace(/^\s*/,"");var i;return e.replace(/(\n+)(\s+)/gm,function(e,n,t){return i=t.replace(/\t/g,"  "),i=new Array(i.length-i.length%2+1).join(" "),n+i})},r.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var n=r.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return r.isConstructor(e)&&(n+=" constructor"),r.isMethod(e)&&(n+=" method"),r.isProperty(e)&&(n+=" property"),n.replace(/[><"'`\n\r]/g,"").toLowerCase()},r.getCodeFileInfo=function(e){return{filename:r.notate(e,"meta.filename"),lineno:r.notate(e,"meta.lineno"),path:r.notate(e,"meta.path")}},r.listType=function(e){return e.map(function(e){return r._wrapEscapeCode(e)}).join(", ")},r.listTypeDesc=function(e){if(!e||0===e.length)return"";var n,t=e.map(function(e){return n=r.parse(e.description||"",{keepIfSingle:!0}),n&&(n="&nbsp;&nbsp;—&nbsp;&nbsp;"+n),r._wrapEscapeCode(e.type.names.join("|"))+n});return t.length>1?"<ul>\n"+t.join("</li>\n<li>")+"\n</ul>":t},r._find=function(e,n){if(!e||!n)return null;var t,r,i=null;for(t=0;t<e.length;t++)if((r=e[t])&&"object"==typeof r){for(var a in n)if(void 0!==n[a]&&n.hasOwnProperty(a)){if(n[a]!==r[a]){i=null;break}i=r}if(i)break}return i},r._assign=function(e,n,t){e=e||{};var r;for(r in n)n.hasOwnProperty(r)&&(t?Object.defineProperty(e,r,{enumerable:!0,value:n[r]}):e[r]=n[r]);return e},r._values=function(e){if(Array.isArray(e))return e;var n,t=[];for(n in e)e.hasOwnProperty(n)&&t.push(e[n]);return t},r._wrapEscapeCode=function(e,n){return e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;"),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e},r._tokenize=function(e,n){"function"!=typeof n&&(n=t);if(e.indexOf("```")<0)return[n(e,!1)];var r,i="```".length,a="",o="",s=[],u=!1;for(r=0;r<e.length;r++)a+=e[r],o+=e[r],a.length>i&&(a=a.slice(-i)),"```"===a&&(u=!u,u?(s.push(n(o.slice(0,-i),!1)),o=a):(s.push(n(o,!0)),o=""));return s},docma.utils=r}();
!function(){function t(t,e){l.info("Event:",t,e?e[0]:""),y.trigger(t,e)}function e(t,n){if(n&&!(u.indexOf(n)<0)){if(t)docma.app.routing.caseSensitive||(t=t.toLowerCase());else{if(n!==e.Type.API)return;t=f}var o=p._find(docma.routes,{type:n,name:t});o&&p._assign(this,o)}}function n(t,e){dust.render(t,docma,function(t,n){if(t)throw t;m.loadCompiledContent(n),"function"==typeof e&&e()})}function o(){t(docma.Event.Render,[docma.currentRoute]),d&&(t(docma.Event.Ready),d=!1)}function r(o,r){docma._.currentRoute=e.create(null),n(docma._.partials.notFound,function(){if(t(docma.Event.Render,[null]),m.scrollTo(),"function"==typeof r)return r(404);throw new Error("Page or content not found for route: "+JSON.stringify(o))})}function a(){if(s){var t=sessionStorage.getItem("redirectPath")||null;if(t)return sessionStorage.removeItem("redirectPath"),l.info("Redirecting to:",t),page.redirect(t),!0}return!1}function i(t){var e=t||window.location.search;return/^[?&]/.test(e)&&(e=e.slice(1)),e||null}var c,u,d=!1,s="path"===docma.app.routing.method,f="_def_",p=docma.utils,m=docma.dom,l={};["log","info","warn","error"].forEach(function(t){!function(){l[t]=function(){docma._.logsEnabled&&console[t].apply(console,arguments)}}()}),docma.addFilter=function(t,e){if(docma.filterExists(t))throw new Error('Filter "'+t+'" already exists.');return dust.filters[t]=e,docma},docma.removeFilter=function(t){return delete dust.filters[t],docma},docma.filterExists=function(t){return"function"==typeof dust.filters[t]};var y=new EventEmitter;docma.Event={Ready:"ready",Render:"render",Route:"route"},docma.on=function(t,e){return y.on.apply(y,arguments),docma},docma.once=function(){return y.once.apply(y,arguments),docma},docma.off=function(){return y.off.apply(y,arguments),docma},docma.addListener=docma.on,docma.addListenerOnce=docma.once,docma.removeListener=docma.off,Object.defineProperty(docma,"currentRoute",{configurable:!1,get:function(){return docma._.currentRoute}}),Object.defineProperty(docma,"documentation",{configurable:!1,get:function(){return docma._.documentation}}),Object.defineProperty(docma,"symbols",{configurable:!1,get:function(){return docma._.symbols}}),e.Type={API:"api",CONTENT:"content"},u=p._values(e.Type),e.prototype.exists=function(){return Boolean(this.id)},e.prototype.isEqualTo=function(t){return!!(t&&t.exists()&&this.exists())&&t.path===this.path},e.prototype.isCurrent=function(){return this.isEqualTo(docma.currentRoute)},e.prototype.apply=function(){return this.type===e.Type.API?(docma._.documentation=docma.apis[this.name].documentation,docma._.symbols=docma.apis[this.name].symbols):(docma._.documentation=null,docma._.symbols=null),t(docma.Event.Route,[this]),docma.render(this),this},e.prototype.toString=function(){return JSON.stringify(this)},e.create=function(t,n){return new e(t,n)},e.fromID=function(t){if("string"!=typeof t)return l.warn("Route ID is not a string: "+t),new e(null);var n=t.split(":");return new e(n[1],n[0])},e.fromQuery=function(t){if(!t)return new e(null);var n=t.split("&")[0].split("="),o=n[0].toLowerCase();return new e(n[1],o)},Object.defineProperty(docma,"Route",{configurable:!1,get:function(){return e}}),docma.fetch=function(t,e){var n=new XMLHttpRequest;n.onreadystatechange=function(){if(4===n.readyState){var o=200===n.status?n.responseText:"";return l.log("XHR GET:",n.status,t),e(n.status,o)}},n.open("GET",t,!0),n.send()},docma.render=function(t,a){if(!t||!t.exists())return r(t,a);if(!t.isEqualTo(docma.currentRoute)){docma._.currentRoute=t;var i="function"==typeof a;t.type===e.Type.API?n(docma._.partials.api,function(){o(),i&&a(200),m.fixAnchors(),m.scrollTo()}):docma.fetch(t.contentPath,function(e,c){if(404===e)return r(t,a);n(docma._.partials.content,function(){m.loadContent(c),o(),i&&a(e),m.fixAnchors()})})}},docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),s&&(page("(/)?api/:apiName?",function(t,n){var o=t.params.apiName||f,r=e.create(o,e.Type.API);if(!r||!r.exists())return n();r.apply()}),page("(/)?:content",function(t,n){var o=t.params.content,r=e.create(o,e.Type.CONTENT);if(!r||!r.exists())return n();r.apply()})),page("(/)?",function(t,n){a()||setTimeout(function(){var o,r=i(t.querystring);if(s){if(r)return n();o=c}else l.log("Query-string:",r),o=r?e.fromQuery(r):c;if(!o||!o.exists())return n();o.isCurrent()||o.apply()},100)}),page("*",function(t){l.warn("Unknown Route:",t.path),e.create(null).apply()}),l.info("Docma SPA Configuration:"),l.info("App Title:          ",docma.app.title),l.info("Routing Method:     ",docma.app.routing.method),l.info("App Server:         ",docma.app.server),l.info("Base Path:          ",docma.app.base),l.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){d=!0,c=e.fromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),l.info("Docma SPA loaded!")}}();
docma = Object.freeze(docma);